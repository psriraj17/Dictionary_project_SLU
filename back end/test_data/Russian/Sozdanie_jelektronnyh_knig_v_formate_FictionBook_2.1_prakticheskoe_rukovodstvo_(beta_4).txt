Аннотация: Книга предназначена для пользователей, желающих самостоятельно создавать и редактировать электронные книги в популярном формате FictionBook. Подробно описан сам формат FB и программные средства, предназначенные для работы с ним.


---------------------------------------------


 М.И. Кондратович
 (Юзич)
 СОЗДАНИЕ ЭЛЕКТРОННЫХ КНИГ В ФОРМАТЕ
 FictionBook 2.1:
 ПРАКТИЧЕСКОЕ РУКОВОДСТВО


 Все категоричные высказывания и утверждения в книге являются личным мнением автора, и, ни в коем случае, не претендуют на истину в последней инстанции.



 Предуведомление


 Данное произведение распространяется в электронной форме с ведома и согласия автора на некоммерческой основе при условии сохранения целостности и неизменности текста, включая сохранение настоящего уведомления. Любое коммерческое использование настоящего текста без ведома и прямого согласия автора НЕ ДОПУСКАЕТСЯ.
 Цитирование возможно только со ссылкой на первоисточник. При цитировании более одного абзаца, для текста, в который будут помещены цитаты, должна быть предусмотрена возможность свободного распространения.
 Этот файл является незаконченной бета-версией книги, и, стало быть, в нем могут присутствовать некритичные ошибки и погрешности.




 Предисловие




От автора

 Электронные книги заинтересовали меня практически сразу после знакомства с ПК.
 Сначала скабрезные тексты о Штирлице, перегнанные на допотопный компьютер БК c не менее допотопного ЕС-1840, затем книги с минских BBS. Сокровища на дисках «Библиотека в кармане» и «HarryFAN», пиршество онлайн-библиотек…
 О формате FB2 я узнал несколько лет назад, и поначалу, не оценил его по достоинству. В то время мне казалось, что для хранения электронных книг нет ничего лучше, чем форматированный текст в кодировке DOS-866.
 Однако более детальное знакомство быстро заставило меня пересмотреть свои взгляды. А когда окончательно «распробовал» формат, у него стало на одного горячего приверженца больше.
 Пытаясь внести свою лепту в популяризацию FB2, в 2006 г. я написал цикл публикаций для «Компьютерной Газеты», которые прошли почти незамеченными. Поэтому было решено найти этим материалам лучшее применение, замахнувшись на написание книги.
 К великому сожалению, в ходе творческого процесса очень быстро выяснилось, что я не обладаю производительностью Александра Дюма, который мог принимать гостей, не прекращая строчить очередное произведение. Книга писалась урывками, в свободное от основной работы и хобби время.
 Однако, пусть ни шатко, ни валко, но процесс был доведен до конца. Что получилось, судить вам.
 Разумеется, сей опус не является ни всеобъемлющим, ни лишенным недостатков.
 В первую очередь, справедливые нарекания несомненно, вызовет то, что при описании редактирования книги я ориентировался на морально устаревший FB Editor, а не на более современный и продвинутый FB Writer. Дело в том, что сам я до сих пор продолжаю работать в старом добром FB Editor 1.0, его возможности меня не то чтобы удовлетворяют, но, скажем так, пока их хватает. К тому же, проект FBW на момент выхода книги находится в состоянии «закрыт» и перспективы его более чем эфемерны.
 А «подпирающий» FB Writer продукт компании «ЛитРес» еще слишком сырой, чтобы заняться его детальным описанием.
 Эта книга необычна также тем, что написана и развивается по принципу софта. То есть, альфа, бета, пререлиз и так далее, пока автору не надоест. Конечно, это не самый лучший вариант для книги, но, в противном случае, она бы добралась к читателю гораздо позже. А то и совсем не добралась…


Зачем вообще нужна эта книга?

 Такой вопрос может задать любой продвинутый пользователь. И где-то он будет прав.
 Ни сам формат FictionBook, ни программные средства для работы с ним не представляют из себя ничего сложного.
 Однако, судя по количеству вопросов «Как сделать книжку?», «Как мне сделать то-то и то-то», на форумах FictionBook.org и сетевых библиотек, необходимость в качественном руководстве назрела давно.
 Разрозненной информации по FictionBook в Сети достаточно. Но ее еще надо суметь отыскать.
 Эта книга была написана, в первую очередь, для тех, у кого не хватает времени перебирать страницы wiki или просеивать форум официального сайта, в поисках ответов на свои вопросы.
 Искренне надеюсь, что она станет неплохим подспорьем для начинающих.


Оффтопик.



«А зачем мне все это нужно?»

 Вы любите читать, вы быстро привыкли к электронным книгам, и ваш новый день чаще всего начинается с визита в онлайн-библиотеку: что новенького.
 У нормального человека, если он не законченный эгоист, привыкший только потреблять, рано или поздно возникнет желание как-то поддержать все это дело.
 Можно просто взять и послать денег. Автору полюбившейся книги или, что тоже хорошо, держателю электронной библиотеки.
 А можно самому начать делать электронные книги. Больше хороших книг — популярнее формат — еще больше хороших книг. Замкнутый, но совсем не порочный круг!
 Кроме того, у вас может оказаться редкая книга, которую можно и нужно сделать достоянием общества.




 Введение


 По мере распространения персональных компьютеров и совершенствования носителей, очень быстро обнаружилось, что текстовую информацию крайне удобно хранить в электронном виде.
 Первоначально коллекции текстов были сравнительно небольшими, и размещались на компьютерных досках объявлений (BBS).  [1] 
 А с совершенствованием средств распознавания текста (OCR), дело было поставлено на поток.
 Особенно буйно, в силу особого отношения к авторскому праву, это явление расцвело в русскоязычной части Интернета.
 При поддержке энтузиастов феномен набрал невиданный размах. Любительские коллекции текстов стремительно трансформировались в огромные библиотеки, содержащие тысячи произведений. В одной только библиотеке Альдебарана ежедневно появляются десятки новых книг.
 Нынешний читатель привередлив. Его уже не устроит подслеповатый 14'' монитор, на котором в свое время мы читали присланные из ФИДО тексты о том, как размножаются ежики. К его услугам высококачественные ЭЛТ- и ЖК-дисплеи, КПК, продвинутые мобильные телефоны (смартфоны), специализированные устройства для чтения. Современный софт для просмотра текстов предоставляет такие функции как сглаживание шрифтов, выделение заголовков, позволяет качественно сформатировать текст, вплоть до отображения на экране развернутой книги.
 Конечно, переломить себя, и перейти с «бумаги» на e-book очень непросто. Испытано на себе. Но зато потом… Доходит до того, что когда читаешь бумажную книгу, непроизвольно пытаешься вызвать функцию поиска или кликнуть по гиперссылке…
 Вначале для создания электронных книг использовались обычные текстовые файлы. Простая последовательность ASCII-кодов, каждый из которых соответствовал либо символу, либо управляющему коду. Главным достоинством текста была максимальная простота просмотра и обработки. Текст можно вывести на экран или на печать простой командой «copy»!
 Но довольно скоро выяснилось, что возможностей текстовых файлов для подготовки качественных книг недостаточно. Нужно было как-то выделять размер и гарнитуру шрифта, форматирование абзацев и т.д.
 Для этого в текст стали вставлять вначале управляющие esc-последовательности,  [2] а затем и тэги.  [3] Просмотр и обработка таких файлов стала возможна лишь с помощью соответствующего программного обеспечения.
 Итогом попыток создать формат, максимально идентичный бумажному изданию стал Portable Document Format (PDF), предложенный фирмой Adobe. Он позволяет создать файл, на 100% аутентичный бумажной версии.
 Соответственно, для нормального просмотра PDF необходим большой экран. Что, собственно, и стало главным недостатком формата.
 Параллельно форматам электронных книг совершенствовались и средства просмотра. Появилось много различных специализированных электронных устройств для чтения книг, которые, впрочем, так и не получили широкого распространения.
 Последние несколько лет самым удобным устройством для чтения книг является КПК PocketPC.
 Правда, по массовости распространения он давно проигрывает мобильным телефонам, которые сейчас плавно трансформируются в коммуникаторы, но по качеству отображения текста равных ему практически нет.
 Что же касается специализированных устройств для чтения, то здесь все далеко не радужно.
 Замечательные девайсы Rocket eBook опередили свое время и не сумели завоевать сердца любителей чтения.
 А новейшие устройства на e-ink (Sony Jinke и iLiad), судя по всему, наступают на те же грабли. Высокая стоимость устройства, закрытые форматы с системой защиты «авторских прав», плюс букет неудобств в эксплуатации. Опять же, громоздкий формат книг… Все это вряд ли даст этим, без сомнения, интересным устройствам стать подлинно массовыми «читалками» и заметно потеснить бумажные книги.
 По всей видимости, в конце концов, эту нишу займут коммуникаторы. Именно они смогут стать тем устройством, совмещающим доступность, удобство чтения и массовость.




 Часть I
 Формат FictionBook и его место в мире электронной литературы



 § 1.1 Неизбежность перехода от книг бумажных к книгам электронным

 Одно из величайших изобретений человечества — печатная бумажная книга — медленно, но верно уходит в историю. Эпоха, начатая Иоганном Гутенбергом, Франциском Скориной и Иваном Фёдоровым, близится к своему закату.
 Электронные книги исключительно компактны и мобильны. На один компакт-диск можно поместить вполне приличную библиотеку. А если это DVD-диск, то библиотека будет более чем солидной. В мобильный телефон или коммуникатор можно закачать десятки, а то и сотни книг.
 Возможность поиска по цитате или ключевому слову, также крайне ценное свойство. Отпадает необходимость часами рыться в бумажных фолиантах.
 С распространением электронных книг исчезнет понятие «редкая книга». Читатель более не будет зависеть от каприза издателя, который может переиздать книгу, а может и отказаться. Видите ли, неформат-с… Пипл не хавает…
 Электронные книги очень демократичны. В услових тотальной компьютеризации, вы легко можете поделиться такой книжкой с другом, нисколько не опасаясь, что он испортит ее, или потеряет.
 Параллельно текстовым электронным книгам, растет популярность так называемых аудиокниг. Актер читает текст под ненавязчивую музыку. Запись сжимается в формат MP3 или аналогичный и распространяется на компакт-дисках.
 К аудиокнигам можно относиться по-разному. Но людям с ослабленным зрением, водителям, а также, тем, которым приходится долгое время проводить в пути, эти «книги», разумеется, придутся по вкусу.
 У бумажной книги есть только два неоспоримых преимущества — чтение без каких-либо специальных средств и сравнительная долговечность.
 Распространение портативной электроники, и появление емких, независимых от электросети (например, подзарядка через генератор, который можно вращать вручную), и, надеюсь, экологичных, источников питания, компенсирует первую выгоду. Что же касается долговечности, то здесь все гораздо сложнее. Речь идет не только о физическом старении носителей, но и о моральном устаревании форматов и стандартов хранения.
 Известен случай, когда, еще на заре лазерных компакт-дисков, на один такой носитель были записаны сканы редких манускриптов. Вящей сохранности ради. Но не прошло и десяти лет, как изменились стандарты записи, и, для того чтобы прочесть диск, понадобилась специальная аппаратура…
 Еще одним недостатком электронных книг, считается распространенное пиратство. А в Рунете эти понятия вообще стали почти синонимами…
 Да, тиражировать электронную книгу, на несколько порядков проще, чем бумажную. А все способы защиты от несанкционированного копирования, в первую очередь создают неудобства читателям.
 Но время не стоит на месте. Рано или поздно будет отработан механизм, позволяющий авторам получать свои гонорары. Собственно, попытки создать такие сервисы мы наблюдаем уже сейчас.
 Свою лепту внесет и технический прогресс. Когда электронные платежи будут простыми как мигание, и, хотя бы приблизятся по безопасности к платежам обычным, любителям халявы придется в срочном порядке обзаводиться губозакаточными машинками.
 Опасность грозит лишь так называемым правообладателям — издательствам и медиа-компаниям, которые паразитируют на авторах. Если автор сможет сам издавать свои произведения, выкладывая их в Сеть, получая за это достойные деньги, необходимость в издателях и тиражировщиках просто исчезнет…
 Постоянный рост цен на бумагу и полиграфические услуги также ускоряет переход на цифровые книги.
 Как итог — в не слишком отдаленном будущем бумажная книга станет некоей роскошью, уделом ценителей и эстетов. Подобно виниловым дискам, кинопленке и верховой езде.

 § 1.2 Многообразие форматов электронных книг

 Для начала давайте вспомним, что такое книга.
 Толковый словарь Ожегова трактует понятие «книга», как: «Произведение печати (в старину также рукописное) в виде переплетённых листов с каким-либо текстом».  [1.1] 
 Соответствует ли большинство форматов e-book этому определению?
 Весьма относительно. Электронная книга — вещь нематериальная. Набор битов в памяти компьютера, намагниченных частиц или микроскопических углублений на электронном носителе. Кроме того, надо как-то отделить книги от рабочих документов.
 Поэтому определение «электронная книга», должно звучать так:  «Текст (возможно илюстрированный), в цифровом формате,  специально подготовленный для чтения» .
 Чтобы оценить преимущества и недостатки того или иного формата, необходимо сформулировать свод требований к электронным книгам.
  Читабельность. Легкость и удобство чтения текста. Поскольку это обеспечивают программные и аппаратные средства для чтения, от самого формата требуются несколько иные качества, а именно два нижеследующих:
  Полиграфичность. Возможность отформатировать текст, выделить заголовки, вставить иллюстрации, содержание и. т.д. То есть, приблизиться к бумажным изданиям.
  Масштабируемость. Возможность читать e-book при разных разрешениях экрана и размерах рабочего окна.
  Кроссплатформенность. Электронная книга в идеале должна одинаково легко читаться на различных устройствах — от специализированной «читалки» до персонального компьютера.
  Конвертируемость. Очень важный параметр, учитывая постоянно меняющиеся стандарты, операционные системы и «железо».
  Гипертекст. Тоже весьма существенный для e-book параметр. Возможность мгновенно перейти в нужное место книги, щелкнув по ссылке.
  Возможность редактирования. Не обязательно, но желательно. Учитывая «какчество» текстов в онлайн-библиотеках. Хотя, для «лицензионных» книг, эта фича и не актуальна. Там достаточно возможности делать закладки и пометки на полях, предоставляемыми софтом для чтения.
 Профессиональный издатель обязательно бы добавил в этот список возможность установки DRM,  [1.2] но я лично считаю (и большинство читателей, без сомнения, согласятся со мной) что этот элемент совершенно излишний. Если дать волю издателям, они и на бумажные книги начнут ставить защиту, например, покрывать страницы гильоширной  [1.3] сеткой, чтобы затруднить распознавание текста программой OCR…


Обычный текст (plaintext) (.TXT)

 Текст — он и в Африке текст. Простая последовательность восьмибитных (как правило) кодов, каждый из которых соответствует либо символу, либо управляющему коду. Отличается лишь кодировкой и способом перевода строки.
  Полиграфичность . Низкая. Набор средств разметки у текста весьма невелик. Форматирование абзацев, отступы и выделение заглавными буквами — вот, пожалуй, и все.
  Масштабируемость . Все зависит, от того, как сформатирован текст. Если он аккуратно отформатирован по абзацам с выравниванием, то очень низкая. Если же разбиения на строки нет — «один абзац — одна строка» — тогда масштабируемость высокая.
  Кроссплатформенность . Практически абсолютная.
  Конвертируемость . Практически абсолютная.
  Гипертекст . Нет.
  Возможность редактирования . Абсолютная.
 Формат txt активно использовался на заре электроных библиотек, при создании всевозможных сборников книг («Библиотека в кармане», «HarryFan Text Collection», и прочие). Сейчас книги в формате txt можно найти, пожалуй, лишь в библиотеке Максима Мошкова, (да и то перед подачей их пользователю они преобразуются в HTML) и в некоторых небольших библиотеках.


Rich Text Format (.RTF)

 Этот формат был специально разработан компанией Micro$oft в 1987 году для переноса текста с разметкой из одной программы в другую. В таком качестве он используется и по сей день. RTF понимают практически все современные текстовые редакторы и издательские системы.
  Полиграфичность . Выше среднего.
  Масштабируемость . Почти абсолютная.
  Кроссплатформенность . Очень высокая.
  Конвертируемость . Очень высокая.
  Гипертекст . Нет.
  Возможность редактирования . Абсолютная.
 RTF до сих пор широко используется в русскоязычных онлайн-библиотеках. Главным образом, именно из-за его хорошей совместимости с различным программным обеспечением.


Документ Micro$oft Word (.DOC)

 Формат DOC — это внутренний формат Micro$oft Word и предназначен для хранения текстовых документов, подготовленных в этой программе. Распространенность Micro$oft Office и Micro$oft Word как его части, обусловила широкое распространение формата DOC.
  Полиграфичность . Высокая.
  Масштабируемость . Высокая.
  Кроссплатформенность . Ниже среднего.
  Конвертируемость . Высокая.
  Гипертекст . Присутствует.
  Возможность редактирования . Абсолютная.
 По скромному мнению автора, документы Word используют в качестве e-book только по одной причине — авторам книги (или сканнеристам ;)) ) просто-напросто лень конвертировать его в более удобочитаемый формат. 


Документы HTML (.HTM; .CHM; .MHT)

 Язык HTML (HyperText Markup Language) используется для отображения информации в сети Интернет.
  Полиграфичность. Высокая.
  Масштабируемость. Очень высокая.
  Кроссплатформенность . Практически абсолютная.
  Конвертируемость . Практически абсолютная.
  Гипертекст . Разумеется, есть.
  Возможность редактирования . Абсолютная.
 Хотя НTML позволяет неплохо оформить текстовый документ, он все же не слишком подходит для e-book. Далеко не всем нравится читать книги в браузере. При использовании же программы-ридера, HTML конвертируется в обычный текст и теряет все свои преимущества.
 А вот формат CHM, первоначально предназначавшийся для подготовки файлов справки к программному обеспечению, — дело иное. Компактность и высокая интерактивность делают его весьма удобным для различных электронных руководств и справочников.
 В частности, очень эффектно смотрятся в CHM компьютерные руководства издательства O'Reily.
 Однако, при всех этих достоинствах, у CHM есть и очень большой недостаток. Это формат  справки и он жестко привязан к Windows. Решит Micro$oft поменять формат справки в следующей версии «форточек» и с накопленным объемом книг придется попрощаться.


* * *

 У всех вышеперечисленных форматов есть один существенный недостаток — они ИЗНАЧАЛЬНО НЕ ПРЕДНАЗНАЧАЛИСЬ для создания электронных книг. Созданные на их основе файлы даже не являются книгами — это просто текстовые документы.
 Как ни странно, из этого же недостатка вытекает и достоинство — чтобы читать их не требуется специального программного обеспечения. Достаточно стандартных средств, встроенных в операционную систему.
 Форматы, описанные далее, уже требуют установки специальных программных средств для их просмотра.


Adobe Acrobat (.PDF).

 Первоначально PDF разрабатывался для нужд полиграфии. В основном для платформенно-независимого переноса макетов. В последние годы интенсивно продвигается как формат для создания e-book.
  Полиграфичность.  Абсолютная. Для того и был разработан. Как следствие, PDF-файлы могут быть весьма увесистыми.
  Масштабируемость. Низкая! На портативных устройствах читать PDF проблематично.
  Кроссплатформенность.  Cредняя.
  Гипертекст . Есть.
  Возможность редактирования. Низкая. К тому же, для этого нужно устанавливать громоздкий Adobe Acrobat.
 Основной аргумент против массового применения PDF для изготовления e-book — это большой объем файла и неудобство чтения на портативных устройствах.
 Впрочем, качественные книги и журналы, сформатированные на страницы размером более A5, трудновато читать даже на 21'' мониторах.

 ===============================
 Вообще, формат PDF предназначен, в первую очередь, ДЛЯ ВЫВОДА НА ПЕЧАТЬ.
 ===============================

 Существуют и другие форматы, аналогичные PDF. Например, формат Zinio, предназначенный специально для выпуска в электронном виде периодических изданий, в частности глянцевых журналов.


DeJaVU (.DJVU)

 Формат DJVU был создан компанией АТ&T специально для компактного представления информации в Internet. Подобно MP3 и Divx, он пришелся ко двору и произвел маленькую революцию в деле свободного распространения контента.
  Полиграфичность. Высокая.
  Масштабируемость. Весьма средняя. Зависит от того, насколько хорошо программа-просмотрщик поддерживает anti-aliasing.  [1.4] 
  Кроссплатформенность. Средняя.
  Конвертируемость. Ниже среднего. 
  Гипертекст . Есть подобие.
  Возможность редактирования . Средняя.
 Формально, файлы созданные с использованием DJVU трудно называть книгами. Это, по существу, растровый многостраничный графический файл. При его создании специальные алгоритмы отделяют текст от фона и иллюстраций, после чего они сжимаются с различным разрешением. Что и обеспечивает чрезвычайно высокое сжатие картинки (примерно 1:500) при более чем приемлемом качестве изображения. Эти свойства делают его идеальным для множества сканированных компьютерных (и не только) руководств и пособий, которыми сейчас завалены варезные сайты (такие книги еще называют «освобожденными» ;)) ). Ведь, если книга содержит примеры исходников программ, формулы, схемы или сложные таблицы, то даже незначительные ошибки при OCR могут непоправимо испортить ее. A DJVU позволяет представить книгу «как есть».
 Причем интересы читателей, привыкших парой щелчков копировать нужный кусок текста в буфер, тоже учтены. Последние версии формата DJVU могут содержат чисто текстовый слой.
 Справедливости ради, следует заметить, что DJVU, более чем хорошо справляющийся с текстами и штриховыми иллюстрациями, пасует перед цветными картинками и глянцевыми журналами. Выглядят такие издания в DJVU весьма непрезентабельно.


Закрытые специализированные форматы

 Существует довольно много форматов электронных книг, которые были созданы для одного конкретного устройства или программы.
 К ним можно отнести Rocket e-book (.rb), Micro$oft Reader (.lit), PalmDoc, MobiPocket (.prc) Jinke Book Wolf (.wol) и т.д. Плюс некоторые программы для чтения норовят сконвертировать текст в свой собственный, ни с чем не совместимый формат (IceBook Professional на PC, iSilo и Weasel на Palm и прочие). Правда, при близком рассмотрении оказывается, что это все те же HTML, RTF или txt (некоторое исключение составляет формат ExeBook, который конвертирует текст книги в исполняемый файл, содержащий набор растровых картинок), как правило, упакованные для компактности, и снабженные служебной областью, где могут храниться, например, закладки. Также (и чаще, чем хотелось бы) может быть добавлена DRM.
  Полиграфичность . Зависит от конкретного формата. Средняя или выше среднего.
  Масштабируемость . Средняя или выше среднего. 
  Кроссплатформенность . Низкая. Обычно такие форматы создаются для одного конкретного устройства или программы. Просмотр на PC или, соответственно, КПК нередко возможен только с помощью программ, написанных энтузиастами.
  Конвертируемость . Низкая. Обычно только через софт, опять же написанный энтузиастами.
  Гипертекст . Чаще всего есть.
  Возможность редактирования . Низкая или вообще никакая.
 И, наконец…


Специализированные открытые форматы на основе XML

 Что такое XML, подробно описано ниже. Сейчас нас интересуют лишь сравнительные характеристики формата.
  Полиграфичность. Высокая. Правда, всецело зависит от программы-ридера.
  Масштабируемость. Почти абсолютная.
  Кроссплатформенность . Практически абсолютная.
  Конвертируемость . Практически абсолютная.
  Гипертекст . Есть.
  Возможность редактирования . Как правило, абсолютная.
 Как видим, язык XML имеет наилучшее сочетание качеств, необходимых для e-book. Поэтому попытки делать e-book на его основе уже предпринимались неоднократно и небезуспешно.
 В отличие от txt, RTF, DOC, HTML, PDF, и т.д. которые однозначно ориентированы на  отображение или  хранение текстовых данных, форматы на основе XML позволяют  структурировать книгу.
 Известны форматы OEB (Open E-Book), DocBook и другие. Но наиболее популярным (по крайней мере, в Рунете) является FictionBook.

 § 1.3 Несколько слов о XML

 Расширяемый язык разметки — eXtensible Markup Language, был создан для хранения структурированных данных в текстовом формате. Теоретически файлы XML должны легко читаться как программным обеспечением, так и человеком.
 С использованием технологии XML можно записывать и обрабатывать практически любые данные, вне зависимости от их структуры и сложности.
 На базе XML уже создано большое количество подмножеств для решения конкретных задач. Например, есть реализация HTML средствами XML — XHTML, язык для записи математических формул и выражений (MathML), язык для химических формул, для медицинской электронной документации. Новый формат файлов пакета M$ Office 2007 представляет собой не что иное, как пачку XML-документов, которые сохраняются в одном архиве.
 Кроме того, поскольку любые данные в XML — это обычный текст, то и работать с ними можно как с текстом: готовить XML-документы в notepad, а в случае потери какой-либо части данных с остальными можно будет по-прежнему работать.
 В отличие от HTML, набор средств разметки (тэгов) в XML не фиксирован, и может быть произвольным.
 Разумеется, это должно как-то описываться. Поэтому в XML есть такое понятие, как «спецификация», DTD (Document Type Definition — описание типа документа) — документ, в котором описана структура XML-подмножества. В настоящее время на смену DTD пришла XML Schema.
 Если возникнет необходимость, XML легко преобразовать в любой другой формат. Для этого существует XSLT — eXtensible Stylesheet Language Transformation — расширяемый язык стилей.
 Вот, к примеру, реализация адресной книги на базе XML.

 <?xml version="1.0" encoding="UTF-8"?>
 <AddressBook>
 <contact>
 <persone>
 <name>Василий</name>
 <patronymic>Иванович<patronymic>
 <surname>Пупкин</surname>
 <address>пер. Кривоколенный, 5-15</address>
 <phone type="home">555-22-11</phone>
 <phone type="mobile">736-11-22</phone>
 <e-mail>pupkin@pisem.net</e-mail>
 </persone>
 </contact>
 <contact>
 <organization>
 <type-org>Кооператив</type-org>
 <name-org>Рога и Копыта</name-org>
 <address>ул. Малая Арнаутская, 12</address>
 <phone>202-33-20</phone>
 <phone>202-32-00</phone>
 <site>http://www.horn&hoof.com</site>
 <e-mail>mail@horn&hoof.com</e-mail>
 </organization>
 </contact>
 </AddressBook>

 Как видим, сам документ имеет древовидную структуру и состоит из вложенннных элементов.
 Первая строка является признаком XML и содержится во всех документах.
 Элемент — это данные, ограниченные парой тэгов. <tag>и </tag>.
 Кроме данных, элементы могут содержать в себе атрибуты — например, у элемента phone есть атрибут type, который может принимать фиксированные значения «home» и «mobile».
 Вместо пары тэгов для обозначения границ элемента может использоваться один тэг вида <tag/>, но тогда у такого элемента не может быть данных и вложенных элементов.
 Стандарт XML предписывает, чтобы у «дерева» элементов был корневой элемент, который будет содержать внутри себя все остальные. Корневой элемент должен быть единственным, то есть XML-документ, где два и больше корневых элементов, — это документ, сформированный неправильно.
 Как видим, все просто и понятно. Документ легко читается и редактируется, а при желании можно написать XSL, трансформирующий его в HTML или RTF.
 Давая свободу, XML одновременно предъявляет к документу гораздо более жесткие требования, чем HTML. Одно из ключевых понятий XML — «валидный» документ. Все элементы документа должны быть правильно закрыты, а вложенность их соответстовать спецификации. Конструкции типа <i>Text</i>, которые легко «проглатывает» HTML, в XML считаются фатальной ошибкой.

 § 1.4 Формат FictionBook — стандарт де-факто для электронных книг

 Итак, формат FictionBook…
 Сам формат был разработан Дмитрием Грибовым с несколькими соавторами, при поддержке группы энтузиастов.
 Он полностью базируется на XML.
 На данный момент это самый прогрессивный и перспективный формат для электронных книг. Единственный его недостаток, как признают сами авторы, бОльшие временные затраты при подготовке начального текста. Впрочем, он легко окупается удобством чтения.
 В отличие от всех не-XML форматов, которые ориентированы на хранение или  оформление текстовых данных, в FictionBook упор сделан на  структурирование документа. То есть с помощью тэгов выделяются области текста: это — глава, это — заголовок, это — эпиграф, а вот это — цитата. А как все «это» будет выглядеть на экране, зависит от программы-ридера. Впрочем, на случай, если потребуется оформить книгу строго определенным образом, предусмотрена возможность присоединения таблицы стилей.
 Используя формат FictionBook можно создать четко структурированную книгу (именно  книгу , а не просто электронный документ), которую удобно читать в специализированной программе-читалке, а в случае надобности можно легко сконвертировать в любой популярный формат. Как правило, без потери разметки.
 Возможности FictionBook позволяют выделить отдельные элементы книги: заголовки, эпиграфы, стихи, цитаты, вставить в текст иллюстрации и сноски, и, что немаловажно, внести все выходные данные книги.
 Все компоненты книги (описание, непосредственно текст, иллюстрации) хранятся в одном файле, который можно упаковать архиватором. Большинство программ-читалок для FB2 умеют напрямую работать с архивами.
 За прошедшие несколько лет стандарт уже успел устояться. Несмотря на то, что он включает сравнительно немного элементов, в него трудно добавить что-то действительно новое и полезное.
 Еще одно достоинство FictionBook — книги в этом формате отлично поддаются каталогизации. Опираясь на встроенную систему описания книги, можно с легкостью создать как домашнюю, так и сетевую электронную библиотеку любого масштаба.
 Учитывая объем электронных книг, накопленный до появления FictionBook, первый вопрос, который возникает при знакомстве с новым форматом — это возможность конвертирования книг из других форматов.
 Никаких проблем. Разработанные авторами формата и энтузиастами программные средства позволяют эффективно конвертировать книги из форматов txt, HTML, RTF (doc).
 Если же, наоборот, возникнет необходимость преобразовать книгу в формате FictionBook в другой формат, то «штатный» конвертор FB2Any неплохо справляется с преобразованием FB2 не только в классические txt и RTF, но и в специализированные форматы Roсket Book, iSilo, Micro$oft Reader. Еще не успел устояться новомодный формат для аппаратных читалок Wolf, как появились сразу несколько программ для конвертации книг fb2 в этот формат.
 Таким образом, формат FictionBook обладает всеми качествами, чтобы стать единым стандартом для e-Book. И, фактически, уже стал им. Использование FB2 в русскоязычных онлайн-библиотеках, подтвердило его функциональность и жизнеспособность.
 В нынешнем состоянии формат наиболее подходит для художественной литературы. Что совершенно не мешает использовать его для технических, методических, справочных изданий, а также для периодики.
 После прочтения этого панегирика у читателя возникает справедливый вопрос:


Если FictionBook так хорош, то почему им не пользуются все?

 Потому что развитие и, самое главное, продвижение формата целиком зависит от горстки энтузиастов.
 Недосуг стало Михаилу Мацневу заниматься HaaliReader и FB Tools и все фактически замерло.
 Впрочем, сейчас намечаются перемены к лучшему. Появляются новые программы для чтения, конверторы.
 Второй причиной, пожалуй можно признать, необходимость ручного труда при подготовке книги. Автоматическая конвертация, позволяющей сделать качественную книгу просто невозможна. К тому же, до недавних пор, существующие программные средства для конвертации и редактирования особенным дружелюбием к пользователю не отличались.


Версия 2.1

 В версию 2.1 формата было введено много новых и полезных элементов, как-то:
 1. В заголовке появился новый необязательный раздел <src-title-info>, полностью идентичный по структуре <title-info>. Он используется в том случае, если книга переводная, и позволяет описать оригинал.
 2. Четыре новых способа форматирования текста: <sub> (нижний индекс), <sup> (верхний индекс), <code>(преформатированный текст), <strikethrough> (зачеркнутый текст).
 3. <text-author>теперь может содержать любое форматирование и ссылки, наравне с <p>.
 4. Добавлена схема управления конвертацией платных документов.
 5. Переработан список жанров.
 6. Добавлен новый элемент — таблицы!
 7. Добавлены атрибуты title и id для <image/>, предназначенный для подписей к картинкам и ссылок на картинки соответственно. Inline картинки и картинки в <coverpage>, по прежнему, никаких id и подписей не имеют. 
 К несчастью, эти полезные новшества не были оперативно поддержаны софтом для чтения и редактирования.
 Поэтому все нововведения оказались «сбоку припеку». Они не используются, и кое-кто из пользователей уже поговаривает, что неплохо бы их вообще убрать. Что, надеюсь, сделано не будет.
 Отсюда напрашивается категорический вывод, что выпуск давно анонсированной версии формата 3.0 должен сопровождаться выходом обновленных версий  стандартной читалки, и не менее стандартного редактора. И читалка, и редактор, должны корректно поддерживать все особенности формата и, кроме того, они должны быть  совместимы по формату закладок . Последняя «фича» крайне важна для вычитки текстов. Также, в обязательном порядке, должен быть, опять же, стандартный, пакет скриптов для сетевых библиотек. Иначе все улучшения и нововведения просто теряют всякий смысл.




 Часть II
 Подробное описание формата FictionBook



 § 2.1 Структура файла FictionBook.
 Базовые понятия

 Книга FictionBook представляет собой XML-файл.
 Структурно этот файл можно разделить на три части.
 1) Desсription — заголовок (описание) книги;
 2) Body — непосредственно текст книги. В книге может быть несколько body.
 3) Binary — необязательная часть. Содержит бинарные файлы, в кодировке BASE64.  [2.1]  Как правило, это картинки.

 § 2.2 Пример книги в формате FictionBook

 Cпецификация (schema) FictionBook находится на сайте Дмитрия Грибова, а также входит в комплект FB Tools. Поэтому размещать ее в электронной версии книги смысла нет.
 Но пример книги в формате FictionBook привести необходимо:

 <?xml version="1.0" encoding="windows-1251"?>
 <FictionBook xmlns="http://www.gribuser.ru/xml/fictionbook/2.0" xmlns:l="http://www.w3.org/1999/xlink">
  <description>
   <title-info>
    <genre>reference</genre>
    <author>
     <first-name>Имя автора</first-name>
     <last-name>Фамилия автора</last-name>
     <nickname>Юзич</nickname>
    </author>
    <book-title>Пример книги в формате FictionBook 2.1</book-title>
    <annotation>
     <p>Это пример книги в формате FictiionBook</p>
    </annotation>
    <date value="2006-04-14">14 апреля 2006 г.</date>
    <lang>ru</lang>
   </title-info>
   <document-info>
    <author>
     <nickname>Юзич</nickname>
    </author>
    <program-used>FB Tools</program-used>
    <date value="2006-04-14">2006-04-14</date>
    <id>1E693E16-8A80-4391-9800-C1A91A5E29A7</id>
    <version>1.0</version>
    <history>
     <p>v 1.0 — создание книги (Юзич)</p>
    </history>
   </document-info>
  </description>
  <body>
   <title>
    <p>Юзич</p>
    <p>ПРИМЕР КНИГИ В ФОРМАТЕ FictionBook 2.1</p>
   </title>
   <epigraph>
    <p>Это эпиграф</p>
    <text-author>Автор эпиграфа</text-author>
   </epigraph>
   <section>
    <title>
     <p>Первая секция</p>
    </title>
    <p>Секции обычно содержат текст.</p>
    <empty-line/>
    <p>Текст может разделяться пустыми строками.</p>
    <subtitle>Подзаголовок</subtitle>
    <p>Или подзаголовками.</p>
   </section>
   <section>
    <title>
     <p>Вторая секция</p>
    </title>
    <section>
     <title>
      <p>Первая вложенная секция</p>
     </title>
     <p>Текст может быть <strong>полужирным</strong>или <emphasis>курсивным</emphasis>.</p>
     <p>Содержать <a l:href="#Sect3">линки</a> и <a l:href="#note01" type="note">[сноски]</a>.</p>
     <p>В тексте могут быть картинки.</p>
     <image l:href="#sampl.png"/>
     <empty-line/>
    </section>
    <section>
     <title>
      <p>Вторая вложенная секция</p>
     </title>
     <cite>
      <p>Это цитата.</p>
      <text-author>Автор цитаты.</text-author>
     </cite>
     <p>Снова текст.</p>
    </section>
   </section>
   <section id="Sect3">
    <title>
     <p>Третья секция</p>
    </title>
    <p>Стихи:</p>
    <poem>
     <title>
      <p>Парус</p>
     </title>
     <stanza>
      <v>А у дельфина взрезано брюхо винтом.</v>
      <v>Выстрела в спину не ожидает никто.</v>
      <v>На батарее нету снарядов уже.</v>
      <v>Надо быстрее на вираже.</v>
     </stanza>
     <stanza>
      <v>Но парус! Порвали парус!</v>
      <v>Каюсь! Каюсь! Каюсь!</v>
     </stanza>
     <text-author>Владимир Высоцкий</text-author>
    </poem>
    <p>Снова обычный текст.</p>
   </section>
  </body>
  <body name="notes">
   <title>
    <p>Примечания</p>
   </title>
   <section id="note01">
    <title>
     <p>1</p>
    </title>
    <p>Текст сноски.</p>
   </section>
  </body>
  <binary id="sampl.png" content-type="image/png">iVBORw0KGgoAAAANSUhEUgAAAAkAAAAICAMAAAAcEyWHAAAABGdBTUEAAK/INwWK6QAAABl0
 RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAGUExURQEBAf///+tZAq0AAAAY
 SURBVHjaYmBAAEZGRjDGzsKvDgYAAgwABR4AH2mwMFgAAAAASUVORK5CYII=</binary>
 </FictionBook>


 § 2.3 Элементы описания книги.
 Базовые структурные элементы

 В самом начале любого файла книги идет признак формата XML
 < ?xml version="1.0" encoding="windows-1251"? >
 Здесь указана сигнатура принадлежности к формату XML, его версия и кодировка файла. Для русскоязычных FictionBook это обычно windows-1251 или utf-8.  [2.2] 
 За ним в обязательном порядке следует:


Элемент FictionBook

 Корневой элемент.
  Cинтаксис : < FictionBook >content< /FictionBook >.
 Фактически, всегда используется в виде:
 < FictionBook xmlns="  http://www.gribuser.ru/xml/fictionbook/2.0  " xmlns:l="  http://www.w3.org/1999/xlink  " >
 content
 < /FictionBook >.
  Используется в элементах : корневой элемент
  Вложенные элементы :  stylesheet ,  description ,  body ,  binary 
  Количество вхождений : одно
  Атрибуты : xmlns
  Версия формата : 2.0
  Пример : см. пример книги FictionBook, § 2.2


Элемент stylesheet

 Список стилей, позволяющих конкретно определить, как будет выглядеть книга на экране устройства для чтения. До последнего времени читалками не поддерживался и практически не использовался. Лишь в конце 2007 года появился CoolReader 3.09 с экспериментальной поддержкой stylesheet.
  Cинтаксис : < stylesheet >content< /stylesheet >.
  Используется в элементах :  FictionBook 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует.
  Атрибуты : type
  Версия формата : 2.0
  Пример :

  <stylesheet type="text/css">
  .body{font-family : Verdana, Geneva, Arial, Helvetica, sans-serif;}
  .p{margin:0.5em 0 0 0.3em; padding:0.2em; text-align:justify;}
  </stylesheet>



Элемент description

 Заголовок (описание) книги.
  Cинтаксис : < description >content< /description >.
  Используется в элементах :  FictionBook 
  Вложенные элементы :  title-info ,  src-title-info ,  document-info ,  publish-info ,  custom-info ,  output 
  Количество вхождений : одно
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <description>
   <title-info>
    <genre>nonfiction</genre>
    <author>
     <first-name>Имя автора</first-name>
     <last-name>Фамилия автора</last-name>
    </author>
    <book-title>Название книги</book-title>
    <date>2007 г.</date>
    <lang>ru</lang>
   </title-info>
   <document-info>
    <author>
     <nickname>Юзич</nickname>
    </author>
    <program-used>FB Tools</program-used>
    <date value="2006-07-10">2006-07-10</date>
    <id>46C35002-014D-4AE4-8FE4-5E7881D72B0D</id>
    <version>1.0</version>
   </document-info>
  </description>



Элемент body

 Тело книги. Допускаются дополнительные body для примечаний и дополнительных материалов.
  Cинтаксис : < body >content< /body >.
  Используется в элементах :  FictionBook 
  Вложенные элементы :  image ,  title ,  epigraph ,  section 
  Количество вхождений : одно и более
  Атрибуты : name
  Версия формата : 2.0
  Пример :

 <body>
   <title>
    <p>Заголовок</p>
   </title>
   <section>
    <p>Текст.</p>
   </section>
  </body>



Элемент binary

 Содержит бинарные элементы, присоединяемые к файлу книги. Как правило, это картинки.
  Cинтаксис : < binary >content< /binary >.
  Используется в элементах :  FictionBook 
  Вложенные элементы : нет
  Количество вхождений : произвольное
  Атрибуты : id (обязательный), content-type (обязательный)
  Версия формата : 2.0
  Пример :

 <binary id="sampl.png" content-type="image/png">
 iVBORw0KGgoAAAANSUhEUgAAAAkAAAAICAMAAAAcEyWHAAAABGdBTUEAAK/INwWK6QAAABl0
 RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAGUExURQEBAf///+tZAq0AAAAY
 SURBVHjaYmBAAEZGRjDGzsKvDgYAAgwABR4AH2mwMFgAAAAASUVORK5CYII=
 </binary>


 § 2.4 Элементы описания книги (description). Элементы первого уровня



Элемент title-info

 Содержит базовую информацию о книге (заголовок, информация об авторе и переводчике, аннотация, вхождение в серию и т.д.)
  Cинтаксис : < title-info >content< /title-info >.
  Используется в элементах :  description 
  Вложенные элементы :  genre ,  author ,  book-title ,  annotation ,  keywords ,  date ,  coverpage ,  lang ,  src-lang ,  translator ,  sequence 
  Количество вхождений : одно
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

   <title-info>
    <genre>nonfiction</genre>
    <author>
     <first-name>Cергей</first-name>
     <last-name>Лукьяненко</last-name>
    </author>
    <book-title>Спектр</book-title>
    <date>2004 г.</date>
    <lang>ru</lang>
   </title-info>



Элемент src-title-info

 Аналогично  src-title-info  содержит базовую информацию о книге-оригинале (для переводных книг).
 Здесь наблюдается интересный момент: как  title-info , так и  src-title-info содержат элемент  src-lang . Хотя, по логике, его следовало бы упразднить.
  Cинтаксис : < src-title-info >content< /src-title-info >.
  Используется в элементах :  description 
  Вложенные элементы :  genre ,  author ,  book-title ,  annotation ,  keywords ,  date ,  coverpage ,  lang ,  src-lang ,  translator ,  sequence 
  Количество вхождений : одно или отсутствует
  Атрибуты : нет 
  Версия формата : 2.1
  Пример :

 <src-title-info>
    <genre>adv_maritime</genre>
    <author>
     <first-name>Robert</first-name>
     <middle-name>Loevis</middle-name>
     <last-name>Stivenson</last-name>
    </author>
    <book-title>Treasure Island</book-title>
    <date>1896</date>
    <lang>en</lang>
   </src-title-info>



Элемент document-info

 Информация о самом файле FictionBook — кем, когда  и с помощью каких программных средств создана данная электронная книга.
  Cинтаксис : < document-info >content< /document-info >.
  Используется в элементах :  description 
  Вложенные элементы :  author ,  program-used ,  date ,  src-url ,  src-ocr ,  id ,  version ,  history 
  Количество вхождений : одно
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <document-info>
    <author>
     <nickname>Юзич</nickname>
     <email>Duzz-scrbs@rambler.ru</email>
    </author>
    <program-used>FB Tools</program-used>
    <date value="2006-06-29">2006-05-22</date>
    <src-url>http://hungryewok.narod.ru/</src-url>
    <src-ocr>OCR: Голодный Эвок Грызли; SpellCheck: Юзич</src-ocr>
    <id>86F8C27D-9F15-4DE7-8751-12AE057CA4DC</id>
    <version>1.0</version>
    <history>
     <p>v 1.0 — вычитка, конвертация в FB2 (Юзич)</p>
    </history>



Элемент publish-info

 Информация о бумажном оригинале книги, если таковой существовал в природе.
  Cинтаксис : < publish-info >content< /publish-info >.
  Используется в элементах :  description 
  Вложенные элементы :  book-name ,  publisher ,  city ,  year ,  isbn ,  sequence 
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <publish-info>
    <book-name>С. Павлов «Лунная радуга»</book-name>
    <publisher>Детская литература</publisher>
    <city>Москва</city>
    <year>1989</year>
    <isbn>5-08-000842-3</isbn>
    <sequence name="Библиотека приключений и научной фантастики"/>
   </publish-info>



Элемент custom-info

 Произвольная дополнительная информация.
  Cинтаксис : < custom-info >текст< /custom-info >.
  Используется в элементах :  description 
  Вложенные элементы :
  Количество вхождений : одно или отсутствует
  Атрибуты : info-type (обязательный) 
  Версия формата : 2.0
  Пример :

   <custom-info info-type="На правах рекламы:">Сайт Голодного Эвока Грызли — лучшее в Рунете собрание книг по «Звёздным Войнам»!</custom-info>


 § 2.5 Элементы описания книги (description). Элементы второго уровня



Элемент genre

 Жанр произведения.
 Содержимое элемента строго фиксировано и определяется файлом FictionBookGenres.xsd, входящим в состав спецификации FictionBook.
 Список жанров с переводом приведен в Приложении В.
  Cинтаксис : < genre >фиксированное значение< /genre >.
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы : нет
  Количество вхождений : одно или более
  Атрибуты : match
  Версия формата : 2.0
  Пример :

 <genre>sf_action</genre>
    <genre match="30">sf_space</genre>



Элемент author

 Автор произведения или создатель электронной книги.
 Согласно спецификации, существуют два варианта правильного заполнения элемента. В первом случае,  обязательно должны быть заполнены поля «Имя» и «Фамилия» (элементы  first-name и  last-name ). Во втором — поле «Ник» (элемент  nickname ).
  Cинтаксис : < author >Content< /author >.
  Используется в элементах :  title-info ,  src-title-info ,  document-info 
  Вложенные элементы :  first-name ,  middle-name ,  last-name ,  nickname ,  home-page ,  email 
  Количество вхождений : одно или более
  Атрибуты : нет
  Версия формата : 2.0

 <author>
     <first-name>Кондратович </first-name>
     <middle-name>Михаил</middle-name>
     <last-name>Иосифович</last-name>
     <nickname>Юзич</nickname>
     <home-page>http://www.yuzich.narod.ru</home-page>
     <email>yuzich@yandex.ru</email>
    </author>



Элемент book-title

 Название книги.
  Cинтаксис : < book-title >текст< /book-title >.
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы :
  Количество вхождений : одно
  Атрибуты : нет
  Версия формата : 2.0
  Пример :


Элемент annotation

 Аннотация. Краткое текстовое описание книги
  Cинтаксис : < annotation >content< /annotation >.
  Используется в элементах :  title-info ,  src-title-info ,  section 
  Вложенные элементы :  p ,  poem ,  cite ,  subtitle ,  table ,  empty-line 
  Количество вхождений : одно или отсутствует
  Атрибуты : id
  Версия формата : 2.0
  Пример :


Элемент keywords

 Список ключевых слов, с помощью которых библиотечный софт может искать книгу.
 Слова должны быть характерными для конкретного произведения.
  Cинтаксис : < keywords >текст< /keywords >.
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <keywords>Лунная радуга, Анарда, экзот, гурм, МУКБОП, Япет, Казаранг</keywords>



Элемент date

 Дата написания книги или создания файла.
 Список ключевых слов, с помощью которых библиотечный софт может искать книгу.
 Элемент  date предусмотрен также и в стихотворениях, но из-за отсутствия поддержки в редакторах там не используется.
  Cинтаксис : < date >текст< /date >.
  Используется в элементах :  title-info ,  src-title-info ,  document-info ,  poem 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : value
  Версия формата : 2.0
  Пример :

 <date value="1989-01-01">Красноярск, июнь 1989</date>



Элемент coverpage

 Картинка обложки. Содержит внутри элемент  image , в который непосредственно и находится ссылка на bin-объект. Элементов  image может быть несколько.
  Cинтаксис : < coverpage ><image/>< /coverpage >
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы :  image 
  Количество вхождений :  одно или отсутствует.
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

    <coverpage>
     <image l:href="#cover.jpg"/></coverpage>



Элемент lang

 Язык, на котором написана книга.
 Список возможных значений приведен в Приложении Г.
  Cинтаксис : < lang >по возможности, фиксированное значение< /lang >
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы : нет
  Количество вхождений : одно
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

    <lang>ru</lang>



Элемент src-lang

 Язык, на котором написан оригинал (для переводных книг).
 Список возможных значений приведен в Приложении Г.
  Cинтаксис : < src-lang >по возможности, фиксированное значение< /src-lang >
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <src-lang>en</src-lang>



Элемент translator

 Информация о переводчике  (для переводных книг).
  Cинтаксис : < translator >content< /translator >
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы :  first-name ,  middle-name ,  last-name ,  nickname ,  home-page ,  email 
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемент author


Элемент sequence

 Серия, в которую входит книга. Допускается неограниченное число вложенных серий.
  Cинтаксис : < sequence/ >или < sequence >< sequence/ >< /sequence >
  Используется в элементах :  title-info ,  src-title-info 
  Вложенные элементы :  sequence 
  Количество вхождений : произвольное
  Атрибуты : name (обязательный), number
  Версия формата : 2.0
  Пример :

 <sequence name="Звёздные Войны">
     <sequence name="Адмирал Траун" number="2"/>
    </sequence>



Элемент program-used

 Программное обеспечение, использовавшееся при создании книги.
  Cинтаксис : < program-used >текст< /program-used >
  Используется в элементах :  document-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

    <program-used>FB Tools, EmEditor, hands.drv & brain.sys</program-used>



Элемент src-url

 Ссылка на сайт, если исходный текст книги был скачан из Интернета.
  Cинтаксис : < src-url >текст< /src-url >
  Используется в элементах :  document-info 
  Вложенные элементы : нет
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <src-url>http://www.natahaus.ru</src-url>



Элемент src-ocr

 Информация о людях, которые сканировали (набирали) и вычитывали книгу.
  Cинтаксис : < src-ocr >текст< /src-ocr >
  Используется в элементах :  document-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <src-ocr>OCR Zmiy; SpellCheck Юзич</src-ocr>



Элемент id

 Уникальный идентификационный номер книги.
  Cинтаксис : < id >текст< /id >
  Используется в элементах :  document-info 
  Вложенные элементы : нет
  Количество вхождений : одно
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <id>B3627A48-7F9C-400E-8CD7-0159B75F1A14</id>



Элемент version

 Номер версии файла.
  Cинтаксис : < version >число< /version >
  Используется в элементах :  document-info 
  Вложенные элементы : нет
  Количество вхождений : одно
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <version>1.0</version>



Элемент history

 История изменений,  вносившихся в файл.
  Cинтаксис : < history >Content< /history >
  Используется в элементах :  document-info 
  Вложенные элементы :  p ,  poem ,  cite ,  subtitle ,  table ,  empty-line 
  Количество вхождений : одно или отсутствует
  Атрибуты : id
  Версия формата : 2.0
  Пример :

    <history>
     <p>v 1.0 — вычитка, конвертация в FB2 (Юзич)</p>
     <p>v 1.1 — дополнительное форматирование (Faiber)</p>
     <p>v 1.2 — дополнительная вычитка (Юзич)</p>
     <p>v 1.3 — дополнительная вычитка  (Юзич)</p>
     <p>v 1.4 — окончательная (надеюсь!) вычитка  (Юзич)</p>
    </history>



Элемент book-name

 Название бумажного оригинала.
  Cинтаксис : < book-name >текст< /book-name >
  Используется в элементах :  publish-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  publish-info 


Элемент publisher

 Название издательства, выпустившего бумажный оригинал.
  Используется в элементах :  publish-info 
  Cинтаксис : < publisher >текст< /publisher >
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  publish-info 


Элемент city

 Город, в котором был издан бумажный оригинал.
  Cинтаксис :< city >текст< /city >
  Используется в элементах :  publish-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  publish-info 


Элемент year

 Год выхода бумажного оригинала
  Cинтаксис : < year >текст< /year >
  Используется в элементах :  publish-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  publish-info 


Элемент isbn

 ISBN-код бумажного оригинала.
  Cинтаксис : < isbn >текст< /isbn >
  Используется в элементах :  publish-info 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  publish-info 

 § 2.6 Элементы описания книги (description). Элементы третьего уровня (информация об авторе)



Элемент first-name

 Имя автора книги или документа, а также переводчика.
  Cинтаксис : < first-name >текст< /first-name >
  Используется в элементах :  author ,  translator 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  author , § 2.5


Элемент middle-name

 Отчество автора книги или документа, а также переводчика.
  Cинтаксис : < middle-name >текст< /middle-name >
  Используется в элементах :  author ,  translator 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  author , § 2.5


Элемент last-name

 Фамилия автора книги или документа, а также переводчика.
  Cинтаксис : < last-name >текст< /last-name >
  Используется в элементах :  author ,  translator 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  author , § 2.5


Элемент nickname

 Ник (сетевой псевдоним) автора книги или документа, а также переводчика.
  Cинтаксис : < nickname >текст< /nickname >
  Используется в элементах :  author ,  translator 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  author , § 2.5


Элемент home-page

 Адрес персонального сайта автора книги или документа, а также переводчика.
  Cинтаксис : < home-page >текст< /home-page >
  Используется в элементах :  author ,  translator 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  author , § 2.5


Элемент email

 Адрес электронной почты автора книги или документа, а также переводчика.
  Cинтаксис : < email >текст< /email >
  Используется в элементах :  author ,  translator 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты :  нет
  Версия формата : 2.0
  Пример : см.  пример элемента  author , § 2.5

 § 2.7 Элементы тела книги (body).



Элемент image

 Картинка.
  Cинтаксис : < image/ >
  Используется в элементах :  body ,  section ,  p 
  Вложенные элементы : нет
  Количество вхождений : одно или отсутствует
  Атрибуты : alt, title, id, href (обязательный).
  Версия формата : 2.0
  Пример :


Элемент title

 Заголовок книги, раздела или стихотворения. С версии 2.1 — еще и картинки.
  Cинтаксис : < title >content< /title >
  Используется в элементах :  body ,  section ,  stanza ,  poem ,  image  (2.1)
  Вложенные элементы :  p ,  empty-line 
  Количество вхождений : одно или отсутствует
  Атрибуты : нет
  Версия формата : 2.0
  Пример :


Элемент epigraph

 Эпиграф.
  Cинтаксис : < epigraph >content< /epigraph >
  Используется в элементах :  body ,  section 
  Вложенные элементы :  p ,  poem ,  cite ,  empty-line ,  text-author 
  Количество вхождений : произвольное
  Атрибуты : id
  Версия формата : 2.0
  Пример :

 <epigraph>
    <p>Черт побери! Как и все другие, наказанные нами, вы управляетесь законом, который богачи придумали для собственной безопасности. Эти трусливые собачьи души не имеют смелости каким-либо иным способом защитить то, что они мошеннически нахапали. Проклятья и кровь на имуществе этих продувных бестий. Между нами единственное различие: они обирают бедняков под покровительством закона, не так ли? А мы грабим богатых, рассчитывая только на свою храбрость.</p>
    <text-author>Чарльз Беллами, пират</text-author>
 </epigraph>



Элемент section

 Раздел.
  Cинтаксис : < section >content< /section >
  Используется в элементах :  body ,  section 
  Вложенные элементы :  title ,  epigraph ,  image ,  annotation ,  section ,  p ,  poem ,  subtitle ,  cite ,  empty-line ,  table 
  Количество вхождений : одно и более
  Атрибуты : id
  Версия формата : 2.0
  Пример :

   <section>
   <title>
    <p>Заголовок секции</p>
   </title>
    <p>Текст.</p>
   </section>


 § 2.8 Элементы раздела книги (section).
 Элементы первого уровня.



Элемент cite

 Цитата. Отрывок текста из другого произведения.
 В FictionBook с поспощью тэга  cite также выделяются письма, записки, надписи, списки и еще много чего.
  Cинтаксис : < cite >content< /cite >
  Используется в элементах :  section ,  epigraph ,  annotation ,  history 
  Вложенные элементы :  p ,  poem ,  empty-line ,  subtitle ,  table ,  text-author 
  Количество вхождений : произвольное
  Атрибуты : id
  Версия формата : 2.0
  Пример :

 <cite>
     <p>«Что происходит в Зеленом Доме? По не подтвержденным, но и не опровергнутым сведениям несколько дней назад внушительная группа боевых ведьм совершила стремительный вояж за пределы Тайного Города. Куда именно? Как ни странно, это осталось загадкой: наши белокурые красавицы изменили традиционной словоохотливости и держат рот на замке. Остальные Великие Дома не проявляют беспокойства…»</p>
     <text-author>(«Тиградком»)</text-author>
    </cite>



Элемент poem

 Стихи, песни, баллады и т.д.
  Cинтаксис : < poem >content< /poem >
  Используется в элементах :  section ,  epigraph ,  cite ,  annotation ,  history 
  Вложенные элементы :  title ,  epigraph ,  stanza ,  text-author ,  date 
  Количество вхождений : произвольное
  Атрибуты : id
  Версия формата : 2.0
  Пример :

     <stanza>
      <title>
       <p>В тяжелой мантии торжественных обрядов…</p>
      </title>
      <v>В тяжелой мантии торжественных обрядов,</v>
      <v>Неумолимая, меня не встреть.</v>
      <v>На площади, под тысячами взглядов,</v>
      <v>Хочу я умереть.</v>
     </stanza>
     <stanza>
      <v>Чтобы лился на волосы и в губы</v>
      <v>Полуденный огонь.</v>
      <v>Чтоб были флаги, чтоб гремели трубы</v>
      <v>И гарцевал мой конь…</v>
     </stanza>
     <text-author>Марина Цветаева,</text-author>
     <date>Феодосия, 1913</date>
    </poem>



Элемент p

 Обычный абзац текста.
  Cинтаксис : < p >content< /p >
  Используется в элементах :  annotation ,  history ,  section ,  epigraph ,  cite 
  Вложенные элементы :  a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : id, style
  Версия формата : 2.0
  Пример :

 <p>Cамый обычный текст. </p>



Элемент subtitle

 Подзаголовок.
  Cинтаксис : < subtitle >content< /subtitle >
  Используется в элементах :  section ,  stanza ,  annotation ,  history 
  Вложенные элементы :  strong ,  emphasis ,  style ,  a ,  strikethrough ,  sub ,  sup ,  code ,  image 
  Количество вхождений : произвольное
  Атрибуты : id, style
  Версия формата : 2.0
  Пример :

 <subtitle>* * *</subtitle>



Элемент empty-line

 Пустая строка. Может использоваться как «немой» заголовок.
  Cинтаксис : < empty-line/ >
  Используется в элементах :  section ,  epigraph ,  cite ,  title ,  annotation ,  history 
  Вложенные элементы : нет
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <p>После этого абзаца должна идти пустая строка.</p>
 <empty-line/>



Элемент table

 Таблицы.
 На момент написания книги поддерживается только читалками CoolReader и AlReader. 
  Cинтаксис : < table >content< /table >
  Используется в элементах :  section ,  epigraph ,  annotation ,  history 
  Вложенные элементы :  tr 
  Количество вхождений : произвольное
  Атрибуты : id, style
  Версия формата : 2.1
  Пример :

     <table>
      <tr>
       <th>Заголовок 1-го столбца</th>
       <th>Заголовок 2-го столбца</th>
       <th colspan="2">Объединенный заголовок 3-го и 4-го столбцов</th>
       <th>Заголовок 5-го столбца</th>
      </tr>
      <tr>
       <td align="center">1-я ячейка 1-го столбца</td>
       <td rowspan="2">1-я и 2-я ячейки 2-го столбца</td>
       <td align="right">1-я ячейка 3-го столбца</td>
       <td align="right">1-я ячейка 4-го столбца</td>
       <td align="left">1-я ячейка 5-го столбца</td>
      </tr>
      <tr>
       <td align="center">2-я ячейка 1-го столбца</td>
       <td colspan="2"><p>2-я ячейка 3-го и 4-го столбцов</p></td>
       <td align="right">2-я ячейка 5-го столбца</td>
      </tr>
     </table>

 Как видим, допускается размещение текста как непосредственно в самих элементах ячеек таблицы ( td ,  th ), так и предварительно заключеннного в элемент  p . 
 Впрочем, это, вероятнее всего, огрех валидатора FBE. Ради эксперимента, я поместил в элемент  td элемент  cite . И валидатор это спокойно переварил.

 § 2.9 Элементы раздела книги (section).
 Элементы второго уровня.



Элемент stanza

 Строфа стихотворения.
  Cинтаксис :  stanza >content< /stanza >
  Используется в элементах :  poem 
  Вложенные элементы :  title ,  subtitle ,  v 
  Количество вхождений : одно и более
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  poem 


Элемент text-author

 Автор эпиграфа, цитаты или стихов.
  Cинтаксис : < text-author >content< /text-author >
  Используется в элементах :  cite ,  epigraph ,  poem 
  Вложенные элементы :  strong ,  emphasis ,  style ,  a ,  strikethrough ,  sub ,  sup ,  code ,  image 
  Количество вхождений : произвольное
  Атрибуты : id, style
  Версия формата : 2.0
  Пример : см.  пример элемента  poem 


Элемент v

 Cтрока в строфе стихотворения.
  Cинтаксис : < v >content< /v >
  Используется в элементах :  stanza 
  Вложенные элементы :   a ,  code ,  emphasis ,  strikethrough ,  strong ,   style ,    sub ,  sup ,   image 
  Количество вхождений : одно и более
  Атрибуты : нет
  Версия формата : 2.0
  Пример : см.  пример элемента  poem 

 § 2.10 Элементы таблиц



Элемент tr

 Строка таблицы.
  Cинтаксис : < tr >content< /tr >
  Используется в элементах :  table 
  Вложенные элементы :   th ,  td 
  Количество вхождений : одно и более
  Атрибуты : aligh
  Версия формата : 2.1
  Пример : см.  пример элемента  table 


Элемент th

 Заголовок столбца таблицы.
  Cинтаксис : < th >content< /th >
  Используется в элементах :  tr 
  Вложенные элементы :     a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,   image 
  Количество вхождений : одно или отсутствует
  Атрибуты : id, style, colspan, rowspan, aligh
  Версия формата : 2.1
  Пример : см.  пример элемента  table 


Элемент td

 Ячейка столбца таблицы.
  Cинтаксис : < td >content< /td >
  Используется в элементах :  tr 
  Вложенные элементы :     a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : одно и более
  Атрибуты : id, style, colspan, rowspan, aligh
  Версия формата : 2.1
  Пример : см.  пример элемента  table 

 § 2.11 Элементы абзаца (стилевые элементы)



Элемент a

 Ссылка или сноска.
  Cинтаксис : < a >content< /a >
  Используется в элементах :  code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,  v 
  Вложенные элементы :      code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : href (обязательный), type
  Версия формата : 2.0
  Пример :

 <p>см. <a l:href="#primer">пример</a></p>



Элемент code

 Преформатированный текст. В читалках должен отображаться моноширинным шрифтом.
 Может использоваться, чтобы выделить исходники программ и примеры.
 На момент написания книги поддерживается только читалкой CoolReader. Причем, поддерживается  неправильно — как элемент аналогичный сite, хотя это такое же стилевое выделение, как strong или emphasis.
  Cинтаксис : < code >content< /code >
  Используется в элементах :   code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,  v 
  Вложенные элементы :      a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.1
  Пример :

 <code>Преформатированный текст</code>



Элемент emphasis

 Наклонный шрифт (курсив).
  Cинтаксис : < emphasis >content< /emphasis >
  Используется в элементах :   code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,  v 
  Вложенные элементы :      a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <emphasis>Курсивный текст</emphasis>



Элемент strikethrough

 Перечеркнутый шрифт.
 На момент написания книги читалками не поддерживается.
  Cинтаксис : < strikethrough >content< /strikethrough >
  Используется в элементах :   code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,  v 
  Вложенные элементы :      a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.1
  Пример :

 <p><strikethrough>Эта сволочь</strikethrough>, этот нехороший человек…</p>



Элемент strong

 Полужирный шрифт.
  Cинтаксис : < strong >content< /strong >
  Используется в элементах :   code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,   v 
  Вложенные элементы :      a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.0
  Пример :

 <strong>Полужирный текст</strong>



Элемент style

 Заранее определенный стиль для отображения книги.
  Cинтаксис : < style >content< /style >
  Используется в элементах :   code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,  v 
  Вложенные элементы :      code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : name (обязательный)
  Версия формата : 2.0
  Пример :

 <p>Этот текст будет <style name="italic">курсивным </style></p>
 <p>— <style name="foreign lang" xml:lang="fr">Dieu, quelle virulente sortie</style></p>



Элемент sub

 Нижний индекс (subscript).
 На момент написания книги читалками не поддерживается.
  Cинтаксис : < sub >content< /sub >
  Используется в элементах :   code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,  v 
  Вложенные элементы :      a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.1
  Пример :

 <p>x<sub>1</sub>+x<sub>2</sub>=y</p>



Элемент sup

 Верхний индекс (superscript).
 На момент написания книги читалками не поддерживается.
  Cинтаксис : < sup >content< /sup >
  Используется в элементах :   code ,  emphasis ,  p ,  strikethrough ,  strong ,  style ,  subtitle ,  sub ,  sup ,  th ,  td ,  v 
  Вложенные элементы :      a ,  code ,  emphasis ,  strikethrough ,  strong ,  style ,  sub ,  sup ,  image 
  Количество вхождений : произвольное
  Атрибуты : нет
  Версия формата : 2.1
  Пример :

 <p>E=mC<sup>2</sup></p>


 § 2.12 Элементы для платных книг

 В версию 2.1 были введены специальные элементы для создания платных книг. Поскольку сам формат средств криптозащиты не предусматривает, обрабатывать эти тэги должен исключительно сервер библиотеки.
 К сожалению, или, вернее, к счастью, эти элементы до сих пор не нашли применения.


Элемент output

 Определяет способ вывода контента книги.
  Cинтаксис : < output >content< /output >
  Используется в элементах :   description 
  Вложенные элементы :  part ,  output-document-class 
  Количество вхождений : произвольное
  Атрибуты : mode (обязательный), currency, incude-all (обязательный)
  Версия формата : 2.1
  Пример :

 <output mode="free" include-all="deny">
 <part include="require" l:href="#half0_1"/>
 <part include="allow" l:href="#half0_2"/>
 <part include="allow" l:href="#half0_4_2"/>
 <part include="require" l:href="#half0_4_3"/>
 </output>
 <output mode="paid" price="3.14" currency="WMZ" include-all="require">
 <part include="deny" l:href="#half0_4_3"/>
 </output>



Элемент output-document-class

 Назначение неясно.
  Cинтаксис :< output-document-class >parts< /output-document-class >
  Используется в элементах :   output 
  Вложенные элементы :  part 
  Количество вхождений : произвольное
  Атрибуты : name, create, price
  Версия формата : 2.1
  Пример :


Элемент part

 Делит книгу на платные и бесплатные части.
  Cинтаксис :< part/ >
  Используется в элементах :   output 
  Вложенные элементы : нет
  Количество вхождений : произвольное
  Атрибуты : mode, include
  Версия формата : 2.1
  Пример : см.  пример элемента output

 § 2.13 Спецсимволы

 Некоторые символы в теле книги отображаются особым образом. Это нужно для предотвращения ошибок. Например, «<» и «>» зарезервированы для обозначения границ тэгов. Если их использовать в прямом виде как-то еще, то программа будет считать это ошибкой.
 Такие последовательности называются  предопределенными сущностями .
 Список таких символов в FictionBook крайне мал. Их, собственно, всего три.
 &amp; — &;
 &lt; — <;
 &gt ; — >;
 Cтандартные сущности XML &apos; и &quot; в FiсtionBook не используются и конвертируются в символы «'» и «"» соответственно.

 § 2.14 Список атрибутов элементов

 Многие элементы в FictionBook имеют дополнительные параметры — атрибуты.


Атрибут aligh

 Выравнивание текста в ячейке таблицы.
  Используется в элементах :  td ,  th ,  tr 
  Значение : фиксированное; left, right, center, justify
  Значение по умолчанию : left


Атрибут alt

 Назначение аналогично HTML — текст, отображающийся вместо картинки.
  Используется в элементах :  image 
  Значение : произвольная текстовая строка


Атрибут colspan

 Позволяет объединять столбцы таблиц.
  Используется в элементах :  th ,  td 
  Значение : произвольное целое число


Атрибут content-type

 Определяет тип содержимого элемента-контейнера  binary 
  Используется в элементах :  binary 
  Значение : фиксированное; image/png, image/jpeg, image/tiff, image/bmp, octet-stream


Атрибут create

 Назначение неясно.
  Используется в элементах :  output-document-class 
  Значение :


Атрибут currency

 Валюта, в которой определена цена платной книги.
  Используется в элементах :  output 
  Значение : ограниченно-произвольное


Атрибут href

 Ссылка. Как правило, внутри документа.
  Используется в элементах :  a ,  image 
  Значение : ссылка.


Атрибут id

 Метка, позволяющая ссылаться на элемент.
  Используется в элементах :  annotation ,  binary ,  cite ,  epigraph ,  image ,  p ,  poem ,  section ,  subtitle ,  table ,  td ,  text-author ,  th 
  Значение :  текстовая строка.


Атрибут info-type

 Характеризует произвольную информацию.
  Используется в элементах :  custom-info 
  Значение : произвольная текстовая строка.


Атрибут include

 Назначение неясно.
  Используется в элементах :  part 
  Значение :


Атрибут include-all

 Назначение неясно.
  Используется в элементах :  output 
  Значение : фиксированное


Атрибут match

 Определяет степень соответствия произведения выбранному жанру.
  Используется в элементах :  genre 
  Значение : целое число в диапазоне от 1 до 100


Атрибут mode

 Способ вывода платного документа
  Используется в элементах : output
  Значение :


Атрибут name

 Позволяет присвоить элементу имя. В отличие от метки (id), имя элемента используется исключительно программными средствами обработки документа.
  Используется в элементах :  body ,  sequence ,  output-document-class 
  Значение : произвольное


Атрибут number

 Порядковый номер книги в серии.
  Используется в элементах :  sequence 
  Значение : произвольное целое число


Атрибут price

 Цена платного документа
  Используется в элементах :  output-document-class 
  Значение : произвольное число c плавающей запятой


Атрибут rowspan

 Позволяет объединять строки таблицы.
  Используется в элементах :  th ,  td 
  Значение : произвольное целое число


Атрибут style

 Позволяет выбрать для элемента предопределенный стиль.
  Используется в элементах :  p ,  subtitle ,  table ,  td ,  text-author ,  th 
  Значение : произвольное; строка состоящая из латинских букв и цифр.
 Пример:

 <p style="text-align: right">Текст, выровненный по правому краю<p>
 <p style="background-color: black; color: white; margin-left: 20%; margin-right: 20%; margin-top: 10px; margin-bottom: 10px; line-height: 180% ">Текст: фон черный, цвет шрифта белый, отступы справа и слева 20 процентов, сверху и снизу — 10 пикселей, высота строки 180 процентов</p>



Атрибут title

 Позволяет добавить к рисунку заголовок (подпись)
  Используется в элементах :  image 
  Значение : произвольная текстовая строка


Атрибут type

 Определяет тип элемента.
  Используется в элементах :  a ,  stylesheet 
  Значение : фиксированное


Атрибут value

 Дата.
  Используется в элементах :  date 
  Значение : произвольная дата в формате YYYY-MM-DD


Атрибут xmlns

 Ссылка на спецификацию формата.
 Атрибут value:  FictionBook 
  Значение : жестко фиксированное

 § 2.15 Алфавитный список всех элементов FictionBook 2.1

 a  (§ 2.11) 
 annotation   (§ 2.5) 
 author   (§ 2.5) 
 binary   (§ 2.3) 
 body   (§ 2.3) 
 book-name   (§ 2.5) 
 book-title   (§ 2.5) 
 cite  (§ 2.8) 
 city   (§ 2.5) 
 code  (§ 2.11) 
 coverpage   (§ 2.5) 
 custom-info   (§ 2.4) 
 date   (§ 2.5) 
 description  ( § 2.3 )
 document-info   (§ 2.4) 
 email  (§ 2.6) 
 emphasis  (§ 2.11) 
 empty-line  (§ 2.8) 
 epigraph  (§ 2.7) 
 FictionBook   (§ 2.3 )
 first-name  ( § 2.6 )
 genre   (§ 2.5) 
 history   (§ 2.5) 
 home-page  (§ 2.6) 
 id   (§ 2.5) 
 isbn   (§ 2.5) 
 image ( § 2.7 )
 keywords   (§ 2.5) 
 lang   (§ 2.5) 
 last-name  (§ 2.6) 
 middle-name  (§ 2.6) 
 nickname  (§ 2.6) 
 output-document-class  (§ 2.12) 
 output ( § 2.12 )
 p  (§ 2.8) 
 part ( § 2.12 )
 poem  (§ 2.8) 
 program-used   (§ 2.5) 
 publish-info   (§ 2.4) 
 publisher   (§ 2.5) 
 section  (§ 2.7) 
 sequence   (§ 2.5) 
 src-lang   (§ 2.5) 
 src-ocr   (§ 2.5) 
 src-title-info   (§ 2.4) 
 src-url   (§ 2.5) 
 stanza  (§ 2.9) 
 strikethrough  (§ 2.11) 
 strong  (§ 2.11) 
 style  (§ 2.11) 
 stylesheet   (§ 2.3 )
 sub  (§ 2.11) 
 subtitle  (§ 2.8) 
 sup  (§ 2.11) 
 table  (§ 2.8) 
 td  (§ 2.10) 
 text-author  (§ 2.9) 
 th  (§ 2.10) 
 title  (§ 2.7) 
 title-info  (§ 2.4) 
 tr  (§ 2.10) 
 translator  (§ 2.5) 
 v  (§ 2.9) 
 version   (§ 2.5) 
 year   (§ 2.5) 




 Часть III
 Конвертирование книг из других форматов


 Cлучаи, когда книга готовится в формате FictionBook  изначально , (как  вот эта книга, :) ) чрезвычайно редки. Обычно имеется готовый текст, который необходимо конвертировать в формат FictionBook.
 Вообще, создание книги в формате FictionBook можно разделить на три этапа.
 1) подготовка исходного текста;
 2) конвертация текста в формат FictionBook;
 3) вычитка, структурирование и окончательная доводка книги.
 Первый этап включает набор текста или сканирование исходного документа с распознаванием. Или же выдирание текста из PDF, или, какого-нибудь экзотического формата, например, ExeBook. Также сюда входит первичная вычитка текста.
 Второй этап — конвертация в формат FB2.
 Третий этап — доводка книги. По моему скромному мнению, самый тонкий и важный этап.
 Дело в том, существующие программные средства позволяют конвертировать документы txt, html, doc(rtf), что называется «одним кликом». Но, к сожалению, качественный FB2 таким образом создать совершенно невозможно. После конвертации такую книгу приходится загружать в редактор и доводить до ума вручную.
 Использование автоматической конвертации  без последующей доводки допустимо только в том случае, если текст конвертируется исключительно для того, чтобы закачать на КПК, прочесть и удалить.
 Но если книгу планируется выкладывать в Сеть, или распространять еще каким-то образом, то изготавливать ее «одним кликом» совершенно недопустимо. Не забывайте, что в этом случае, как бы еретически это ни звучало, вы фактически являетесь ИЗДАТЕЛЕМ книги. Проявите же уважение к автору и читателям.
 Подготовка исходного текста — это тема для отдельной книги, поэтому здесь углубляться в нее не будем. Предположим, что исходный текст у вас уже есть. О редактировании и доводке книги будет подробно рассказано несколько ниже. Сейчас же речь пойдет именно о конвертировании текстов.

 § 3.1 Требования к исходному тексту

 Наиболее предпочтительными являются txt и RTF(DOC). Их, как будет сказано ниже, можно перенести в редактор книг, без каких-либо дополнительных программных средств.
 HTML в этом отношении гораздо хуже. Они, как правило, содержат кучу лишней информации, которую приходится отсекать.
 Если же книга представлена в PDF, вам придется потратить время, чтобы «выковырять» текст оттуда. Бывает, что это не так-то просто сделать, а бывает — вообще невозможно (например, если  в PDF собраны сканы страниц без распознавания).
 Ну и очень желательно, чтобы текст был максимально качественный.
 Автор этой книги сам убил массу времени, при чистке книги В. Вагина «Заяц, стань тигром». И только потом обнаружилось, что в Internet имеются гораздо более качественные тексты книги…
 Поэтому, если вы берете текст из Сети, не поленитесь, поищите разные варианты и сравните их.
 Для преобразования текстов в FB2 существуют несколько программных пакетов. Рассмотрим их по порядку.

 § 3.2 Any to FB2

 Any to FB2 — «штатное» средство для конвертирования текстовых документов в формат FB2
 Для нормальной работы программе требуются MSXML 4.0 и Windows Script Host  версии 5.6.
 Если  MSXML можно скачать с сайта Micro$oft без каких-либо проблем, то при попытке загрузить Windows Script Host производится проверка на «подлинность», т.е. лицензионную чистоту вашей копии Windows.
 Поэтому проще обновить Internet Explorer до версии 6.0 SP1. Windows Script Host 5.6 входит в его состав.
 Посл установки щелкаем по иконке Any to FB2 GUI.
 Интерфейс программы представляет собой окошко с несколькими закладками.
 Самая первая строчка — путь ко входному файлу. По умолчанию там стоит «http://». Очевидно, программа может брать файлы на обработку прямо из Internet. Пусть вас это не смущает. Нажав кнопочку с многоточием, вы попадете в стандартное окно выбора файла.
 Чуть ниже расположено выпадающее меню «Setting». Здесь можно выбрать профиль настроек. Изначально их там всего три: «Last used» (последние использованные) «Default» (по умолчанию) и «Headers+»
 Внизу находятся кнопки:
 « Import » — запуск обработки файла. После того, как файл будет успешно преобразован, на месте кнопки «Import» появится кнопочка «Done». Щелкнув по ней, можно сохранить конечный файл.
 « Save settings… » — вызывает окошко управления профилями настроек («Manage export presets»). Можно сохранить текущие настройки. Вводим имя профиля в верхней строчке, например, «My priority» и жмем кнопочку «Save». Здеь же можно удалить ненужные профили, выделив их в списке и щелкнув по кнопочке «Delete…»
 « Cancel » — выход из программы.
 И кнопочка « ? » позволяет узнать номер версии программы. Никакого файла помощи или руководства, к сожалению, не предусмотрено…
 Если установить галочку напротив расположенной в самом низу рабочего окна опции « Automatically close this window when finished », то сразу после обработки файла программа закроется.
 Теперь рассмотрим закладки.
 Первая закладка, «  Document  », содержит важнейшие настройки обработки файла.
 « Text structure » призвана помочь программе разобраться с разбиением текста на абзацы. Предусмотрены три положния радиокнопки.
 « Auto » — предоставляет программе решать этот вопрос самостоятельно.
 « Indented » — в начале каждого абзаца есть отступ.
 « EmptyLines » — после каждого абзаца идет пустая строка.

 ВНИМАНИЕ, БАГ!
 При преобразовании форматированных текстов, программа считает новым абзацем строку, начинающуюся со знака «тире», «-». вне зависимости, есть отступ перед ней или нет. К счастью, этот глюк можно легко обойти. Можно деформатировать текст по принципу, «одна строка — один абзац», до того, как скормить его конвертору, а можно сделать это и в самой программе, используя регулярные выражения пре-обработки.

 Далее идут настройки, относящиеся непосредственно к  преобразованию файлов. Сразу скажу, что «ишкуштвенный интилект» программы, весьма и весьма слаб, поэтому большинство настроек приходится отключать.
 « Preserve <form> » — оставлять содержимое, обрамленное тэгом form. Меню, голосования и т.д. Включать не стоит.
 « Do not convert charset » — не менять кодовую таблицу файла. 
 « No epigraphs » — не распознавать эпиграфы. Даже эту нехитрую операцию программа делает не всегда корректно, поэтому ставим галочку.
 « No </emptyline> » — не ставить пустых строк. Обычно эту опцию включать не требуется.
 « No description » — под «description» здесь понимается аннотация. Не делать аннотацию. Однозначно ставим галочку.
 « Allow 1000 error fixes » — разрешить программе попытаться восстановить битый документ. Пожалуй, галочку ставить не надо.
 « Do not convert "quotes" to «quotes» » — не конвертировать компьютерные кавычки в типографские. Эта операция нужная, и обычно программа отрабатывает ее без нареканий. Не ставим галочку.
 « Do not convert [text] and {text} into footnotes » — не конвертировать текст в квадратных и фигурных скобках в сноски. Ставить или не ставить галочку — дело вкуса. Я лично предпочитаю делать сноски вручную.
 « Do not convert _italic_ текст » — не конвертировать текст, обрамленный знаками подчеркивания в курсив. Ставим галочку. Не стоит разрешать программе делать это самой. Очень часто получается так называемый «рваный» курсив (<emphasis>С</emphasis><emphasis>ло</emphasis><emphasis>во</emphasis>) или, того хуже, курсивным становится только первое слово абзаца.
 « Do not restore broken paragraphs » — не восстанавливат разорванные абзацы. Ставим галочку.
 « Do not detect poems » — не выделять стихи. Ставим галочку однозначно. Программа определяет стихи исключитенльно по коротким строчкам и делает это крайне коряво.
 « Only use marked with <h#>|^T^U headers » — выделять как заголовки исключительно абзацы выделенные тэгами <h1>…<h6>и (или) esс-последовательностями ^T^U. Ставим галочку, если текст скачан из библиотеки Максима Мошкова (Lib.ru).
 « Ignore line indent (spaces at the line start) » — не считать пробелы в начале сроки признаком абзаца.
 « Convert leading '-' to long dash '—' (dialogs) » — конвертировать компьютерный «минус» в начале строки в длинное тире. Ставим галочку, особенно, если конвертируем DOS-текст.
 Вторая закладка — «  Links  », предназначена для настройки обработки html-файлов.
 Первый блок — « Images », относится к картинкам, если таковые во входном файле имеются.
 Опция « Remove ALL images from the document » убирает вообще все картинки.
 « Remove off-site images » — убирает только те картинки, которые располагаются не на сайте, с которого был загружен конкретный html.
 « Preserve dynamic images » — не удалять картинки с URL динамического вида, например, счетчики.
 Блок « Linked documents » 
 « Remove external links » — просто убирает линки, ведущие за пределы документа.
 Включение опции « Follow links » делает активными все последующие опции.
 Теоретически, если исходный текст представлен в виде пачки html-файлов и имеется некий файл-оглавление со ссылками, можно включить эту опцию, открыть файл-оглавление, а остальные программа подстыкует автоматически. На практике это зачастую получается довольно коряво.
 « Follow off-site links » — следовать по линкам, ведущим за пределы сайта.
 Рядом находится уровень следования (level deep).
 « Only follow matching the expression » — следовать только линкам, совпадающим с нижеуказанным выражением.
 « Never follow matching the expression » — НЕ следовать линкам, совпадающим с нижеуказанным выражением.
 Третья закладка — «  RegEXP  » — обработка текста с помощью регулярных выражений.
 Подробнее о том, что такое регулярные выражения и как ими пользоваться, можно прочесть в приложении Д в конце книги.
 « Header detection regular expression » — регулярные выражения, с помощью которых программа может распознавать заголовки.
 « Regular expression to run on-load » — регулярные выражения, предназначенные для обработки исходного текста.
 Окошко разделено на два столбца. Первый (+new search pattern) предназначен для выражения поиска. Второй (+new replace pattern) — для выражений замены.
 Регулярных выражений может быть несколько.
 Вот  как можно обойти вышеописанный баг с неправильным распознаванием новых абзацев.
 в графе « +new search pattern » вводим:

 \r\n(\S)

 (перевод строки, новая строка, не-пробел).
 А в графу « +new replace pattern » вводим:

  $1

 Здесь не видно, но перед «$1» должен идти пробел.  То есть символы перевода строки и новой строки будут заменены на пробел. А само «$1» есть обращение к выражению в скобках в регэкспе поиска. Оно нужно, чтобы сохранить в неприкосновенности не-пробел, который идет сразу после символа новой строки.
 « Regular expression to run on result document » — регулярные выражения, предназначенные для обработки выходного документа.
 Устроено аналогично предыдущему.
 И, последняя, четвертая вкладка — «  Log  » — не имеет никаких опций. Там отображается ход операции преобразования.
 Программа умеет конвертировать файлы TXT, HTM, RTF, DOC. Для обработки последних она использует Micro$oft Word, для предварительного преобразования их в HTML.
 С разбиением на секции программа справляется плохо. Требуется последующая правка в редакторе.
 Резюме:
 Неплохое средство для конвертирования файлов TXT и HTML.
 Пользоваться программой имеет смысл, особенно, если книга конвертируется для того, чтобы «прочитать и удалить».
 Для пакетного конвертирования файлов написана надстройка (front-end) Batch2FB.

 § 3.3 ExportXML

 Программа представляет собой макрос M$ Word, предназначенный для преобразования в FB2 файлов DOC прямо из M$ Word. 
 Макрос нормально запускается в M$ Word XP и 2003.
 Установка макроса заключается в копировании файла ExportXML.dot в папку автоматически запускаемых макросов Word. Обычно это папка C:\Program Files\Microsoft Office\Office10\Startup\. (Здесь и далее для M$ Office 2003 вместо «Office10» будет «Office11»).
 Затем нужно разрешить запуск макросов. Меню «Сервис\Параметры», закладка «Безопасность», кнопка «Защита от макросов». На закладке «Уровень безопасности» установите переключатель-радиокнопку в положение «Средняя. Решение о запуске потенциально опасных макросов принимается пользователем». Правда, теперь при каждом запуске Word будет выскакивать надоедливое сообщение, не нужно ли отключить макросы.
 Поэтому лучше поступить по-другому. Оставить высокий уровень безопасности и запускать нужные макросы без всяких запросов.
 Для этого макрос необходимо  подписать .
 Вначале нужно создать сертификат. Запускаем программку selfcert.exe из директории MS Office (C:\Program Files\Microsoft Office\Office10\). В поле «Ваше имя» вводим какое-нибудь слово и жмем OK. Все, сертификат создан. Правда, он не подтвержден Micro$oft, но нам этого и не требуется.
 Теперь запускаем Word (макрос ExportXML.dot должен находиться в папке Startup). Запускаем редактор Visual Basic (Сервис\Макрос\Редактор Visual Basic). В окошке Project выбираем группу ExportXML.
 Затем вызывем команду Tools\Digital Signature. В окошке «Цифровая подпись» жмем кнопку «Выбрать», выбираем сертификат и жмем «OK».
 Закрываем редактор, выходим из Word. На запрос, надо ли сохранить изменения в документе ExportXML, отвечаем утвердительно.
 При следующем запуске Word сообщит, что файл ExportXML.dot содержит макросы, подписанные автором [имя вашего сертификата]. Ставим галочку напротив «Всегда доверять макросам из данного источника» и жмем ставшую активной кнопку «Не отключать макросы».
 Все! При последующих запусках Word будет прилежно запускать ExportXML, не докучая вам запросами.
 В меню «Файл» появилось подменю «FictionBook2» содержащее два пункта: «Export as Fictionboок2 xml…» и «Edit Fictionbook2 properties…»
 Последний пункт, как нетрудно догадаться, позволяет редактировать описание (description) будущего FB2-файла.
 Кнопочки «+» и «-» внизу позволяют соответственно добавлять копии полей или удалять оные. Чтобы отредактировать поле выделите его и нажмите клавишу F2.
 Непосредственно экспорт производится предельно просто. Вводим путь и имя файла. Затем макрос предложит заполнить description. При этои можно выбрать кодировку файла (выпадающий список внизу «Export encoding»). По умолчанию текст экспортируется в utf-8.
 Макрос нормально обрабатывает полужирный шрифт, курсив, и даже Word-овские сноски. Пытается разбить книгу на секции, что чаще всего получается некоректно.
 Например, если название главы, состоит из двух строк, создаются лишние секции. Полученный файл в обязательном порядке требует правки в редакторе FB Editor.
 Внимание, картинки, если они есть, не экспортируются!
 Макрос позволяет «помочь» ему и выделить некоторые элементы непосредственно в Word.
 Для этого в нем есть стили, которые так и называются: Annotation, Cite, Cite Author, Epigraph, Epigraph Author, Poem Title, Stanza.
 Если они автоматически не появились в списке стилей после установки макроса, придется каждый раз добавлять их в документ вручную. Для этого файл ExportXML.dot должен быть скопирован в директорию C:\Documents and Settings\Имя текущего пользователя\Application Data\Microsoft\Шаблоны. 
 Открыв нужный файл, выбираем команду меню Формат\Тема. В появившемся окошке жмем кнопку «Библиотека стилей». В списке стилей выбираем ExportXML и жмем «OK».
 Резюме: отвечающий своему назначению, но незаконченный продукт. Использовать рекомендуется лишь в отдельных случаях. Например, для преобразования документов, напичканных сносками.

 § 3.4 doc2fb

 Приложение doc2fb предназначено для преобразования в FB2 файлов RTF и M$ Word DOC.
 Чтобы утилита могла работать, на ПК должен быть установлен M$ Word 2003. Также должен наличествовать JavaScript версии не ниже 5 (входит в состав IE).
 Собственно утилита представляет собой XSL-скрипт и оболочку — HTA-приложение.  [3.1] 
 Интерфейс оболочки прост и понятен. Сразу бросается в глаза, что программка рассчитана на пакетное преобразование. То есть выбрать можно не конкретный файл, а только папку.
 Утилита умеет выделять главы и подглавы, жирный шрифт и курсив, сноски и ссылки, а также добавляет картинки.
 При этом векторные картинки Word, например, WMF, в итоговый файл не попадают. Растровые картинки, отличные от формата JPEG, преобразуются в PNG.
 Меню программки состоит из трех пунктов: «Файлы», «Настройки» и «Инфо»
 Пункт «Файлы» позволяет вызвать главную рабочую страницу оболочки (активна сразу после запуска). В строке «Папка» щелкаем кнопку с изображением «>>» и выбираем папку, которая содержит нужные DOC-файлы.
 После этого становится активной кнопка «преобразовывать».
 Нажимаем ее. Файлы тихо и быстро конвертируются в FB2.
 Ход операции отображается в области «Журнал», которая находится под кнопкой «преобразовывать».
 Настройки оболочки весьма немногочисленны.
  «Показывать MS Word при преобразовании» ,  «Закрывать doc2fb после преобразования» ,  «Удалять пустые строки» — назначение этих опций ясно без дополнительных комментариев.
  «Заменять Line-break на Paragraph-break» — заменяет коды принудительные разрывы строки на коды конца абзаца.
 Что есть такое принудительный разрыв строки? Обратимся к документации M$ Word.

 При вставке принудительного разрыва строки текущая строка обрывается, и текст продолжается на следующей строке. Предположим, например, что стиль абзаца включает в себя отступ перед первой строкой. Чтобы избежать появления отступа перед короткими строками текста (допустим, в написании адреса или в стихотворении), каждый раз, когда нужно начать новую строку, вместо того чтобы нажимать клавишу ENTER, вставляйте принудительный разрыв строки.
 Укажите место разрыва строки. Нажмите клавиши SHIFT+ENTER. 

  «Определять сноски как <регулярное выражение>» и  «Определять пояснения как... <регулярное выражение>» — перед конвертацией в FB2 M$ Word преобразует описанное регулярными выражениями в сноски и пояснения.
  «Сохранять изменения как версию документа» —  в процессе конвертации в документ вносятся изменения. Если опция включена, то эти изменения будут сохранены в документе как версия редактирования.
 Бич описанных выше программных средств — излишняя самостоятельность — проявил себя и тут. Стихи с отступами определяются как цитаты, для заголовков в две строчки делаются две секции и т.д.
 Как и в ExportXML, чтобы помочь программе найти элементы, документ можно дополнительно разметить. На страничке автора программы можно найти dot-файл с соответствующими стилями. Добавляются они в рабочий файл точно так же, как и стили ExportXML. 
 Резюме. В целом программа отвечает своему назначению. Несмотря на некоторое своеволие, она позволяет быстро сконвертировать большое количество файлов.

 § 3.5 Перенос через буфер обмена

 Простой, но незаслуженно игнорируемый способ. Он, как нетрудно понять, заключается в выделении фрагмента текста, или же текста целиком, копировании его в буфер обмена Windows, и последующей вставке в FB Editor.
 Копирование через буфер обмена, как правило, сохраняет форматирование текста, в частности жирный и курсивный шрифт.
 Таким образом можно переносить тексты из MS Word, Интернет-браузера. Не обременяя машину дополнительными программными пакетами и dll-ками.
 Кроме того, при таком способе конвертирования наиболее удобно использовать заготовки-шаблоны, с частично заполненным description.
 Разумеется, затем текст надо полностью структурировать вручную. Но, по моему скромному мнению, гораздо удобнее структурировать файл «с нуля», чем исправлять огрехи программы конвертирования.
 Недостаток у переноса через буфер, кроме повышенных временных затрат на структурирование, в общем-то один — некорректная обработка форматирования исходного документа. Чаще всего пропадают пустые строки. Сдвоенные пустые строки превращаются в одинарные в девяти случаях из десяти. Еще при этом в выходной документ могут попасть нежелательные элементы, например, картинки, (редакторы FB2 не поддерживают вставку картинок из буфера, там работа с ними организована совершенно по-другому) которые потом приходится вычищать.
 Резюме. Весьма достойный, хотя и не лишенный недостатков способ конвертации документов.

 § 3.6 Конвертор ExportToFB21 для Open Office

 Пакет Open Office создавался как бесплатная альтернатива M$ Office. В последние годы разработчикам удалось довести его до ума, и Open Office (далее OO) начал потихоньку набирать популярность и отвоевывать пользователей у разработки Micro$oft.
 Поэтому нет ничего странного, что и для него появился конвертор в FB2. Тем более, что формат документов OO, как и в последней версии M$ Office представляет собой пачку XML-документов.
 Программка представляет из себя пакет макросов для  OpenOffice Writer. Естественно, она платформeнно-независима, т.е. работает на всех ОС, которые поддерживет OO.
 Программа прекрасно документирована, на сайте разработчика есть иллюстрированные руководства в формате OO Writer, а также PDF. Поэтому, во избежание плагиата, ограничимся общими советами и замечаниями.
 Данное описание справедливо для версии 2.2.
 На сайте разработчика ExportToFB21 существует в двух ипостасях: ExportToFB21_version2.2.zip и ExportToFB21_version2.2.oxt.zip. Отличаются они тем, что во втором случае пакет макросов упакован в специальный формат OO — .oxt, и его придется перед установкой доставать из архива.
 Итак, архив с конвертором загружен. Запускаем OO Writer и вызываем команду «Сервис\Управление расширениями». Щелкаем кнопку «Добавить» и открываем zip-архив или пакет .oxt.
  Теперь нужно создать кнопку для запуска макроса. Вызываем команду меню «Сервис\Настройка» и активируем закладку «Панели инструментов». В выпадающем меню «Панель инструментов» выбираем панель, на которую будет помещена кнопка. Руководство рекомендует создать новую, но, на мой взгляд, это излишество.
 Жмем кнопку «Добавить». В открывшемся окне в дереве «Категория» в самом низу находим группу «Макрос OpenOffice.org» и разворачивем ветку «Мои макросы» (или «Макросы OpenOffice.org», если при установке в окне «Управление расширениями» был активен пункт «Расширения OpenOffice.org»). Находим ветку ExportToFictionBook и раскрываем ее.
 Теперь щелкаем по группе «ExportToFB21» и в окне справа выбираем команду «ExportToFB21». Жмем кнопку «Добавить». Все!
 Как и макросы для M$ Office ExportToFB21 позволяет предварительно разметить документ при помощи стилей. Для этого на сайте имееется специальный файл стилей — fb21_styles.ott_2.0.zip. Как установить его в OO Writer подробно описано в руководстве.
 После вызова макрос может предложить вначале сохранить документ.
 Затем появится окно заполнения заголовка. Пусть вас не смущает обилие полей — обязательны к заполнению лишь некоторые из них. Также, обратите внимание, что хотя графы и можно дублировать (кнопки «Добавить» и «+»), вернуться к ним уже не получиться.
 Выходной файл по умолчанию формируется в той же папке, что и исходный.
 Чрезвычайно порадовало то, что, в отличие от продуктов, описанных выше, ExportToFB21 абсолютно не проявляет своеволия и не пытается самостоятельно структурировать документ (если он, конечно, предварительно не размечен стилями, конечно). Структурирование все-таки лучше делать в редакторе.
 Поэтому, если даже, потом, в процессе совершенствования у программки и появятся такие интеллектуальные наклонности, хорошо бы предусмотреть опцию их отключения.
 То, что получается на выходе достойно всяческих похвал. Файл прекрасно подходит как для чтения в FB2-читалке, так и для доводки в FB Editor. Это  и неудивительно. Корректный экспорт самой разной структуры документа заявлен, как «самая главная фишка конвертора».
 Как следует из названия, программа поддерживает новшества формата FictionBook 2.1. Это <sub>, <sup>, <code>и таблицы. Картинки, правда, конвертор пока экспортировать не умеет, но аккуратно вставляет в соответствующие места тэги.
 Более подробно все возможности, «фичи» и особенности конвертора описаны в руководстве (п. 1.3.2–1.3.3)
 Вообще, ExportToFB21 производит впечатление добротного и хорошо проработанного продукта. Остается только надеяться, что, по мере совершенствования, он не растеряет эти качества.
 Peзюме. Хорошая вещь. 100% must have для тех, у кого на машине установлен OO Writer. 




 Часть IV
 Редактирование книг. FB Editor


 Как уже говорилось, файл книги, после конвертации, в обязательном порядке требует окончательной доводки.
 Для этого существует программа FB Editor, входящая в пакет FB Tools.
 Говоря о редактировании, нельзя не упомянуть об еще одной разработке, существующей в параллельной плоскости. Это Book Designer В. Войцеховича и его специальная версия — FB Designer.
 Итак, основным инструментом у нас будет FB Editor.
 Данное описание соответствует оригинальной версии FB Editor 1.0 от 23 февраля 2005 года.
 Автор FB Editor, Михаил Мацнев, не стал утруждать себя написанием help-а, не без основания считая, что разобраться, как работать с программой, можно и без такового.
 Однако, судя по количеству вопросов на форумах fictionbook.org  и прочих, описание программы все-таки требуется.

 § 4.1 Установка программы

 Для работы FB Tools требуется операционная система семейства Windows NT: лучше всего Windows 2000 или Windows XP.
 Также понадобится MSXML 4.0 SP2 и Internet Explorer версии не ниже 5.5 и (внимание!) не выше 6.0 SP1.
 Скачать MSXML 4.0 можно с официального сайта Micro$oft. При этом проверка Windows на легальность не производится :).

 == ВАЖНО ========================
 Если у вас установлен Internet Explorer 7.0 и выше, ставить FB Editor, не стоит и пытаться — работать не будет. Вам придется воспользоваться альтернативной разработкой — FB Writer или версией FBE от ЛитРес.
 ===============================

 Попутно в систему будет установлено пару библиотек, позволяющих видеть свойства книг FB2 в Проводнике и, щелкнув правой клавишей мыши, производить их верификацию прямо из Проводника.
 Наконец, все нужные компоненты закачаны, программа установлена. Можно приступать к работе.

 § 4.2 Описание функций и основные приемы работы

 Как следует из названия, FB Editor позволяет редактировать файлы в формате FB2. Довольно скромный набор функций частично компенсируется возможностью прямого редактирования XML-файла книги.
 Механизм работы редактора не так прост, как может показаться на первый взгляд.  Кроме exe-файла редактора существуют еще два Java-скрипта, с помощью которых реализована часть функций редактирования. При WYSIWYG-редактировании контент книги преобразуется в динамический HTML, с которым и работают основные и дополнительные Java-скрипты.
 После запуска FictionBook Editor появляется рабочее окно.
 Вверху находится стандартное меню и панель инструментов. Под ними располагается панель линков, с помощью которой можно присваивать имена (метки) элементам книги, а также делать ссылки и сноски.
 Большую часть рабочего окна занимает главное окно редактирования текста. Оно имеет три режима: редактирование описания книги, редактирование текста книги в режиме WYSIWYG, и в режиме «исходника», когда видны все тэги и настоящая структура файла.
 Слева от главного окна находится панель Document Tree, в котром отображается древовидная структура документа. С помощью ее можно быстро перейти в нужный элемент книги.
 И, внизу, служебная строка. Там выводится структура текущего редактируемого элемента (например: body/section/p) или сообщения валидатора.
 Пройдемся по пунктам меню.
 В меню  File , кроме стандартных  New ,  Open ,  Save , есть команда  Validate  (F8). При вызове ее документ проверяется на соответствие спецификации schema. Если при этом были обнаружены ошибки, то программа автоматически переходит в режим редактирования исходника (Source), устанавливая курсор на 1–2 строки ниже «проблемной» строки.
 Маленькое замечание по поводу сохранения файла. Пункт  Save предлагает довольно большой выбор кодировок. Но при всем богатстве выбора, альтернатива сводится к двум вариантам: utf-8 и windows-1251.
 Cчитается, что UTF-8 обеспечивает книге бОльшую кроссплатформеннность, нежели windows-1251, но, при этом, архив с книгой «весит» заметно больше.
 Пункт меню  File\Import по умолчанию имеет один подпункт «No import plugins installed». Плагины для импорта книг из других форматов в комплект FB Tools не входят. Но если вы установите пакет Any2FB2, то FB Editor сам обнаружит его, и соответствующая иконка появится в меню  File\Import . Устанавливать Any2FB2 в одну папку с FB Tools для этого вовсе необязательно.
 Пункт меню  File\Export позволяет экспортировать книгу в формат HTML. Структура книги полностью сохраняется. Можно выбрать скрипт XSL.
 Если вы установили пакет FB2Any, в подпункье Export появятся плагины для экспорта книги в txt, Rocket Book, MS Reader, iSilo.
 Второй раздел меню  Edit кроме типовых  Undo ,  Redo ,  Cut ,  Copy ,  Find ,  Replace содержит блок работы с элементами книги —  Сlone container ,  Split container ,  Merge  container и, специально для вложенных секций —  Remove outer container .
 Ниже идут три подменю вставки элементов.
 В подменю  Style собраны команды вставки элементов в пределах одного абзаца:  Normal ,  Text  Author,  Subtitle ,  Link ,  Footnote ,  Remove link .
 Подменю  Add содержит команды добавления элементов, которые должны находиться строго в определенном месте документа:  Body ,  Title ,  Epigraph ,  Image  (вариант),  Annotation ,  Text Author .
 И, в подменю  Insert сгруппированы команды вставки элементов, которые, в принципе, могут находиться в произвольном месте книги:  Image ,  Poem ,  Cite .
 Последней идет команда  Add Binary object . Она позволяет присоединять к файлу книги картинки и вообще любой двоичный файл.
 Следующий раздел меню —  View . Сначала идут флажки отображения панелей —  Toolbar ,  Link bar ,  Status bar ,  Doсument Tree . Под ними — выбор режима редактирования книги —  Description ,  Body ,  Source .
 Между режимами Body и Description можно переключаться с помощью комбинации клавиш  Ctrl+Tab .
 И последний пункт —  Options . Здесь можно выбрать цвет фона, а также цвет, тип и размер шрифта для окна редактирования.
 Раздел меню  Tools содержит три пункта.
 Команда  Words . К сожалению, она до конца не проработана. В своем нынешнем состоянии команда выдает список слов, входящих в текст книги, в которых есть дефис. Те слова, у которых в тексте книги есть варианты без дефиса, помечаются восклицательным знаком. В поле  Replacement можно вводить варианты замены. Но после нажатия кнопки «ОК» программа заменяет только те слова, в которых нет русских символов…
  Options — здесь можно настроить некоторые параметры режима редактирования исходника книги.  Wrap lines  (сворачивать строки),  Syntax highlighting  (подсветка синтаксиса),  Show end of line marks  (показывать символы конца строки).
 И подменю  Scripts , позволяющее вызывать пользовательские скрипты JavaScripts.
 В раздел  Help входит только пункт  About , позволяющий узнать номер версии и дату сборки.

 == ВАЖНО ========================
 Первое, что необходимо твердо усвоить при работе c FictionBook — это то, что данный формат предназначен не для ОФОРМЛЕНИЯ, а для СТРУКТУРИРОВАНИЯ электронного документа.
 ===============================

 Поэтому бесполезно искать абзацные отступы, выравнивание и прочие элементы, столь обыденные в любом стандартном редакторе.
 В создающейся при запуске редактора пустой книге, всего три элемента. Annotation, history и body с title и одной section.
 Как видим, в FB Editor различные элементы книги принято выделять цветной полоской слева, а также цветовой заливкой.
 Редактирование в FB Editor внешне почти не отличается от обычного редактора. Поддерживается даже перетягивание выделенного текста.
 Но свои особенности имеются. И главная из них — поабзацное перетягивание текста из элемента в элемент. 
 Наберите два-три слова в разделе section. Потом нажмите Enter, создав тем самым новый абзац. Наберите еще что-нибудь. Затем перейдите в заголовок книги (body/title/p, выделен зеленым цветом) и нажмите Del. Первый абзац текста перейдет в заголовок книги. Это и есть перетягивание текста.
 Запомните этот способ. Его вы будете использовать очень часто.
 Из привычных способов выделения текста FB Editor может предложить только два.
 Щелкнув по соответствующей кнопке на панели инструментов, текст можно сделать  полужирным  ( Ctrl-S ) или  курсивным  ( Сtrl-E ).
 Не стоит злоупотреблять и дополнительно выделять названия глав, подзаголовки, стихи и т.д. жирным шрифтом, курсивом, пустыми строчками и тому подобными приемами. Это полагается делать через настройки читалки.
 Новшества версии 2.1 в текущей версии FB Editor не поддерживаются. Набирать их в режиме редактирования исходника можно. И валидатор обрабатывает их нормально. Но в коде программы поддержка новых тэгов не предусмотрена. И после выхода в режим WYSIWYG эти тэги просто исчезают или преобразуются в обычные абзацы, как, например, таблицы.

 § 4.3 Заполнение заголовка книги

 Перед тем, как приступить к набору или редактированию текста книги необходимо заполнить описание книги — Description.
 Это описание нужно, в первую очередь, для корректной работы библиотечного софта, но может быть интересно и читателю.
 Режим редактирования описания вызывается из меню:  View/Description .
 Окно редактирования делится на следующие разделы:  Title Info ,  Document Info ,  Publisher Info ,  Custom Info и  Binary Objects .
 Каждый раздел содержит несколько подразделов (граф).
 В правой части большинства граф есть служебные кнопки. Кнопка с пересекающимися прямоугольниками позволяет дублировать графу. Кнопка с крестиком, напротив, позволяет удалять ненужные дубликаты. Если графа существует в единственном экземпляре, кнопка неактивна.
 В разделе  Title Info содержится основная информация о книге.
 Первым пунктом идет жанр произведения ( Genres ). Он должен быть выбран из фиксированного списка. Щелкните по кнопке с треугольничком и выберите нужный жанр из соответствующей группы.
 В этой же строке, правее, находится поле  Match . Оно обозначает соответствие произведения выбранному жанру (в процентах).
 Например, в списке поджанров нет весьма популярного нынче «городского фэнтэзи». Поэтому оформляем его двумя жанрами. Фэнтэзи и боевик.
 Сначала выбираем жанр Science Fiction & Fantasy\Fantasy.
 Потом добавляем еще одну строку Genre. И выбираем жанр Science Fiction & Fantasy\Action.
 Список жанров с переводом приведен в Приложении В.
 После Genres идет графа Authors. Информация об авторе книги. First (имя)  Middle  (отчество),  Last  (фамилия),  Nick  (ник),  Email  (адрес электронной почты),  Homepage  (адрес сайта).
 Следом идет  Book title  (название книги),  Keywords  (ключевые слова),  Date  (дата написания (не выпуска!)) в произвольном формате (например, «2001-2005 г., Переделкино»). В поле Value тоже вводится дата (обычно окончания работы над книгой), но строго в компьютерном формате ГГГГ-ММ-ДД (например, 2006-07-22).
  Coverpage . Картинка обложки. 
 В поле  Image вводится ссылка на картинку обложки. Сперва присоединяем картинку к файлу командой Edit\Add Binary object (скрепка на панели инструментов). Затем копируем имя файла из поля ID появившейся в разделе  Binary Objects новой графы в буфер и вставляем в поле  Image графы  Coverpage . Перед именем нужно добавить символ «#».
 Подробнее, о картинках для обложки читайте ниже, «§ 5.3 Обложки».
  Language  — язык книги. Для русского языка пишем «ru».
 Список возможных значений для других языков приведен в Приложении Г.

 == ВАЖНО ========================
 Следует знать, что в описании книги жизненно необходимыми для FB Editor являются два пункта.  Genre и  Language . Если они не заполнены, или заполнены неправильно, то валидатор FB Editor ругается при попытке сохранить книгу. А что самое неприятное, если вам понадобилось отредактировать «исходник», то валидатор просто «не выпустит» из режима редактирования Source, до тех пор, пока все ошибки не будут исправлены, в том числе, указанные поля не будут заполнены правильно.
 Поэтому первым делом необходимо заполнить эти элементы. С остальными можно разобраться и попозже.
 ===============================

  Source language — исходный язык, если книга переводная. В противном случае оставляем пустой.
 Некоторые букмейкеры,  [4.1] даже если книга изначально русскоязычная, все равно заполняют эту графу, дублируя Language. Так поступать не следует.
  Translators — переводчик. Если книга не переводная, оставляем пустыми. Иначе заполняем таким же образом, как и графу  Authors . Фамилия, имя, отчество и т.д.
  Sequence — если книга входит в серию, то в поле  Name вводим название серии, а в поле  Number — порядковый номер в серии.
 Обратите внимание, что в правой части строки, перед кнопкой дублирования строки есть кнопка с треугольничком. Она позволяет создавать  вложенные серии. К примеру, основная серия — «Звездные Войны», вложенная серия — трилогия «Адмирал Траун».
 Название серии может быть образовано по названию первой книги серии («Завтра война», «Имперские танцы»), имени главного героя («Кирилл Мазур»), местности, где происходит действие («Керторийский цикл»).
 Раздел  Document Info содержит информацию о самой книге.
 В строку  Authors вводим информацию о человеке, создавшем этот документ. Аналогично ранее заполнявшимся  Authors и  Translators .
  Programs used — программное обеспечение, использованное при создании книги. Обычно FB Editor сам пишет там — «FB Tools». Если вы использовали какие-нибудь дополнительные утилиты — можно упомянуть их там.
 Поля  Date и  Value заполняются аналогично таким же полям в  Book Info . Впрочем, FBE старается заполнить их сам.
  Source URLs — если исходный текст для создания книги был скачан с какого-нибудь сайта, здесь нужно указать ссылку на него.
  Source OCR — если книга было отсканирована, то здесь указываем данные (обычно ник) сканнериста, а также человека, производившего вычитку. Страна должна знать своих героев!
  ID — уникальный номер документа. Обычно генерируется самим FB Editor-ом или программой конвертации.
 Подчеркиваю, номер должен быть  уникальным . Именно по нему библиотечный софт различает книги. То есть, если Вы  обновляете уже закачанную книгу, менять номер нельзя.
 А как быть, если вы любите создавать новые книги, используя заготовки-шаблоны? Например, особенно удобно это делать при подготовке серии книг. Можно конечно, каждый раз редактировать ID вручную, но это нудно и, кроме того, можно запросто забыть это сделать.
 Выход прост, как все гениальное. Подготовив шаблон, очищаем поле ID в description, и тут же сохраняем файл. Когда FB Editor откроет его вновь, он сгенерирует новый ID  автоматически .
 То же самое, кстати, относится и к полям Date и Value в разделе Document Info.
  Version — номер версии книги. Обычно — 1.0. По мере редактирования книги, может (и должен!) изменяться.
 Следующий раздел —  Publisher Info . Здесь собрана информация о бумажном оригинале книги, если таковой существовал в природе.
  Book name . Обычно совпадает с названием произведения, но если оно было издано в составе сборника, то здесь следует указывать название сборника.
  Publisher — название издательства.
  City — город, в котором была напечатана книга.
  Year — год выпуска.
  ISBN — код ISBN.  [4.2] 
 Sequence — название ПЕЧАТНОЙ серии. «Библиотека приключений», например, или «Абсолютное оружие». Также допускает вложенные серии.
 В раздел  Custom Info может вноситься произвольная дополнительная информация. Копирайт, благодарности, реклама и т.д. и т.п. Вплоть до мистических проклятий средневековых переписчиков («Кто эту книгу украдёт, у того руки отсохнут и уши отвалятся») :-).
 Раздел  Binary Objects заполняется автоматически, по мере присоединения к книге бинарных объектов, обычно картинок.
 Щелкая по кнопкам с крестиком и удаляя графы в этом разделе, вы одновременно удаляете присоединенные объекты.

 § 4.4 Структурирование документа

 Получить грамотно структурированнную книгу и есть та цель, ради которого мы беремся за редактирование книги.
 Непосредственно сам процесс можно разделить на следующие этапы:
 1) Разбиение на секции;
 2) Разметка элементов;
 3) Оформление сносок;
 4) Вставка иллюстраций.
 Если у вас «чистый» текст, например, вставленный командой Paste, то первые два этапа можно легко совместить, просто читая книгу в редакторе и попутно внося необходимые изменения. Сноски при этом этапе только помечаются, например, выделением в квадратные скобки.
 Если текст уже размеченный, допустим, после FB2Any, то сперва следует пройтись по «дереву» структуры документа, правя некорректно оформленные элементы и убирая лишние секции. А потом, все равно очень желательно перечесть книгу, внося дополнительные правки.
 Окончательное оформление сносок (если они не проставлены FB2Any) происходит только после окончания второго этапа.
 И только потом, когда книга почти готова, прикрепляется обложка и вставляются иллюстрации.


Разбиение на секции

 Текст книги в формате FictionBook делится на секции.
 В окне редактирования каждая секция выделена зеленой полоской слева. Разрывы в этой полоске отмечают деление на секции. Для вложенных секций добавляются дополнительные полоски. Все очень наглядно.
 Вполне логичным выглядит деление — «одна глава — одна секция». Секции-главы могут быть вложены в секции-части. Хотя формат допускает создание секции любой вложенности, обычно глубина вложений не превышает двух-трех.
 Создать новую секцию просто. Выбираем команду  Edit\Clone container  ( Ctrl+Enter ). После секции, на которой стоит курсор, появится новая секция с пустым заголовком.
 Разделить уже набранную секцию можно так: поместив курсор в нужное место выбрать команду  Edit\Split container  ( Shift+Enter ). Секция разделится ровненько по позиции курсора. Если при этом выделен кусок текста, то он станет заголовком новой секции.
 «Склеить» секции, как, допустим, разделы в редакторе MS Word, привычно поместив курсор в конец первой секции и нажав Del, не получится. Абзацы просто будут перетягиваться из одной секции в другую по одному. Поэтому для этого нужно использовать команду  Edit\Merge containers  ( Alt+Delete ). Если присоединяемая секция имела заголовок (title), он превращается в подзаголовок ( subtitle ).
 Создать вложенную секцию несложно.
 Проще всего войти в режим редактирования исходника, найти начало первой секции (тэг <section>) и добавить перед ним еще один тэг <section>. Потом находим закрывающий тэг </section>последней секции и добавляем еще один такой же.
 Считается что это единственный способ. Это не так. Cоздать вложенные секции можно и не выходя из режима WYSIWYG.
 Перед секциями, которые нужно поместить в другую секцию, создается новая пустая секция.
 Аккуратно выделяем нужные секции и помещаем их в буфер. Лучше это сделать командой  Edit\Cut  ( Ctrl+X ). Не забываем подчистить мусор (после удаленных секций обычно остается одна пустая).
 Вставляем содержимое буфера в только что созданную новую секцию. Вуаля!
 Настоятельно обращаю ваше внимание, что в секции, которая имеет вложенные секции, не должно быть текста. Заголовок, эпиграф — пожалуйста, но просто абзацев, даже пустых строчек, быть не должно.
 Если понадобилось, наоборот, убрать внешнюю секцию, это делается так: установив курсор на ее заголовок, или выделив эту секцию с помощью контекстного меню, выбираем команду  Edit\Remove outer container .
 Если нужно перенести или скопировать готовую секцию в другое место, это можно сделать как в режиме редактирования исходника, так и в режиме WYSIWYG. В последнем случае копируем секцию целиком в буфер, затем создаем в нужном месте пустую секцию, вставляем в нее секцию из буфера и убираем ставшую ненужной внешнюю секцию командой  Edit\Remove outer container .
 Не стоит допускать чрезмерной вложенности секций. Структура вложенных секций должна быть проста и логична. Том (книга), часть (раздел), глава (параграф). Подглавки же обычно выделяют подзаголовками (subtitle) —  Style\Subtitle — (Alt+S).


Аннотация (Annotation) и история редактирования (History)

 Раздел Annotation (серо-голубая полоска) — аннотация.
 Аннотация — это краткое (два-три абзаца) описание книги. Обычно это пересказ завязки сюжета или мини-рецензия, ставящие своей целью привлечь читателя.
 Подробнее о том, как аннотировать книги, читайте «§ 5.7 Высокое искусство аннотации».
 Аннотацию можно вставить в каждую секцию (команда  Edit\Add\Annotation  ( Ctrl+J )).
 Раздел History (малиновая полоска) предназначен для различных технических записей. Внесли исправления, добавили недостающие куски текста — сделали отметку в разделе History.


Расстановка заголовков (Title, subtitle)

 Заголовки (Title) могут быть в начале книги (body), секции или стихов.
 Чтобы вставить заголовок, выберите пункт меню Edit\Add\Title ( Ctrl-T ).
 При этом курсор должен находиться непосредственно в элементе, в который планируется вставить заголовок.
 Заголовки выделяются зеленым прямоугольником и бОльшим размером шрифта.
 Если в главу входят небольшие подглавы, или она разделена на эпизоды строками типа «* * *», то для оформления этих элементов используются подзаголовки (subtitle). Установите курсор на нужный абзац и вызовите команду  Edit\Style\Subtitle  ( Alt+S ). Или щелкните по пиктограмме с тремя звездочками на панели инструментов.
 Подзаголовки в FB Editor выделяются бОльшим размером шрифта.
 Превратить подзаголовок в нормальный абзац можно командой  Edit\Style\Normal  ( Alt+N ).

 == ВНИМАНИЕ, БАГ! =================
 Перед тем, как проделать эту операцию, книгу лучше сохранить. И СРАЗУ ПОСЛЕ преообразования — ТОЖЕ. Частенько FB Editor при попытке отредактировать преобразованную таким образом строку, «вылетает» с ошибкой.
 ===============================

 Само тело книги (body) тоже имеет заголовок. Уже стало хорошим тоном писать там фамилию-имя автора и (заглавными буквами) название книги. Не стоит экономить на этой минутной операции. Ведь далеко не все читалки и конверторы умеют грамотно извлекать эту информацию из description книги и помещать ее в начале текста. А книга без заголовка выглядит на порядок хуже, чем книга с повторяющимся названием…
 Маленькое замечание по поводу разделения главы на эпизоды. Иногда, наряду с «* * *» (или вместо), для этого используются пустые строки («немые» заголовки). Оставлять их следует лишь в том случае, если это несет смысловую нагрузку. Например, повествование о разных героях разделено «* * *», а разные по времени события — «немыми» заголовками. Во всех остальных случаях предпочтительна замена на «* * *». Хотя бы потому, что при конвертации эти пустые строки запросто могут «потеряться»…
 Можно, в принципе, вместо «немых» заголовков ставить отличные от «* * *». Например, «–*–» или «* * * * *». Но этот вариант есть моя собственная придумка и однозначно рекомендовать я его не могу.


Эпиграфы (Epigraph)

 Эпиграф — это цитата из другого произведения, чье-то крылатое выражение и т.д., помещенное в начале книги или части ее с целью обозначить дух, смысл произведения, выразить отношение к ней автора и т.п.
 Для выделения эпиграфов в FictionBook есть соответствующий элемент Epigraph. В FB Editor элемент Epigraph создается командой  Edit\Add\Epigraph  ( Ctrl+N ).
 Эпиграф может находиться только в начале книги (body) или секции. Нельзя создать эпиграф в любом месте, просто выделив текст.
 В FB Editor эпиграф выделяется фиолетовой полоской и меньшим размером шрифта.
 Обычно каждое изречение или цитата имеют автора. 
 Чтобы выделить его, в FictionBook предусмотрен элемент Text Author. Вставляется он командой  Edit\Add\Text Author  ( Ctrl+D ). Цветной полоски для элемента не предусмотрено, только отступ и шрифт красного цвета.
 Есть возможность непосредственного преобразования последнего абзаца эпиграфа в элемент Text Author.
 Устанавливаем курсор на этот абзац, и вызываем команду  Edit\Style\Text Author  ( Alt+A ) или щелкаем по пиктограмме с человеческим профилем на панели инструментов. Абзац будет преобразован в элемент Text Author.
 Если секция содержит только эпиграф, то валидатор сочтет это ошибкой. Необходимо, чтобы дополнительно была хотя бы пустая строка.


Стихи (Poem)

 Чтобы обозначить стихи, песни, баллады, серенады и прочую лирику в FictionBook предусмотрен соответствующий элемент Poem, а в FB Editor — команда  Edit\Insert\Poem  ( Ctrl+P ).
 Выделите нужные строки, и вызовите эту команду.
 Стихи выделяются двумя полосками — черной и темно-красной. Это потому, что предусмотрено деление стихов на более мелкие элементы — строфы (stanza). Обычно текстовый блок целиком преобразуется в элемент poem, потом его можно «разорвать» на строфы с помощью команды  Edit\Split container  ( Shift+Enter ).

 ==ВНИМАНИЕ!=====================
 Разделение стихов на строфы с помощью пустых строк спецификацией FictionBook не предусмотрено и считается ошибкой.
 ===============================

 Затем можно вставить заголовок ( Edit\Add\Title ) и автора ( Edit\Add\Text Author ).
 Непосредственного преобразования последней строки в Text Author (аналогично элементу Cite) в случае элемента Poem не предусмотрено.


Цитаты (Cite)

 Не так уж и редко возникает необходимость вставить в текст отрывок из другой книги, статьи и т.д.. Такой отрывок называется цитатой. В FictionBook для этого был введен элемент Cite. В FB Editor он вставляется с помощью команды  Edit\Insert\Cite . ( Alt+C )
 Цитаты выделяются желтой полоской и желтым цветом текста.
 Кроме непосредственно цитат, элемент Cite также может использоваться и для оформления записок, телеграмм, надписей, списков, перечней, документов и т.д.
 Хотя создавать цитаты можно, как и стихи — выделив фрагмент текста и вызвав соответствующую команду, этот способ работает в FB Editor не всегда корректно. Поэтому оформлять цитаты лучше всего путем вставки пустого элемента cite c последующим подтягиванием текста.

 == ВНИМАНИЕ, БАГ! =================
 Если в месте создания цитаты текст полужирный или курсивный, то образуется ошибочная конструкция, например, body/section/EM/cite/P/EM вместо правильного body/section/cite/P/EM, которая приводит к жутким глюкам при попытке сохранить файл.
 ===============================

 В конце цитаты может быть добавлен элемент Text Author. Вставляется он точно так же, как в элемент Epigraph.
 И не стоит переусердствовать и загонять в цитаты каждый фрагмент текста, обрамленный кавычками.


Линки и сноски

 Линки в FictionBook служат для гипертекстового перехода в нужное место книги.
 Сперва нужно присвоить нужному элементу имя (метку). Для этого выделяем его целиком с помощью контекстного меню. Затем в поле «ID:» панели Линков вводим значение. Имя можно присвоить практически любому элементу: секции, абзацу, цитате и т. д. При этом допускаются буквы латинского алфавита и цифры.
 Чтобы присвоить имя элементу, нужно выделить его целиком, что делается с помощью контекстного меню. Иначе оно будет присвоено абзацу, на котором стоит курсор.
 После того, как нужный элементу присвоена метка, не него можно ссылаться. Для этого выделяем фрагмент текста, который послужит текстом для линка и вызываем команду  Edit\Style\Link  ( Ctrl+L ).
 После этого курсор автоматически перемещается в поле «Href:» панели линков. Не торопитесь набирать имя метки вручную. Нажимая стрелки управления курсором «вверх» и «вниз» можно перемещаться по списку всех меток документа, причем перед именами уже будет стоять «#». Выбрав нужную метку, нажимаем Enter.
 Линк создается строго в пределах одного абзаца. Если при вставке линка выделить фрагмент текста больше чем один абзац, то будут созданы несколько линков.
 В FB Editor линки выделяются синим цветом и подчеркиванием. Гипертекстового перехода в редакторе не предусмотрено, так что, если понадобится протестировать линки, нужно открыть книгу в HaaliReader или другой читалке, поддерживающей линки.
 Убрать линк можно, установив курсор на него и вызвав команду  Edit\Style\Remove link  ( Ctrl+U ).
 Не следует злоупотреблять ссылками и превращать книгу в подобие Интернет-сайта. И уж тем более, совершенно недопустимы ссылки типа «читайте  здесь »! Ведь, после преобразования книги в другой формат, такие «ссылки» потеряют всякий смысл.
 Сноски отличаются от линков, тем, что ведут не в произвольное место книги, а в специально предназначенный раздел-body «notes».
 Соответственно, чтобы делать сноски, нужно сначала этот раздел создать.
 Для этого переходим в режим редактирования исходника и, найдя в конце книги закрывающий тэг </body>набираем  после него:

 <body name="notes">
 <section>
 <empty-line/>
 </section>
 </body>

 Значение атрибута «name» элемента  body должно быть именно «notes».
 Дополнительное body можно вставить командой  Edit\Add\Body  ( Ctrl+B ). Но потом все равно придется лезть в редактор исходника, чтобы добавить атрибут name.
 Затем добавляем секции. Одна сноска — одна секция.
 Если сносок очень много и они короткие, можно попробовать делать их просто абзацами. Этот метод, правда, имеет небольшой недостаток, выражающийся в том, что при переходе на сноску в читалке, будут отображаться все сноски, расположенные ниже выбранной. И, возможно, валидаторы библиотек могут забраковать такой файл.
 В начале текста сноски должен идти порядковый номер сноски.
 Секциям или абзацам, соответственно, присваиваются имена, например, «note01» и т.д.
 После этого можно ссылаться на них. Для этого служит элемент «сноска». В отличие от линка, для сноски очень желателен специальный текст. Обычно это цифра в квадратных скобках, например, «[1]». При необходимости набрав, а затем выделив ее, вызываем команду вставки сноски:  Edit\Style\Footnote  ( Ctrl+W ). Выбор имени метки делается точно так же как для ссылки.
 Настоятельно рекомендую заключать сноски именно в квадратные скобки. Это практически стандарт. Фигурные скобки «{}» обычно применяются для ссылок на список использованной литературы. А просто цифры, без скобок, конечно, выглядят красивее, но, при экспорте книги в txt, они просто потеряются.
 Кстати о красоте. Если после слова идет знак препинания, то гораздо эстетичнее помещать сноску после этого знака, а не втискивать между ним и словом.
 Если в книге  очень много сносок, как, например,  в эпопее Л.Н. Толстого «Война и мир», то представляется весьма разумным помещать текст сносок прямо в основном тексте, отграничив его все теми же квадратными скобками. Это идет несколько вразрез со стандартом, но главное для нас — удобство читателей, а программы-ридеры, которые показывают сноски как всплывающие окна, еще не появились.
 Ликвидировать сноску можно все той же командой Edit\Style\Remove links.


Вставка иллюстраций

 Вставить в книгу иллюстрации очень просто.
 В меню Edit выбираем пункт  Insert/Image  ( Ctrl+M ). 
 (Не перепутайте с аналогичной командой —  Edit\Add\Image  ( Ctrl+G ). Она выполняется точно так же, но предназначена для вставки картинок  строго в начало секции .)
 Должна появиться картинка с красной надписью «Unknown image ID». Это так называемая картинка-болванка.
 Теперь надо присоединить настоящую картинку к файлу книги и связать ее с тэгом иллюстрации.
 Присоединяем файл картинки командой  Edit\Add Binary Object .
 Затем выделяем картинку-болванку и щелкаем по полю «Href:» панели линков. Нажимая стрелки управления курсором «вверх» и «вниз», выбираем картинку. Она тут же появится вместо картинки-болванки.
 О том, как подготовить картинку-иллюстрацию читайте ниже. «§ 5.2. Подготовка картинок»
 Подписи к иллюстрациям рекомендуется делать обычным текстом, отделяя его от основного текста пустой строкой. Можно дополнительно выделить текст курсивом.
 А если нужно быстро вытащить картинки из книги? Нет проблем. Проэкспортируйте ее в HTML (File\Export\To Html). Все картинки будут в каталоге [имя файла]_files, который будет создан в том же каталоге, что и файл HTML.

 == ЭТО ИНТЕРЕСНО ==================
 Бывает, нужно извлечь растровую картинку из документа M$ Word. Функции экспорта картинок там не предусмотрено. Можно скопировать картинку в буфер, но если ее  масштабировали , то она и скопируется с измененными размерами.
 Как быть? Все очень просто. Сохраняем Word-документ, как HTML и все картинки будут в каталоге [имя файла]_files. В первозданном виде.
 ===============================


 § 4.5 Использование регулярных выражений

 Функции поиска и замены в FB Editor предусматривают использование регулярных выражений (Regular Expressions, RegExp).
 Регулярные выражения представляют собой квазиязык, объединяющий набор шаблонов и подстановок, используемых при поиске и замене фрагментов текста. Это очень мощный инструмент, кардинально облегчающий обработку текстовых документов.
 Синтаксис регулярных выражений в FB Editor заимствован из языка Perl.
 В приложении к книге дано краткое описание синтаксиса регулярных выражений, использующихся в FB Editor. Однако, настоятельно рекомендую этим не ограничиваться, а прочитать хороший учебник по языку Perl. А еще есть замечательная книга Дж. Фридла: «Регулярные выражения». Хорошенько поискав, ее можно найти в Сети ;)).
 Рассмотрим использование регулярных выражений на примере достаточно сложной, но часто встречающейся задачи — замены компьютерных кавычек «""» на типографские „«»“.
 Основная проблема здесь в том, что открывающие и закрывающие компьютерные кавычки одинаковы. Поэтому приходится ориентироваться по символам, расположенным рядом.
 Обычным способом придется вызывать команду поиска\замены не менее десяти раз, рискуя что-то забыть или перепутать. Регулярные выражения позволяют произвести все замены за четыре захода.
 Для начала примем за аксиому, что кавычка, расположенная в самом начале абзаца — открывающая, а в самом конце — закрывающая. 
 Вызываем команду Edit\Replace.
 В поле поиска «Find what:» вводим конструкцию для поиска:

 ^"

 В поле замены «Replace with:» вводим конструкцию замены. В этом случае она совсем простая:

 «

 Не забыв установить флажок «Regular expression», нажимаем кнопку«Replace All».
 Аналогично, для кавычки в конце абзаца конструкции поиска и замены будут:

 "$

 и

 »

 Выражения «^» и «$» называются  литералами и обозначают начало и конец строки соответственно. В конструкции замены они не нужны.
 Теперь обработаем оставшиеся кавычки.
 Начнем с открывающей кавычки. Перед ними обычно идет пробел. Ну, иногда еще дефис или скобка.
 Конструкция для поиска будет такая:

 ([\s\(-])"

 Конструкция замены:

 $1«

 В квадратных скобках мы перечислили символы,  один из которых может идти перед искомой кавычкой. Литерал «\s» обозначает пробельный символ. Символ «скобка» является  зарезервированным , так как используется в самих конструкциях регулярных выражений, поэтому, чтобы искать его в тексте, мы отделили его косой чертой. Заключив все это в круглые скобки, мы образовали выражение, к которому будем обращаться из строки замены. И в конце непосредственно сама искомая кавычка.
 Символ, который идет перед кавычкой, нужно оставить в неприкосновенности. Поэтому в поле замены вводится обращение к выражению в строке поиска — $1.
 Теперь закрывающая кавычка. После нее могут идти: пробел, запятая, точка, закрывающая скобка, вопросительный знак, восклицательный знак, дефис, символ «многоточие».
 Конструкция поиска:

 (\S)"([\s\!\.\)-…,?:;])

 Конструкция замены:

 $1»$2

 Здесь используется два выражения. Первое означает, что перед закрывающей кавычкой должен идти НЕ пробел. Второе выражение содержит перечисление символов, которые могут идти после нее. Соответственно, в конструкции замены идет обращение к двум выражениям.
 Напоследлк должен заострить ваше внимание, что в режиме исходника FB Editor регулярные выражения функционирует несколько по-другому. В частности, не получается использовать метасимвол «|», некорректно обрабатываются перечни, содержащие кириллицу.

 § 4.6 Использование скриптов 

 Автор FB Editor предусмотрел расширение его возможностей при помощи Java Script.
 Вызываются они из меню Tools\Scripts\[скрипт].
 Первые девять скриптов можно вызывать клавишами Ctrl+1…9.
 Документации, разумеется, не предусмотрено никакой. Во всем придется разбираться самостоятельно.
 Поэтому, перед тем, как заняться написанием скриптов, необходимо проштудировать хороший справочник по функциям JavaScript с примерами.
 Очень подробный справочник входит в состав MSDN Library. Много полезной информации можно найти также на W3SCHOOLS.
 Из бумажных изданий могу посоветовать «JavaScript и DHTML: сборник рецептов» Дэнни Гудмана (доступна в Сети) и «Полный справочник по JavaScript» Фрица Шнайдера. Обе эти книги издавались на русском языке.
 В газетной публикации я приводил два простеньких скрипта собственного изготовления.
 Здесь такой необходимости нет. Как пример, рекомендую посмотреть скрипты, написанные для FB Writer, моим земляком, известном на форуме FictionBook.org под ником Sclex.
 Правда, тут есть одно маленькое, но очень вредное «но». Механически перенести наработки Sclex-а под FBE 1.0 не получится. Они жестко заточены под FB Writer и совместимый с ним FB Editor 2.0.

 § 4.7 Баги с нами!

 Хотя FB Editor — довольно надежная и функциональная программа, он все-таки содержит несколько неприятных ошибок.
 Вот, к примеру, символ по внешнему виду похожий на тире «—» (десятичный код 173) в режиме WYSIWYG не виден. Вернее виден, только если приходится на конец строки. Приходится переключаться в режим Source и вылавливать эти символы-паразиты.
 Бывает так, что при попытке сохранить книгу выскакивает окошко со следующим сообщением:

 Code: 8004005 [Unspecified error]
 Source: msxml4.dll
 Description: Unexpected NameSpace parameter

 Это, скорее всего, где-то образовалась ошибочная конструкция наподобие section/EM/cite/EM.
 Паниковать не надо. Внимательно пройдитесь по всей книге, обращая особое внимания на цитаты и стихи. Обнаружив цитату или стихи, разорванные на отдельные абзацы, аккуратно соберите их в один элемент.
 Такое также случается, если вы копировали через буфер содержимое html, в котором содержались картинки. Найдите эти картинки и удалите.
 Также небезопасно превращать абзац в subtitle и тут же отменять это действие. Есть риск, что программа «захлопнется». Разумеется, ничего при этом не сохранив.
 При редактировании, если рядом оказыывается два и более подряд идущих пробелов FB Editor автоматически конвертирует второй и последующие пробелы в неразрывные. Вообще-то это никакой не баг, а особенность, связанная с тем, что FB Editor использует DHTML, но все равно очень раздражает.

 § 4.8 Дальнейшее развитие редактора

 C начала 2007 года вокруг FB Editor наблюдается весьма активное шевеление. Не совсем, откровенно говоря, здоровое.
 За модернизацию FB Editor взялись сразу два человека.
 Автор, известный на форуме Fictionbook.org, как Pilgrim, доработал FB Editor, так, чтобы он поддерживал все новшества FictionBook 2.1. К сожалению, энтузиазма у него хватило ненадолго. 
 Алексей Савельев (Alex Saveliev), выпустивший свой продукт под названием FB Writer, напротив, сделал упор на функциональность программы. Обеспечена совместимость с IE 7.0, исправлено несколько особенно вредных ошибок, доработан интерфейс, появилось много новых «фич». Особого внимания и, чего кривить душой, восхищения, заслуживают написанные под FB Writer скрипты, значительно облегчающие и ускоряющие подготовку книги. Начиная с версии 2.0 была реализована даже проверка правописания.
 Все было бы хорошо, но Алекс потребовал за свою работу деньги. Мало того, последние версии редактора требуют для запуска подключение к Internet, что автоматически вычеркнуло эту софтину из списка программ, которые я использую.
 Кончилось все это печально, но закономерно. Какой-то доброхот взял, да и взломал FB Writer. После чего разобиженный автор закрыл проект.
 К счастью, еще до этого грустного финала совершенствованием FB Editor-а занялся программист компании «ЛитРес». За основу были взяты исходники Pilgrim-a. На данный момент этот продукт является, хотя и весьма сырой, но самой многообещающей разработкой в этой области.




 Часть V
 Прочие вопросы создания книг в формате FictionBook



 § 5.1 Советы по оформлению книг

 Совет номер один. Не стоит стремиться воспроизвести все полиграфические изыски печатного оригинала.
 В понятие «изыски» входит, например, выделение заголовков жирным или курсивным шрифтом, отбитие фрагментов текста пустыми строками и т.д.
 Но некоторые правила оформления бумажных книг полезны и даже обязательны для книг электронных.
 Это касается, в частности, использования специальных символов.
 Символ «тире» или «минус», который имеется на клавиатуре, вовсе не «тире», а дефис.
 Для обозначения «тире» используется символ «длинное (оно же типографское) тире» (десятичный код 151). Как набирать символы через десятичные коды см.«§ 5.6 Символы, которых нет на клавиатуре».
 Короткое тире — «–» (десятичный код 150) используется между числами, например: «1941 – 1945 г.» или в качестве математического минуса.
 Кавычки также должны быть типографские, «елочкой» — „«»“. Возможно также использование кавычек «лапками», — «„“», особенно, если это кавычки вложенные. При загрузке книги в библиотеку Альдебарана управляющий скрипт автоматически заменяет вложенные кавычки «елочки» на «лапки». Использование компьютерных кавычек «""», а также английских (верхних) кавычек «“”» в русскоязычных книгах недопустимо.
 Если понадобилось сделать р а з р я д к у, делайте ее с помощью неразрывных пробелов (дес. код 160). Но, вообще-то, злоупотреблять разрядкой не следует.
 Об использовании неразрывных пробелов. В FB2 ими отделяются: а) длинное тире в начале прямой речи от идущего следом слова; б) длинное тире в тексте от идущего впереди слова или знака препинания. Еще неразрывным пробелом можно «связать» идущий в начале предложения однобуквенный предлог со следующим словом.
 Списки можно организовать, ставя в начале каждого абзаца символ «bullet» — «•», или «звездочку» — «*». Первый и последний абзац списка можно отделить от основного текста пустыми строками. Еще можно офомить список элементом cite.
 Если перед началом главы или эпизода идет место и время действия, то наиболее целесообразно выделять его курсивом, и пустой строкой после. Но никак не подзаголовком.
 В некоторых произведениях после названия главы идет краткое ее содержание (пример: «Робинзон Крузо» Д. Дефо; «Путешествия Гулливера» Дж. Cвифта, почти все произведения Янки Мавра, и т.д.) На данный момент, для выделения таких описаний наиболее разумно использовать элемент cite. Возможно дополнительное выделение курсивом. В будущем для этого был бы хорош специальный элемент.
 Надписи.
 Дмитрий Грибов настоятельно рекомендует оформлять их элементом  cite .
 Были идеи оформлять надписи, как таблицы. Однако они были отвергнуты, поелику такое нестандартное использование таблиц является хаком.  [5.1] 
 Последнее решение таково:
 Надписи оформляются элементом  cite .
 Надписи, требующие центровки, оформляются элементом  subtitle , помещенным ВНУТРЬ элемента cite.
 Правда, FB Editor не позволяет сделать это так просто. Команда  Edit\Style\Subtitle внутри элемента cite неактивна.
 Поэтому поступаем следующим образом. Аккуратно перемещаем текст в буфер ( Edit\Cut ), вставляем его в произвольном месте ВНЕ элемента  cite , трансформируем в  subtitle , выделяем  subtitle ЦЕЛИКОМ, вновь перемещаем в буфер обмена и вставляем в элемент  cite .
 Особо вычурные надписи допускается оформлять картинкой. Например, это полностью касается рисованных надписей из трилогии Кира Булычева «Заповедник сказок».
 Еще одна глубокая и больная тема — таблицы. Несмотря на то, что последняя версия формата полностью поддерживает таблицы, отсутствие оной поддержки в редакторах, и, самое главное, библиотечных скриптах, не дает возможности нормально оформлять их.
 Поэтому здесь можно рекомендовать только индивидуальный подход. Где-то уместно сделать таблицу просто строчками текста. Где-то — нарисовать картинкой и вставить в текст.

 == ЭТО ИНТЕРЕСНО =================
 Трансформировать таблицу, созданную, к примеру, в Excel, в растровую картинку, проще простого. Аккуратно выделяем таблицу и копируем в буфер обмена. Затем вставляем ее, в программу редактирования растровых картинок. В тот же MS Paint, хотя бы. И сохраняем как картинку.
 ===============================

 Второй метод применим лишь для относительно небольших таблиц. Ведь при просмотре книги на КПК читалка отмасштабирует получившуюся картинку под размер экрана. И, если таблица будет слишком велика, текст получится слишком мелким, то есть — нечитаемым.
 После окончания работы на книгой ее обязательно нужно просмотреть в читалке, лучше даже в нескольких. Часто при этом выплывают нюансы, которые при работе в FB Editor можно упустить из виду.
 И последнее. Не стесняйтесь задавать вопросы. На форуме сайта формата ( http://www.fictionbook.org/forum ) вам охотно помогут. Главное, чтобы ваши вопросы не были откровенно дилетантскими…

 § 5.2 Подготовка картинок

 Перед тем, как добавить в книгу картинки, следует хорошенько подумать.
 Дело в том, что картинки очень сильно «утяжеляют» файл. Дополнительные килобайты объема складываются в мегабайты, мегабайты в гигабайты. Траффика. А траффик стоит денег. Если Вам не жалко денег пользователей, задумайтесь над тем, что чрезмерный траффик не приветствуется хостерами, тем более, если у вас платный хостинг. Да и в онлайн-библиотеку возьмут не всякий «объемный» файл.
 Поэтому помещать в файл картинки имеет смысл, только в том случае, если они имеют художественную ценность и хорошо иллюстрируют содержание произведения.
 К таким относятся, например, иллюстрации художника Е. Мигунова к произведениям Кира Булычева.
 А вот выложенная в начале 2008 года на «Альдебаране» «Хижина дяди Тома» могла прекрасно обойтись без иллюстраций. Учитывая качество их сканирования и масштабирования.
 И главный критерий при подготовке картинки для книги — минимизация объема.
 Первый  способ снизить размер файла заключается в грамотном выборе формата файла картинки.
 Несмотря, на то, что FB Editor поддерживает вставку картинок в формате BMP и даже TIFF, при выборе формата картинки следует знать, что читалки пока поддерживают только два формата — JPEG и PNG.
 JPEG характеризуется исключительным коэффициентом сжатия. Естественно, за счет понижения качества карттинки.
 Разработанный «в пику» платному формату GIF, PNG использует методы сжатия, не изменяющие исходного изображения.
 Эти особенности и определяют выбор формата для конкретного изображения.
 Для полноцветных картинок — как правило, это фотографии или полутоновые картинки — обычно используется JPEG. Картинки же, имеющие большие площади одинакового цвета — штриховые рисунки и диаграммы, к примеру, лучше сжимать в PNG.
 Например, картинка-скриншот 800x600 в формате JPEG занимает 70–80 kB, а в формате PNG (64 цвета) — 38–45 kB. Разница налицо.
 И, наоборот, полноцветная картинка обложки (320 x 200) в формате PNG «весит» 134 kB, а в формате JPG — 34 kB, при практически одинаковом качестве. Разница — 100 kB.  Несжимаемых  100 kB, заметьте. При упаковке книги в архив, эти 100 kB добавятся к его размеру.
 При большом количестве иллюстраций, перед тем, как присоединять картинки к книге, имеет смысл обработать их программой, убирающей из JPEG служебную информацию. Например, PureJPG. Картинки PNG можно просто перепаковать.

 == ВАЖНО! =======================
 Оставшаяся в файлах картинок служебная информация, кроме увеличения объема, может просто-напросто помешать выводу этих картинок в читалке.
 К примеру, грандиозная работа по сканированию и компоновке картинок, проделанная человеком, готовившим книгу Э. Скобелева «Необыкновенные приключения Арбузика и Бебешки» пошла коту под хвост, так как из-за оставшейся в файлах PNG служебной информации программы Adobe ImageReady картинки не может отобразить ни одна читалка,  за исключением FBReader…
 ===============================

 Уменьшить объем файла PNG можно, в первую очередь, уменьшая размер картинки в пикселах.
 До каких размеров? Как можно, меньше, но чтобы при этом ясно можно было понять, что изображено на рисунке.
 Год-два назад я бы уверенно заявил: «Не более 320 x 240».
 Сейчас же все большее распространение получают КПК и коммуникаторы с полным VGA–экраном. (640 x 480).
 И тем не менее, в подавляющем большинстве случаев 320 x 240 более чем достаточно. Поверьте на слово.
 После того, как Вы уменьшили картинку, она станет несколько смазанной. Устранить это можно, обработав ее фильтром Sharpen (увеличение резкости).
 Кроме того, можно уменьшать количество цветов. Обычно для скриншота программы хватает 32–64 цветов, для графика или диаграммы — и 16 более чем достаточно.
 При этом следует, по возможности, избегать чисто двуцветных черно-белых (black&white) картинок. Проблема в том, что они гораздо хуже масштабируются, давая неаппетитный «мусор».
 Если картинка — штриховой рисунок, то фон имеет смысл сделать прозрачным. Ведь фон в читалке совсем не обязательно будет белым. Он может быть и цветным и текстурным. В таком случае вокруг рисунка появятся некрасивые белые поля.
 Что же касается JPEG, здесь также играет роль размер картинки в пикселах. А также коэффициент качества (сжатия). JPEG — формат с потерей качества, поэтому, чем больше сжатие, тем хуже качество картинки. Могу с уверенностью сказать, что для картинок, использующихся в FictionBook, вполне допустим коэффициент сжатия 50–60%.
 Можно обрабатывать картинки в PhotoShop. При этом готовые картинки необходимо сохранять при помощи функции «Save for Web»,  чтобы не утяжелять файлик превьюшкой и служебной информацией. Очень удобно рисовать в PhotoShop обложки к книгам.
 Однако, в случае, когда требуется только изменить размер картинки и сохранить ее в компактный формат, использование PhotoShop равносильно забиванию гвоздей отбойным молотком.
 Для этих целей существует компактный и, что немаловажно, бесплатный софт. Например — XnView.
 Реализованная как просмотрщик графики с продвинутыми функциями редактирования, программка чрезвычайно удобна для подготовки картинок. Здесь есть все что нужно: масштабирование с использованием навороченных алгоритмов, уменьшение количества цветов, и, конечно же, пакетная обработка файлов.
 Подготовке картинок в PhotoShop посвящена обширная статья Marina_Ch на  www.fictionbook.org .

 § 5.3 Обложки

 Как-то на форуме fictionbook.org даже разгорелась дискуссия: а нужна ли вообще обложка электронной книге?
 Мое мнение однозначно: нужна. Обложка придает электронной книге законченный вид.
 Как правило, сканируется обложка бумажного оригинала. Размер итоговой картинки не должен превышать 320 x 240, формат — jpeg. «Вес» картинки с обложкой должен быть не более 20-25 килобайт.
 Если книжка, обложку которой вы сканируете заметно потрепана, то перед тем, как уменьшить ее, не поленитесь и отретушируйте скан. Это не отнимет у вас много времени, и заметно увеличит презентабельность книги.
 Уже упоминавшаяся выше «Хижина дяди Тома» выглядит донельзя удручающе. Выбранный букмейкером большой размер картинки обложки ничуть не улучшает качество восприятия картинки на на ней, кстати, весьма скромной. Зато отлично видна каждая трещинка и потертость на картоне…
 Как поступить, если есть текст (например, из библиотеки Максима Мошкова), а обложки нет, и отсканировать ее неоткуда?
 В этом случае на помощь нам придут сетевые книжные магазины. Любой уважающий себя магазин вместе с аннотацией книги выставляет картинку с ее обложкой. Как правило уже подходящего размера и в формате jpeg.
 Только не забудьте проверить картинку на предмет присутствия чужеродных элементов. Наподобие ленточек с надписью «Новинка» и так далее. В электронной библиотеке такие обложки будут смотреться несколько странно.
 На худой конец, можно сесть и нарисовать обложку самому. Это 10–15 минут работы в Photoshop, или графическом редакторе попроще. Написать читабельным шрифтом имя автора и название книги, подобрать картинку, и — вуаля — обложка готова.
 По поводу картинки. Она должна максимально подходить к содержанию книги. Это может быть сканированная иллюстрация из бумажного издания. Если его нет, можно нарисовать картинку самому. Если вы не художник, вас выручит коллаж из клип-артов  [5.2] или картинок из Сети.
 Для поиска картинок в Сети лучше всего воспользоваться соответствующей функцией поисковика Google. Чтобы выбор был больше, следует вводить название объекта на английском языке.
 В конце концов, если ничего подходящего найти не удалось, можно обойтись вообще без картинки…
 В качестве иллюстрации к вышесказанному, приведу пару обложек подготовленных мной для произведений Сергея Павлова.
 В произведении фигурирует горилла, используемая в экспериментах по телепортации. Поэтому в наборе клип-арта программы CorelDraw было найдено подходящее изображение гориллы, дополнено рисунком четырехконечной звездочки, переведено в растровый формат и вставлено в макет обложки, который готовился в PhotoShop.
 А эта обложка создана методом, так сказать, наименьшего сопротивления. В самом сюжете повести никаких зацепок для обложки найти не удалось. Поэтому, взяв за отправную точку то, что действие происходит в системе Юпитера, из Сети был скачан соответствующий (кстати, довольно известный) снимок и смонтирован в макет.
 Как видим, получилось неплохо. Не шедевр, конечно, но обложки вполне достойные.
 Вот чего точно не стоит делать, так это использовать обложку от издания произведения на другом языке. Мало того, что это неэстетично, так еще и сбивает читателя с панталыку.
 По тем же причинам не стоит и цеплять обложку от сборника, в который входило данное произведение, если название сборника не совпадает с названием произведения.
 В обоих случаях гораздо практичнее и эстетичнее нарисовать обложку самому.

 § 5.4 Сборник или по отдельности?

 Концепция FictionBook недвусмысленно предусматривает решение: «один файл — одно произведение».
 Но! Если бы вы только знали, как муторно качать из библиотеки множество рассказов…
 К счастью, во многих случаях, помогают сами авторы. Существуют такие вещи, как авторские сборники рассказов. Т.е. сборники, составленные самими авторами. Например, рассказы Юрия Никитина сразу выходили в сборниках. «Человек, изменивший мир», «Далёкий светлый терем». А Сергей Лукьяненко, в конце концов, собрал практически все свои рассказы в сборники «Гаджет» и «Проводник отсюда». Были такие сборники и у Артура Конан-Дойля, Кира Булычева и еще многих и многих писателей.
 Если же авторского сборника не существовало в природе, то можно «взять грех на душу» и составить сборник самому. Правда, в таком случае, ваша задача резко усложняется. Этот сборник должен быть максимально ПОЛНЫМ. Он должен включать если не ВСЕ рассказы автора, то все рассказы за определенный период или входящие в цикл.
 Хорошо, скажете вы. А как читатель сможет узнать, какие рассказы включены в сборник?
 Очень просто. Помещаем список рассказов в аннотацию.
 На худой конец, для списка рассказов в начале книги можно создать отдельную секцию. Но вариант с аннотацией выглядит гораздо элегантнее. Это подтверждает активное использование его букмейкерами «ЛитРеса».
 Произведения калибром повести и больше, если они включены в такие сборники самим автором, наоборот, целесообразно выводить в отдельные файлы. НО! При условии, что они сюжетно не связаны с рассказами сборника.
 А вот «издавать» «полновесные» произведения «под одной обложкой», пусть даже они и выходили в таком виде на бумаге, вообще ЖУТКАЯ ЕРЕСЬ. Мимолетное удобство читателя обернется нешуточными проблемами при структурировании библиотеки.
 Хотя,  в принципе , тексты калибра повести (300–400 кB), не больше, если они  сюжетно взаимосвязаны , объединять все-таки допустимо… Например, это касается трилогии C. Лукьяненко «Принцесса стоит смерти», сетевых повестушек про Штирлица и Винни-Пуха и т.д.
 Необходимо, также, по мере возможности, избегать многоавторских сборников. К ним относятся всевозможные альманахи,  [5.3] тематические, юбилейные, подарочные сборники и т.д.

 § 5.5 Советы по вычитке книг

 Эта глава предназначена, в первую очередь, для тех подвижников, которых не устраивает качество представленных в онлайн-библиотеках книг и они берутся править (вычитывать) их собственноручно.
 Кроме того, при серьезной подготовке книги также неизбежно приходится заниматься ее вычиткой.
 Браться за вычитку лучше всего, имея под рукой качественный бумажный оригинал. Если же его у вас нет, то необходим твердый высший балл по языку, на котором написана книга. В противном случае, заниматься правкой книги просто не имеет смысла.

 == ВАЖНО! =======================
 Даже если у вас был действительно высший балл по русскому языку, перед тем, как серьезно заняться корректурой, все равно стоит освежить в памяти правила. Как нельзя лучше для этого подходят книги Д.Э. Розенталя. Они доступны в Сети.
 ===============================

 Опечатки, которые встречаются в текстах подразделяются на две категории: собственно опечатки и, на порядок чаще встречающиеся, ошибки программы распознавания (OCR).
 Чаще всего программа распознавания путает буквы «с» и «е», «д» и «л», «и» и «н», «ц» и «п». («Стае» — «Стас»,  «потрясение» — «потрясенно», «липо» — «лицо»). Она может также посчитать пару букв одной буквой. Например, «гр»и «ф» — «неф» — «негр». Бывает, OCR-софт путает точки и запятые.
 Еще один очень распространенный баг сканированных текстов — это неправильное разбиение на абзацы. Большую часть таких глюков выловить несложно — например, если текст идет сразу после прямой речи. С остальными, скорее всего, придется смириться.
 Что же касается собственно опечаток, то к ним относятся опечатки в бумажных оригиналах. Или,  в авторских текстах, если книга не публиковалась на бумаге. Особенно грешат опечатками книги, издавашиеся в 1990–1995 годах. Здесь может положиться только на великолепное знание языка и понимание произведения. Ну, еще можно поискать другое издание книги…
 Сама правка, по крайней мере, внешне, ничего сложного из себя не представляет. Читаем текст, по ходу вносим исправления. Повторяющиеся ошибки отлавливаем с помощью поиска, а особо многочисленные — правим с помощью функции «Replace». Последним средством надо пользоваться  очень осмотрительно.
 Как быть, если в тексте обнаружены пропуски?
 Найти в Сети более качественный текст очень трудно. Библиотеки обычно копируют один и тот же скан друг у друга. Тем не менее, попробовать стоит.
 Например, некоторое исключение из вышеуказанного правила составляет библиотека «Фензин». Там иногда можно найти альтернативные сканы.
 Если же файла лучшего качества так и не нашлось, нужно постараться все-таки найти бумажный оригинал.
 Если же и этого  сделать  не удалось, то просто пометьте место пропуска характерным значком, например, «-?-». Кто-нибудь когда-нибудь это исправит…
 Но самое главное — нельзя увлекаться и превращаться из корректора в редактора! Даже, если вы внимательно проштудировалии книги Д.Э. Розенталя.
 В частности, следует знать, что существуют намеренные искажения и описки, призванные донести до читателя некий особый смысл выражения — так называемые «авторизмы». Например, «изячный» и «инсвинуации» у Юрия Никитина.
 Поэтому, если у вас есть хоть малейшие соменения в необходимости исправления, лучше оставить все как было.
 Разные издания книг могут  отличаться . Cводить их, и приклеивать нос Ивана Петровича к ушам Василия Семеновича,   без ведома автора , НИ В КОЕМ СЛУЧАЕ НЕЛЬЗЯ. Могут не понять и не оценить.
 Еще один враг корректора — перфекционизм. Как бы тщательно ни вычитывался текст, какой-то процент опечаток в нем все равно останется. А качественно вычитать захватывающие, драйвовые произведения вообще невозможно. Следует принимать все это как данность и уметь остановиться, прежде чем вполне увлекательное занятие превратится в каторгу.
 Отдельного упоминания заслуживают «ляпы» перевода.
 К примеру, при переводе трилогии «Темный эльф» Р. Сальваторе, переводчик-олигофрен не нашел ничего умнее, как обозвать гордых эльфов-дроу — «дровами». А благороднейшее имя главного героя — «Дриззт» — взял и «облагозвучил», переиначив в «Дзирт». Не мудрено, что эти и подобные им «клюквы», вызывают непреодолимое желание исправить их.
 Но как бы ни чесались у вас руки, править такие ляпы стоит только в самом крайнем случае. Потому как, в этом случае у вас получится не просто выправленная книжка — но свой вариант перевода . Конечно, если вы выложите такую книгу на фэнский сайт, или что-то подобное, ничего страшного. Но для библиотеки такие книги могут оказаться непригодны.
 Перед любой мало-мальски серьезной вычиткой следует сохранять исходные копии книги, и, по окончании вычитки, производить сверку. Это хорошо помогает подчистить огрехи вычитки.
 Для сравнения файлов лучше всего подойдет программа Compare It!.
 Вообще же, основные перспективы вычитки связаны с созданием читалки и редактора,  совместимых по закладкам .

 § 5.6 Символы, которых нет на клавиатуре

 В процессе подготовки книг весьма быстро обнаруживается, что некоторые символы, необходимые для грамотного оформления книги, отсутствуют на клавиатуре.
 В Micro$oft Word для ввода таких литер есть функция «Вставка\Символ». Также можно настроить автозамену.
 B самой Windows также есть утилита Character Map (Accessories\System Tools\Character Map). Но каждый раз  выбирать нужный символ из матрицы, копировать в буфер, потом вставлять куда нужно, крайне неудобно.
 Поэтому наш метод таков. Зажимаем клавишу Alt и на боковой цифровой клавиатуре справа (должен быть включен NumLock)  набираем десятичный код символа.
 Вот краткий перечень символов, которые можно вводить таким образом:
 Alt-0132 — „ , левая нижняя кавычка, «лапка»;
 Alt-0133 — … , «многоточие» ( Ctrl+. );
 Alt-0134 — †, католический крест;
 Alt-0134 — ‡, православный крест (?);
 Alt-0147 — “ , правая верхняя кавычка, «лапка»;
 Alt-0149 — • , символ «bullet»;
 Alt-0150 — — , короткое тире ( Ctrl+- );
 Alt-0151 — — , длинное тире ( Ctrl+= );
 Alt-0153 — ™, знак «торговая марка»;
 Alt-0160 —   , неразрывный пробел;
 Alt-0161 — Ў, белорусское «у краткое» заглавное.
 Alt-0162 — ў, белорусское «у краткое» строчное.
 Alt-0167 — §,  «параграф»;
 Alt-0169 — ©, знак копирайта;
 Alt-0171 — «, левая кавычка, «елочка»;
 Alt-0174 — ®, знак «зарегистрированная торговая марка»;
 Alt-0176 — °, символ «градус»;
 Alt-0177 — ±, математический знак «плюс-минус»;
 Аlt-0181 — µ, греческое «мю»;
 Аlt-0183 — ·, точка умножения 
 Alt-0187 — », правая кавычка, «елочка»
 Внимание! При наборе символов «Ў» и«ў» должен быть включен русский регистр.
 Поначалу, такой способ набора спецсимволов кажется неудобным и громоздким, но затем привыкаешь настолько, что начинаешь использовать их даже в постинге на форумах…

 == КСТАТИ… =======================
 Хотя для неразрывный пробела в FB Editor горячей клавиши и не предусмотрено, его можно набирать и несколько проще. Нажимаем два раза на «пробел» и следом — раз на «BackSpace». Или же, если надо заменить уже существующий пробел на неразрывный, ставим курсор перед этим пробелом, нажимаем «пробел» и затем — «BackSpace».
 Дело в том, что FB Editor при вводе двух и более пробелов, автоматически заменяет их, кроме последнего введенного, на неразрывные.
 ===============================


 § 5.7 Высокое искусство аннотации

 Рано или поздно вы столкнетесь с необходимостью самим аннотировать текст.
 Вообще, аннотация для электронной книги очень важна. Это в книжном магазине покупатель может взять книгу в руки, полистать. В электронной же библиотеке читатель выбирает книгу именно по аннотации. Даже если есть возможность предварительно просмотреть книгу, мало кто тратит на это время.
 Опираясь на все вышесказанное, можно заключить: хорошая аннотация для художественного произведения — это  частичный пересказ содержания. Кусочек,  краешек сюжета. Но кусочек  вкусный .
 Следует также, по мере сил, воздерживаться от  оценки произведения в аннотации. Захватывающая это книга или смертельно скучная, могут судить  только читатели.
 Например вот эту аннотацию назвать удачной никак нельзя:

 Роман «Пиранья: Первый бросок» — открывает серию захватывающих бестселлеров о Кирилле Мазуре. В поисках золота с затонувшего фрегата, на который советских боевых пловцов навела сотрудник французских спецслужб очаровательная Мадлен де Ронак, им приходится вступать в бой с пиратами.

 Хотя бы, потому, что тот факт, что Мадлен де Ронак — сотрудниц А французских спецслужб, выясняется только в самом конце книги.
 Или вот еще аннотация к книге Александра Зорича «Время — московское»:

 Война. Галактическая война. Война между Российской Директорией и тоталитарной планетой Конкордия — недавними союзниками Директории, предательски нарушившими мирный договор. Война, в которой земляне долго терпели поражение за поражением, но теперь ситуация РЕЗКО ИЗМЕНИЛАСЬ. Потому что теперь Директория обладает НОВЫМ, УНИКАЛЬНЫМ ОРУЖИЕМ — космическими истребителями «Дюрандаль». Истребителями, которые пилотируют недавние выпускники Военно-Космической Академии, ставшие отчаянными боевыми офицерами. Казалось бы, шансы противника на победу МИНИМАЛЬНЫ. Однако Конкордия тоже не раскрыла еще ВСЕ свои карты… Читайте «Время — московское!» — продолжение ВЕЛИКОЛЕПНЫХ романов Александра Зорича «Завтра война» и «Без пощады»!

 Кроме того, что аннотация малоинформативна и слишком трескуча, она еще и вызывает раздражение у фанатов серии. Ибо вовсе не истребители «Дюрандаль», а X-крейсера являются тем новым, уникальным оружием, котрое переломило ход войны. А последнее предложение просто лишнее.
 Отсюда логично вытекает совет — не следует механически, бездумно, копировать аннотацию из бумажного издания или онлайн-магазина.
 Если книги составляют серию, то дублировать аннотацию из книги в книгу, как это сделано, например, в сериях «Бригадир державы» и «Звездный взвод» совершенно недопустимо. Каждая аннотация должна быть индивидуальной.
 Аннотацией может послужить и удачная цитата из книги, удовлетворяющая приведенным выше требованиям.
 Что же касается документальных, публицистических и тому подобных изданий, то к ним подход кардинально отличается.
 После краткого описания темы издания следует обязательно оценить качество подачи материала.
 Здесь уместны выражения, «обстоятельно», «подробно», «в живой манере», «исчерпывающе» и т.д.




 Часть VI
 Просмотр и конвертирование книг в формате FictionBook


 Хотя формат XML допускает чтение его человеком напрямую, для нормального просмотра книг в формате FictionBook требуется специальная программа-ридер (читалка).
 Кроме того, иногда возникает необходимость преобразовать книгу в другой формат. Например, чтобы распечатать ее.

 § 6.1 Читалки



Haali Reader

 Написанная автором FB Tools Михаилом Мацневым первая читалка для FictionBook, до сих пор считается эталоном. Именно версии Haali Reader для КПК PocketPC и ее клонам формат обязан своей популярностью.
 Читалка существует в версиях для PC (Win32), Pocket PC (Windows Mobile, процессоры ARM, MIPS, SH3) и Cassiopeia BE-300.
 Несмотря на спартанский интерфейс, возможности программки весьма широкие. Она позволяет настроить вывод текста, гарнитуру шрифта и цвет для каждого элемента в отдельности. Поддерживает сглаживание шрифта, в двух вариантах: Micro$oft ClearType и «самопальное».
 К сожалению, последние годы читалка практически не совершенствовалась и «сдает позиции» более продвинутым решениям от других авторов.
 Заметным недостатком читалки является также то, что она не может показывать некоторые картинки jpg. Точнее, те из них, binary-секции которых специфицированы не как «image/jpeg», а «image/jpg».
 Резюме. Неплохая, очень нетребовательная к ресурсам, но безнадежно устаревшая читалка, популярность которой держится, в основном, на консерватизме пользователей.


CoolReader

 По сравнению с HaaliReader, эта читалка является гораздо более совершенной.
 Текст красиво отображается на экране в виде свитка или развернутой книги. Разумеется, поддерживается продвинутое сглаживание шрифта.
 Читалка поддерживает все инновации FictionBook 2.1, включая таблицы.
 Можно экспортировать книгу в HTML и RTF. Правда, файл получается весьма убогий, даже заголовки не выделены. Фактически, это TXT.
 Используя голосовой движок (Micro$oft SAM или Digalo) книгу можно «озвучить», и даже сохранить в mp3-файл.
 В данный момент автор занят серьезным развитием версии 3.0. Уже реализовано несколько интересных идей, в частности, настройка внешнего вида книги через через CSS, экспорт книги в Jinke Book Wolf, отображение сносок, как и полагается в приличной книжке, внизу виртуальной страницы.
 В перспективе планируется выпуск версий читалки для разных платформ. В частности, уже существует версия для Linux.
 Резюме. После некоторой доводки, эта софтина должна стать читалкой №1 для PC.


AlReader

 Изначально разрабатывалась, как альтернатива Haali Reader, для Windows Mobile-устройств. Но уже выпущена версия для Windows XP.
 Надо сказать, альтернатива получилась качественная. Фактически, нужда в Haali отпадает совсем.
 Читалка «всеядна», умеет работать даже с zTXT PDB, что по достоинству оценят «пальмоводы», сменившие свой архаичный КПК на PocketPC.
 Alreader, пусть пока и не идеально, поддерживает новшества FictionBook 2.1, включая таблицы.
 Закладки, обычные и глобальные, механизм сбора цитат, плавная автопрокрутка, профили настроек экрана «День»-«Ночь» (с возможностью создания собственных профилей).
 Интерфейс читалки более дружественный, чем у Haali. А обилие настроек смущает только поначалу.
 Читалка умеет экспортировать книгу в TXT, PDB и HTML. Преобразование в текст весьма качественное, заголовки, подзаголовки, стихи отбиваются пустыми строками.
 В последних версиях реализован вывод текста двумя колонками, растровые подложки, и даже (наконец-то, сбылась мечта идиота!) правка текста.
 Помимо всего этого, софтина отлично документирована. В компленте идет иллюстрированная книга FB2.
 Резюме. Де-факто, это читалка №1 для Pocket PC. Пускай, не по распространению, но по функциональности и качеству исполнения.


FBReader

 Разработанная изначально для Linux и Palm Zaurus эта читалка недавно обзавелась и версией для Windows.
 Несмотря на то, что читалка не обладает какими-то выраженными достоинствами (в текущей версии нет даже экранного сглаживания!), она все равно оставляет приятное впечатление.
 Читалка имеет качественный библиотечный модуль, сортирующий книги по авторам и сериям.
 Вдобавок, до выхода CoolReader 3.0.8, это была единственная читалка, которая  грамотно работала с RTF.
 И, по-моему только эта читалка, при нажатии на ссылку, ведущую  вовне , автоматически запускает Интернет-браузер.
 Еще, как выяснилось, FBReader отличается меньшей требовательностью к вставляемым в файл картинкам.
 Резюме. Если вас интересует, в первую очередь, порядок в личной библиотеке, эта читалка для вас.


Прочие средства

 Популярная «навороченная» читалка IceBook Professional номинально поддерживает FictionBook. Чисто номинально, так как она преобразует книгу в свой внутренний формат. При этом все структурирование, заголовки, информация description, а также картинки, пропадают.
 Файловый менеджер Total Commander также неплохо умеет просматривать FB-книги. Его встроенный просмотрщик Lister отсекает тэги, а заодно и description, оставляя чистый текст. Маленькое «но»: все это корректно работает только в том случае, если книга представлена в кодировке windows-1251.
 Похожим образом работает и одна из лучших читалок для PalmOS — PalmFiction. Тэги FB2 «выкусываются», оставляя чистый текст. Учитывая то, что «забросить» FB-шку на Palm не так-то просто (если не ошибаюсь, сделать это возможно только через карту памяти) целесообразность такой «поддержки для галочки» выглядит весьма сомнительной.
 Разумеется, здесь перечислены далеко не все программы-читалки, разрабатывавшиеся под FictionBook. Автор уделил внимание лишь самым проработанным и распространенным. Более-менее полный их список можно найти на сайте Fictionbook.org в разделе Программы/Программы для чтения.

 § 6.2 Пакет FB2Any

 Пакет FB2 to Any предназначен для конвертирования FB2 в форматы txt, iSilo pdb, RTF, LIT (Micro$oft Reader), RB (Rocket e-Book).
 Пакет состоит из комплекта скриптов vbs, библиотек dll, xsl-файлов, а также оболочки FB2Batch для пакетного преобразования.
 Работа с оболочкой крайне проста.
 Вначале выбираем желаемый формат. « Select output format… ». Причем, можно выбрать сразу несколько. Для этого выделяем их, зажав клавишу Ctrl.
 Каждый режим имеет свои настройки. Выделив нужную строчку в списке « Select output format… », щелкаем кнопочку « Configure ».
 Подробнее настройки будут рассмотрены ниже.
 Далее идет выбор директории, где будут сохраняться преобразованные файлы. « Store output files to: ». Предусмотрено три варианта.
 Радиокнопка « Store converted files near fb2 original » указывает программке сохранять выходные файлы по месту расположения входного файла.
 Вторая радиокнопка « Place all converted files to this folder » помещает выходные файлы в директрию, которая выбирается в поле, расположенном прямо под радиокнопкой. Щелкнув кнопочку «…», можно выбрать или создать подходящую папку.
 NB! Если же в поле вручную введено имя несуществующей папки, то автоматическое создание ее не предусмотрено.
 Третья радиокнопка « Name and place new files using the follwing rule: » предусматривает переименование выходных файлов и «раскассирование» их в папки согласно вводимым в нижерасположенном поле правилам.
 Список правил, можно узнать, нажав кнопку «Help?». Ниже помещен этот же список с переводом.

 You can use the following patterns:
 (For example file "c:\temp\books\foo.fb2", Stephen King's book "Thinner")
 %1      Drive letter of source fb2 file ("c") {Буква диска, на котором находится исходный файл fb2}
 %2      Path of source fb2 file ("temp\books") {Путь к исходому файлу fb2}
 %3      Source fb2 file folder ("books") {Папка, в которой находится исходный файл fb2}
 %4      Source fb2 file name ("foo") {Имя исходного файла fb2}
 %t      Book title ("Thinner") {Название книги}
 %f      Book author's first name ("Stephen") {Имя автора книги}
 %s      Book author's middle name (empty in our example) {Отчество автора книги}
 %l      Book author's last name ("King") {Фамилия автора книги}
 %5      Book's language ("en") {Язык, на котором написана книга}
 %6      Book's src-lang (empty in our example) {Исходный язык книги}
 %y      Book's year-written ("1984") {Год написания книги}
 %d      Book's id ("7539E335-30DA-49EC-B5B9-36697DB55C48") {Идентификационный номер книги}
 %v      Book's version ("1.0") {Версия файла книги}

 Далее идет список входных файлов. Файлы fb2 и папки с ними можно либо перетаскивать на этот список, либо добавлять с помощью кнопок « Add files… » и « Add files from folders… ». Удалять лишние файлы из списка нужно кнопочкой « Delete »
 Выбрав нужный формат (или форматы), файлы для преобразования и место их сохранения, жмем кнопку «Convert».
 Теперь давайте взглянем на форматы преобразования более внимательно.


FB2–>iSilo (*.isilo.pdb)

 Преобразование в формат читалки iSilo (PalmOS, PocketPC, Win32).
 Книга предварительно преобразуется в HTML, который затем обрабатывается штатным конвертором iSilo.
 Настройки предусмотрено только две « Skip all images » — пропустить все картинки и « TOC Depth » — глубина вложения оглавления (по умолчанию — 2, если 0 — оглавление отсутствует).


FB2–>TXT (*.txt)

 Преобразование в обычный текст.
 Конвертация стандартная, придраться не к чему.
 Настроек у этого режима много.
 « Skip description » — пропустить заголовок FictionBook.
 « Fixed width text » — форматировать текст согласно заданной длины строки. Иначе — один абзац, одна строка. Если поставить галочку в опции «Hypernate», то форматиование будет с переносами.
 « Indent paragraph with this text: » — строка, которая будет идти в начале каждого абзаца. Если ввести пробелы — получится обычный отступ, «красная строка».
 Тут есть тонкость. Если эта опция отключена, или строка пуста, то после каждого абзаца будет следовать пустая строка.
 Если же выполнять конвертацию в текст не через batch-оболочку, а через иконку в программной группе «FB to Any» то вместо этой опции будет « Paragraph indent », предлагающий ввести отступ в начале строки числом.
 « Do not convert strong to STRONG » — НЕ преобразовывать выделения жирным шрифтом в заглавные буквы.
 « Do not convert italic to _italic_ » — НЕ  преобразовывать выделения курсивом в помеченные знаком подчеркивания.
 « Text encoding ». Позволяет выбрать кодировку текста.
 « Line break type ». Способ перевода строки. Три варианта: Windows (CR\LF), Unix (LF), Macintosh (CR).


FB2–>RTF (*.rtf)

 Преобразование в Rich Text Format. Чаще всего применяется, чтобы распечатать файл.
 Довольно качественная конвертация. Грамотно обрабатываются выделения шрифта, заголовки, картинки.
 Настроек всего пять.
 « Skip all images » — не вставлять в выходной файл картинки.
 « No cover image » — не вставлять в выходной файл картинку обложки.
 « Skip description » — пропустить заголовок FictionBook.
 Две последние опции « Compatible encoding » и « Compatible images » служат для придания выходному файлу большей совместимости с разным софтом.


FB2–>LIT (*.lit)

 Преобразование в формат Micro$oft Reader.
 Опции у этого режима полностью аналогичны FB2–>iSilo.


FB2–>RB (*.rb)

 Преобразование в формат Gemstar Rocket e-Book. Аналогично iSilo, файл сперва преобразуется в HTML, а затем обрабатывется внешней утилитой rbmake.
 Настройки таковы:
 « Skip description » — пропустить заголовок FictionBook.
 « No images » — не вставлять в выходной файл картинки.
 « No cover » — не вставлять в выходной файл картинку обложки.
 Следом идет блок « Cyrillic support » (поддержка кириллицы) с одной-единственной опцией « Translit title and author name » (транслитерировать название книги и имя автора)
 Блок « Table of content generation » предлагает настроить создание оглавления. Можно отказаться от оглавления вообще (« No table of content »), выбрать включение заголовков первого («top-level», второго «two-levels deep», третьего «three-levels deep» уровня вложеннности, или, вообще, включить ВСЕ заголовки. («Include ALL headers to toc»)
 Опция « Shorten multi-line headers in TOC » позволяет урезать при этом длинные заголовки, занимающие несколько строк.
 Блок « Text formatting » позволяет настроить форматирование текста.
 Текст будет прерываться и начинаться с новой страницы на заголовках первой, второй, третьей степени вложенности, на любой секции или вообще разрывов не будет.
 Можно также настроить гарнитуру шрифта и ориентацию страницы (портретная/альбомная).




 Часть VII
 Прочее программное обеспечение для работы с FictionBook



 § 7.1 Программа-библиотекарь для книг в формате FictionBook

 Вы уже привыкли читать «с экрана», вы читаете много, и ваша коллекция электронных книг постоянно растет. Но когда количество книг переваливает за вторую сотню, то внезапно обнаруживается, что найти нужную книгу становится все труднее.
 Поневоле приходишь к мысли, что нужен каталогизатор или оболочка, который позволит рассортировать массив файлов и эффективно ориентироваться в нем.
 Специально для этих целей Дмитрий Пустовит и Олег Князев написали программу FB2Librarien («Библиотекарь»).
 Данное описание верно для версии 1.4.0.0


Основные функции и возможности программы:

 Ведет базу данных всех имеющихся книг. Информация хранятся в формате бесплатной СУБД Firebird 1.5.
 Автоматически сортирует книги, согласно описаниям (description).
 Отображает всю информацию о книге, включая аннотацию и обложку.
 Позволяет добавлять дополнительную информацию, например, подробные сведения об авторе.
 Поддерживает раздельную работу пользователей. Для каждого пользователя ведется отдельная история чтения книг, избранное.
 Позволяет пользователям оценивать книги и добавлять рецензии.
 Может экспортировать книги из библиотеки на ActiveSync устройство (поддерживаются устройства под управлением WinCE и PalmOS) или просто в отдельную папку.
 Может работать в локальной сети.
 Поддерживает скины .msstyle.
 Можно экспортировать список всех книг в html-файл.


Установка программы

 Скачать программу можно с ftp-сервера Fictionbook.org. Раздел pub. Программа полностью бесплатна. Для работы FB2Librarien требуется M$ Windows 2000 или XP. Запуск программы под Windows 9x возможен, но там она работает не совсем корректно.
 Распакуйте архив в нужную директорию. Совсем не обязательно, чтобы она была в Program Files. Лучше всего создать директорию в корневом каталоге диска, например, D:\FB2LIBR.
 При этом установка Firebird на ПК вовсе не требуется. Необходимая dll-ка включена в дистрибутив программы. Сервер Firebird будет нужен только при работе в локальной сети.
 При первом запуске программы автоматически открывается пустая база данных. Она хранится в каталоге, где находится программа, в поддиректории Library.
 Можно использовать ее, а можно создать свою.


Cоздание новой базы данных.

 Новая база создается с помощью функции меню « Библиотека/Создать » ( Ctrl+N ).
 Выбираем способ хранения книг «База данных» или «Файловая система».
 При способе хранения «База данных» файлы книг хранятся в теле самой базы данных, в поле BLOB.
 При способе хранения «Файловая система» книги размещаются в специально отведенной папке, упакованные в архивы ZIP. Для каждого автора создается отдельная папка «имя_фамилия».
 Нужно указать местоположение файла базы и его формат (рекомендуется .fdb), а для способа хранения «Файловая система» еще и папку, где будут храниться книги — точку монтирования.
 Способ хранения данных можно в любой момент изменить. Делается это функцией меню « Библиотека/Изменить способ хранения ».
 В настройках, « Инструменты/Опции », в разделе « Хранилище » тоже присутствует выбор « База данных/Файловая система ». Однако попытка изменить способ хранения книг таким образом, может привести лишь к тому, что часть книг будет в базе, а часть — в папках.
 Иногда, после создания базы выскакивает окно с ошибкой и база не добавляется в список доступных баз. В таком случае вызываем функцию « Библиотека/Открыть » и добавляем ее вручную (« Добавить в портал »).
 Чтобы начать работать с программой необходимо:
 а) авторизоваться;
 б) закачать книги в базу данных.


Авторизация и управление пользователями.

 Чтобы выполнить какое-либо действие, затрагивающее содержимое базы данных, например, добавить книги в библиотеку, необходимо авторизоваться (ввести имя пользователя).
 Программа сама предложит вам авторизоваться, как только вы попытаетесь выполнить действие, которое доступно только для зарегистрированного пользователя.
 На панели инструментов есть специальная пиктограмма «Авторизация» (стилизованное изображение человека). Или нажмите  Ctrl+L .
 Вводим имя пользователя (логин), и, если требуется, пароль. Щелкнув по кнопке со стрелкой, можно выбрать пользователя из списка.
 Изначально в базе уже есть встроенный пользователь «owner», имеющий права владельца библиотеки. По умолчанию ввод пароля для него не требуется.
 Если установить галочку «Запомнить», при последующих запусках программы будет осуществляться автоматический вход под соответствующим логином.
 Можно тут же создать нового пользователя. Для этого щелкните по ссылке «Регистрация».
 В появившемся окошке введите имя пользователя, и, если считаете нужным, пароль. Пароль вводится два раза.
 Данные о пользователях хранятся в самой базе данных библиотеки. Поэтому если вы создали новую базу, там нужно будет регистрироваться по-новой.
 Для редактирования списка пользователей есть функция « Инструменты/Пользователи ».
 Редактировать список пользователей может только владелец базы.
 Щелкнув правой клавишей по нужной строке, можно назначить пользователю привилегии. Их, собственно, две. «DB Owner» (Владелец базы) и «Can Edit» (Может редактировать).
 Привилегия «Can Edit» всего лишь позволяет редактировать описание (description) книги.
 Привилегия «DB Owner» предоставляет пользователю администраторские права. Только владелец базы может удалять книги, настраивать синонимы авторов, менять настройки пользователей.
 Как быть если вы удалили пользователя owner, и в списке пользователей не осталось ни одного логина с правами владельца базы?
 Все просто. Создаем новую базу и открываем (« Библиотека/Открыть ») ее. Авторизуемся как пользователь owner и тут же открываем оставшуюся «бесхозной» базу. Регистрируем пользователя и присваиваем ему права «владелец базы». Вуаля!


Добавление книг в библиотеку.

 Для пополнения базы новыми книгами существует команда « Библиотека\Добавить книгу ».
 В верхней строчке панели «Source files» нужно указать каталог, в котором будет производиться поиск новых книг.
 Файлы книг могут быть упакованы в ZIP‑архивы.
 Затем вызываем команду «File\Поиск FB2-файлов».
 В панели «Source files» появится список найденных файлов с книгами.
 Пометив нужные файлы (если активна функция «Дополнительно\Помечать файлы в процессе поиска» все найденные файлы помечаются сразу), вызываем команду «File\Обработать выбранные файлы». В правой части экрана отображается ход операции.
 Вся информация о выполненных операциях будет храниться, пока вы не очистите соответствующий журнал.
 Не следует добавлять за один раз более 1000 книг, так как это чревато зависанием программы.


Paбота с программой

 Основное рабочее окно программы разделено на три части и имеет четыре закладки. «Авторы», «Серии», «Жанры» и «Новинки» Соответственно, книги в них сортируются по фамилии автора, серии, жанру и поджанру, а также времени поступления в библиотеку.
 В закладке «Авторы» слева идет список авторов книг, входящих в библиотеку. По умолчанию — всех, но щелчком по букве алфавита вверху их можно отсортировать по нужной букве.
 В закладке «Серии», соответственно, слева находится список серий. Ну и так далее.
 Правая часть экрана для всех закладок почти одинакова.
 Сверху идет список книг, отсортированный по соответствующему признаку. Ниже — описание текущей книги. Название книги, вхождение в серию и порядковый номер в ней, жанр, а также аннотация книги.
 Рядом, левее, находится картинка обложки, если она есть. Ниже обложки — количество рецензий и оценка читателей.
 При наведении курсора на картинку обложки, появляются две кнопки с изображением лупы и дискеты. С их помощью картинку можно просмотреть в увеличенном виде или сохранить в файл. Впрочем, вместо щелчка по пиктограмме лупы с тем же результатом можно щелкнуть по самой картинке.
 Щелкнув по цифре оценки (или тому месту, где она должна находиться) можно вызвать функцию голосования — оценки книги. Теоретически — по пятибалльной системе, практически — произвольную. Оценка, которую программа выводит под обложкой книги, является средним арифметическим всех выводимых оценок.
 Двойной клик по названию книги в списке открывает ее в программе чтения. По умолчанию это HaaliReader, исполняемый файл которого входит в дистрибутив программы, но в опциях можно назначить и другую читалку.
 К большому сожалению, пока не существует читалки, предусматривающей раздельные настройки для каждого пользователя индивидуально. Поэтому если библиотекой пользуются одновременно несколько человек, могут возникнуть некоторые неудобства, особенно, если пользователи читают одни и те же книги.
 Функция поиска в программе довольно спартанская. По слову или фрагменту слова, регистронезависимая. Поиск производится в полях базы «Автор», «Название», «Серия».
 Довольно много функций завязано на правую кнопку мыши.
 Кликнув по имени автора в соответствующем списке, в закладке «Авторы», можно ввести подробную информацию о данном авторе («Редактировать информацию об авторе»), удалить автора (вместе с его книгами), а так же назначить синонимы.
 Что такое синонимы?
 Некоторые авторы публикуются как под собственным именем, так и под псевдонимами. Или под несколькими псевдонимами. Например: Кир Булычев — Игорь Всеволодович Можейко. Чтобы объединить их как одного автора,  в программе введены синонимы.
 Можно ввести синонимы вручную («Редактировать синонимы»). А можно назначить конкретного автора как синоним другого, используя функцию «Добавить как синоним». Автор исчезнет из списка, а его книги будут добавлены к книгам того автора, которому вы его назначили в синонимы.  Внимание! Операция необратима! 
 Последняя функция, доступная по щелчку правой клавишей в списке авторов, «Проверка написания». Она позволяет выявить некириллические символы в имени-фамилии автора.
 Щелчок правой кнопкой мыши по названию книги в списке книг (любая закладка) вызывает следующие функции (большинство из них продублировано в пункте главного меню «Книга»:
 « Пометить как прочитанную » ( Ctrl+Y ). Название книги выделяется зеленым цветом и рядом появляется зеленый квадратик. Книга добавляется в список «История».
 « Снять пометку о прочтении » ( Ctrl+Alt+Y ) — снимает эту пометку.
 « Запланировать к прочтению »( Ctrl+P ). Добавляет книгу в отдельный список книг, которые вы планируете прочесть в первую очередь. Cписок можно просмотреть с помщью пиктограммы на основной панели («Показать запланированные к прочтению») включает дополнительную закладку.
 « Исключить из запланированных к прочтению »( Ctrl+Alt+P ) — соответственно, удаляет книгу из списка заплнированных к прочтению.
 « Добавить в избранное » ( Ctrl+B ), « Удалить из избранного » ( Ctrl+Alt+B ). Помещает книгу в список «Избранное» или удаляет из оного. Таким образом можно выделять книги, которые особенно заинтересовали. При этом программа считает, что вы прочли эту книгу, и одновременно помечает ее, как прочитанную. Список «Избранное» можно просмотреть, нажав пиктограмму «золотая звездочка» на панели инструментов.
 « Просмотреть рецензии » ( Ctrl+Q ). Вызывает функцию работы с рецензиями.
 « Цитаты » ( Ctrl+W ) — вызывает функцию работы с цитатами.
 « Голосование » ( Ctrl+U ). Позволяет выставить книге оценку.
 « Читать в выбранной программе » ( Ctrl+H ). Просмотр книги. Аналог двойного щелчка.
 « Сохранить книгу(и) на диск » ( Ctrl+S ) — сохраняет книгу (или несколько книг) в указанную папку, в виде zip-файла.
 « Отправить книгу(и) на WinCE устройство ». Позволяет отправить книгу на устройство под управлением Windows CE (Pocket PC). Должен быть проинсталлирован драйвер устройства или программа-синхронизатор.
 « Отправить книгу(и) на Palm устройство ». Отправляет книгу в папку, где ее «подцепит» синхронизатор Palm.
 « Править информацию о книге » — редактирование description книги. Сделано эта функция качественно, гораздо лучше, чем в FB Editor. Можно даже масштабировать картинку обложки
 Требуется привилегия «Может редактировать» или «Владелец базы».
 « Удалить книгу » ( Ctrl+D ) — удаляет книгу из базы. Требуется привилегия «Владелец базы».
 Еще в контекстное меню можно добавлять пользовательские функции. Делается это при помощи кнопочки «Пользовательское меню» («Инструменты\Опции», закладка «Общее»).

 Откроется форма для настройки меню:
 Чтобы ввести новый пункт меню, нажмите кнопку [+] на панели формы. Откроется форма для ввода нового пункта меню.
 Заполните поля:
 Unpack — отметьте, если хотите, чтобы сжатый файл был предварительно распакован перед вызовом команды. Если не отмечен, файл будет в формате Zip.
 Item caption — введите название пункта менюApplication — введите или выберите программу, которая будет вызываться при выборе пункта меню. Допускается выбирать исполняемые файлы (*.exe, .com), скрипты (*.cmd, *.bat), а также произвольные файлы, которые ассоциированы в системе с приложениями.
 Parameters — параметры, которые будут добавлены в командную строку при вызове программы.
 Допускаются следующие специальные символы, которые имеют специальное значение (обратите внимание, что это строчные буквы латинского алфавита):
 %i — полное имя файла с книгой (с расширением fb2, если пункт Unpack отмечен, или zip, если не отмечен);
 %o — имя файла без пути (с расширением fb2, если пункт Unpack отмечен, или zip, если не отмечен).
 %n — имя файла без пути и без расширения.
 Нажмите кнопку Ok, чтобы создать пункт меню. 
 Если нужно удалить пункт меню, нажмите кнопку [–].
 Чтобы сохранить пользовательское меню, нажмите кнопку “Save” (с изображением дискетки).
 Затем еще раз Ok, чтобы закрыть диалог “Настройки”.
  Пример. 
 Чтобы создать пункт меню, при выборе которого книга будет копироваться в определенную папку (например, для последующего чтения, в распакованном виде в папку c:\ToRead), введите следующее:
 Unpack =  отмечено 
 Item caption =  Копировать для чтения (fb2) 
 Application =  cmd.exe 
 Parameters =  /c copy “%i” “c:\ToRead\%o” 
 В результате выбора этого пункта меню распакуется файл с книгой и выполнится команда:
  cmd.exe /c copy “c:\fb2lib\library\tmp\book.fb2” “c:\ToRead\book.fb2” 

    По материалам файла Fb2Lib_UserMenu_Guide.doc

    © 2007, TaciturnMan

 Чуть подробнее о рецензиях. Функция вызывается щелчком по количеству рецензий под рисунком обложки или по правому щелчку мыши. Пиктограмма с зеленым знаком «плюс» позволяет добавить свою оценку книги в произвольной форме. Логин, дата и время добавляются автоматически. Пиктограмма с красным крестиком вызывает отдельное окно, где можно редактировать и удалять рецензии. Обычный пользователь — только свои, владелец базы — все.
 Аналогичным образом работает функция «Цитаты». 
 В программе «зашита» последняя версия списка жанров FictionBook. Но, на всякий случай, есть функция их обновления («Инструменты\Загрузить XML с жанрами»). В открывшемся окошке выбираем нужный файл (обычно это FictionBookGenres.xsd)
 В целом, несмотря на некоторую «сырость», программа является простым и удобным средством работы с большим количеством книг.

 § 7.2 Утилита Booki

 Программа предназначена для обработки файлов с книгами.  Не требует инсталляции, после первого запуска может вызываться из проводника через контекстное меню обрабатываемых типов файлов (функция «Утилита Booki»).
  Умеет обрабатывать текстовые, fb2 и rtf файлы (в том числе в zip-архивах). Выполняет операции как с отдельным файлом, так и сразу со всеми файлами в текущем каталоге. Может запускаться в режиме, когда операции c файлами выполняются без вывода окна программы на экран. Выполняемые операции и обрабатываемые файлы задаются через параметры командной строки. Параметры командной строки подробно описаны в документации к программе — небольшом html-файле, котрорый «зашит» в exe-шник программы. Дублировать его здесь ради увеличения объема книги, я не считаю возможным.
 Программа позволяет:
 1. Переименовывать файлы с книгами. Программа определяет автора, название и серию книги из файла, формирует новое имя файла и переименовывает файл. Имя файла формируется скриптом, который задается в настройках программы. Синтаксис и функции скрипта описаны в документации к программе.
 2. Перемещать («раскассировать») файлы по каталогам. Программа определяет автора, название и серию книги из description файла, формирует имя каталога, если необходимо создает его, и перемещает файл в этот каталог. Имя каталога формируется скриптом, который задается в настройках программы. Синтаксис и функции скрипта описаны в документации.
 3. Перекодировать fb2 файлы из кодировки UTF-8 в WIN1251, что уменьшает размер файла примерно на 40% (в zip-архиве на 10-15%). Если в файле встретится символ, который отсутствует в кодировке WIN1251, то программа не перекодирует файл.
 4. Переконвертировать файл из fb2 в txt. В настройках программы задается формат создаваемого текстового файла.
 5. Перекодировать текстовые файлы из кодировки DOS CP866 в WIN1251.
 К сожалению, все эти солидные достоинства омрачаются столь же весомыми недостатками.
 Помимо того, что утилита платная, крупным  недостатком утилиты является, то что она не совсем корректно работает с файлами, после редактирования в FB Editor. А если имя автора представлено одним ником — вообще не работает. 
 Хорошо хоть, в последних версиях конвертация в обычный текст доведена до вполне приемлемого уровня. Заголовки секций отбиваются пустыми строками.
 В общем, весьма достойная программка. Самый большой плюс ее, конечно же, в том, что она без каких-либо дополнительных библиотек или особых требований к ОС (программка прекрасно чувствует себя под Win9x) может сконвертировать FB2 в txt.


    При написании параграфа использовалась оригинальная документация утилиты Booki. 


 § 7.3 Программа-библиотекарь JEFLibrarian

 С недавних пор выбор программы для ведения FB2-библиотеки не сводится к FB2Librarian. Написанная пользователем, известным на форуме FictionBook.org под ником  hedgehog77 программа JEFLibrarian представляет собой неплохую альтернативу, да еще и многоплатформенную. Приверженцы Linux, несомненно, по достоинству оценят наличие версии под эту самую свободную в мире ОС.
 Софтина написана на языке Java и представляет собой пакет Java-скриптов с небольшим запускным exe-файлом.  Это требует наличия на компьютере установленной Java-машины. Взять ее можно отсюда:  http://www.java.com/ru/download/manual.jsp 
 Формат базы данных основан на наработках Eclipse.
 Пока что программа находится в стадии активной разработки. Поэтому ограничимся кратеньким обзором, особенно не вдаваясь в тонкости.
 Установка программы сводится к распаковке архива в нужную папку.
 После первого запуска все рабочее окно занимает вкладка Welcome.
 Так как никакой функциональной нагрузки эта вкладка, пока что, не несет, проще всего ее закрыть, щелкнув на крестик, в заголовке вкладки, возле надписи «Welcome». Теперь мы получили доступ к рабочему интерфейсу. Как видим, он, хотя и несколько необычен для Windows, но вполне симпатичен и дружелюбен. Он состоит из окон-вкладок, которые могут сворачиваться в док-панели.
 Имеется восемь вкладок: «Home» — общая информация и статистика по базе, она же история чтиения книг.. «Authors» — непосредственно книги, рассортированные по авторам. «Series», «Genres», «Keywords» — сортировка книг, соответственно, по сериям, жанрам и ключевым словам. «Search» — поиск и, последняя «Add books» — добавление новых книг.
 Первым делом надо создать новую базу. Вызываем пункт меню  Library\New book . Выбираем имя файла и папку, где она будет располагаться. Потом вводим внутреннее имя базы («Моя либа»), и, если требуется краткую аннотацию. Также можно выбрать способ хранения книг — внутри базы или внешний. Во втором случае нужно будет указать еще корневой каталог базы. Вообще, на момент написания книги, внутренний способ хранения казался более отлаженным.
 Теперь можно добавлять в базу книги. Вызовите пункт меню  Library\Add book или щелкните по заголовку нужной вкладки. Предусмотрено три способа добавления новых книг — выбрать папку, выбрать отдельный файл и скачать файл из Сети.
 После выбора папки слева тут же будет отображен список файлов FB2, которые находятся в этой папке, а также вложенных в нее папках.
 Просмотрев список и подправив его в случае необходимости, жмем кнопку «Start import» (над списком, напоминает кнопку «Play» в медиа-проигрывателях). После окончания процесса итоги его можно увидеть внизу справа.
 Все. Можно работать с базой. Программа исправно сортирует книги, показывает обложки и  аннотации. Правда, чтобы читать книги, требуется сначала указать в настройках путь к exe-файлу читалки.
 Более того, книги из базы, помимо редактирования description можно редактировать во внешем редакторе. Делается это несколько замысловатым, но эффективным, способом.
 После выбора в контекстном меню пункта «Edit Book (ext. editor)» книга появится в списке «Files to edit» на вкладке «Home». Следом запустится программа-редактор, путь к которой был указан в опциях. После редактирования и сохранения книга останентся во временной папке библиотекаря, при этом будут доступны команды «Edit» (вернуться к редактированию), «Save» (сохранить книгу в базе) и «Cancel» ( просто удалить файл из временной папки, сбросив, таким образом, все изменения).
 В опциях библиотекаря также предусмотрена возможность подключения внешних утилит, например, конвертора в PDF.
 Резюме. Если автору хватит терпения и энтузиазма довести разработку до конца, мы получим весьма приличный инструмент для наведения порядка в коллекции fb2-книг.




 Заключение.
 Копирайт и доступность



 — Слышал новость? Брежнева посадили!
 — Не может быть!
 — Только что по радио передали: «И в заключении Леонид Ильич Брежнев сказал…»

    Бородатый анекдот.


 Основные способы распространения программного обепечения и медиа-контента в России — воровство, грабеж и обмен награбленным.

    Из секретного отчета Micro$oft.



 Данный раздел содержит, в основном, язвительное брюзжание автора этой книги и не рекомендуется к прочтению поборникам копирайта, патологическим жлобам, а также сотрудникам правоохранительных органов.




О компьютерном «пиратстве» вообще.

 С того времени, как компьютеры перестали быть большими и пошли в массы, появилась проблема несанкционированного цифрового контента.
 Естественно с этим начали бороться. Применением программных и аппаратных защит, ужесточением законодательства.
 Всем уже в зубах навязли астрономические суммы убытков (полученные простым помножением стоимости лицензионного софта на взятое с потолка количество пиратских копий). Недавно вот новую пугалочку выдумали. Согласно результатам исследований (спонсированных, разумеется, все той же Micro$oft) нелицензионные программные продукты жутко убыточны, для компаний их использующих. Страшно, аж жуть!
 Но некоторые меры, принимаемые для борьбы с «пиратами» по-настоящему заставляют шевелиться волосы на голове.
 Вот в Штатах медиа-магнаты усиленно добиваются встраивания средств противодействия несанкционироаанному копированию в каждое цифровое устройство. Гип-гип, ура! В Германии запретили копировать любые диски с медиа-контентом. Зиг хайль! А вот российские депутаты додумались вообще запретить устройства для записи дисков, регистрируя их, как, некогда, во времена оны, пишущие машинки. Бурные и продолжительные аплодисменты!
 Работники прокуратуры, очевидно, добившись невероятных успехов в борьбе с обычной преступностью, двинулись по кафе и ресторанам — не звучит ли где музыка за которую не заплатили? Ату, «пиратов», ату, ату!
 И вот уже вальяжный господинчик вещает со страниц глянцевого компьютерного журнала: «Пора, наконец, попрощаться с этой совковой тягой к халяве. Купите себе недорогую Windows XP Home, вместо M$ Office, возможности которого вы все равно не используете, поставьте shareware-продукты.»
 Отдайте за них сумму, раза в два большую, чем вам обошелся компьютер… Ага. Щас. Вот только штаны подтянем и пойдем стройными рядами. Как только уровень жизни на постсоветском пространстве приблизится к уровню одного отдельно взятого мегаполиса — так сразу и пойдем…
 Вообще, все эти рассуждения о якобы какой-то  особой неистребимой страсти жителей xUSSR к халяве есть грязная демагогия. С таким же успехом можно рассуждать о скупости французов, экономности немцев, прагматизме американцев, прижимистости англичан и т.д.
 Автору надо платить — аргумент, конечно железный. Вот только понятие «автор» все чаще подменяется расплывчатым «правообладатель». Более того, свободное распространение информации очень активно смешивают с такими однозначно неблаговидными действиями, как присвоение чужих произведений (плагиат), а также подделка торговых марок. Все, это, дескать, одного поля ягоды, преступления против интеллектуальной собственности, чума XXI века.

 Сам факт существования свободного (сиречь, бесплатного) программного обеспечения вызывает у любителей копирайта бешеную злобу.
 Вот, недавно, Алексей Пажитнов, создатель игры «Тетрис», дал интервью испанскому сайту Consumer.es, где со вей ответственностью, со всей прямотой заявил, что свободное ПО разрушает рынок и мешает развитию технологий.
 В частности, было сказано, что созданием свободного ПО занимаются, в основном молодые нигилисты с мятежным характером. ( Потрясающая новость!) Основная цель таких «творцов» — вытеснение с рынка платных аналогов, что в итоге, наносит вред компаниям-производителям, а также и самому рынку программного обеспечения. Ведь именно коммерческие компании ( ну надо же!) разрабатывают новые технологии, которые потом имеют возможность копировать создатели бесплатных программ, своим «трудом» ( ай-ай!) подрывая развитие индустрии. Пажитнов считает, что было бы лучше, если бы свободного ПО вообще не было.
 Досталось на орехи и главному идеологу свободного программного обеспечения — Ричарду Столлману. Пажитнов заявил, что идеи Столлмана относятся к давно прошедшей эпохе. При этом Алексей Леонидович признался, что в 80-х сам исповедовал подобные взгляды, но теперь повзрослел.
 Учитывая то, что А.Л. Пажитнов теперь сотрудничает с Micro$oft, причину столь скоропостижного взросления уже немолодого человека понять несложно…



    По материалам газеты «Компьютерные Вести» от 6 марта 2008 г. (В. Станкевич. «Создатель „Тетриса“ против свободных программ»)

 Вопрос нелегального распространения цифрового контента стоит гораздо шире банального воровства. Тут и недовольство, тем что выложив немалые денежки за лицензионный продукт, не можешь быть полным его хозяином. И недостаточное преимущество лицензионного контента перед нелегальным. И завышенная стоимость оного контента. Про доступность и необходимость техподдержки вообще помолчим.
 Недаром ведь распространителей этого самого нелегального контента величают очень даже уважительно: «флибустьеры», «пираты».
 А кое-где господа флибустьеры уже объединяются в политические партии. И на полном серьезе пытаются отстаивать свои интересы. Вы что-нибудь слышали про партии карманников, гопстопщиков, домушников, шулеров? Я нет. Или в нашем безумном мире это только вопрос времени?
 Лично автор этой книги был и остается убежденным сторонником свободы информации и компьютерного «пиратства», как ее проявления. Не халявы как таковой, а свободной и доступной информации.
 Я с удовольствием куплю недорогой и качественный лицензионный продукт. Но я также не испытаю абсолютно никаких угрызений совести, покупая пиратскую сборку или скачивая варез.
 Мне непонятно, почему я должен платить сотни убитых енотов за M$ Windows, технической поддержкой которой я никогда не воспользуюсь, и, что самое главное, ее производитель несет ответственность за ущерб, возникший в результате ошибок в программном коде в размере, не более чем стоимость продукта. 
 И мне никогда не понять, почему за склепанную «на коленке» утилитку просят 30-50$, когда существуют бесплатные аналоги.
 Повторюсь, я не вижу ничего дурного в некоммерческом использовании вареза. Установка «пиратского» софта на фирмах и предприятиях, а также любое другое извлечение прибыли путем использования оного — это тема, выходящая за рамки данной статьи.
 Более основательно и подробно об античеловеческой сущности копирайта сказано в книге Михаила Вербицкого «Антикопирайт». Трудами автора этой книги ее можно найти в основных сетевых библиотеках. Также рекомендую статью Ричарда Столлмана «Почему у программ не должно быть хозяев».


О книжном «пиратстве» в частности

 Как уже отмечалось, свободное, сиречь «пиратское» распространение книг в Рунете приняло громадные масштабы.
 Современные онлайн-библиотеки, представляют собой плод коллективного (и обычно безвозмездного!) труда сотен, если не тысяч людей.
 Сам факт, что отнюдь не избалованные бездельем люди, выкраивают время, чтобы  безвозмездно подготовить и выложить книгу, весьма и весьма занимателен. Этот феномен до сих пор еще ждет своего пытливого исследователя.
 А стало возможным все это не столько из-за несовершенства законодательства, сколько благодаря снисходительному попустительству бумажных издателей.
 Как заметил Сергей Лукьяненко:

  «…даже в России ситуация не столь печальна, чтобы сетевое воровство и впрямь волновало авторов и издателей. Дело в том, что основная масса читателей все-таки предпочитает держать в руках книгу, а не таращиться в монитор. Как гласит народная мудрость: „компьютер с собой в туалет не потащишь“. И пока не появилось по-настоящему дешевой и удобной „электронной книги“, воровство файлов особого вреда не наносит.
  А как только стараниями трудолюбивых китайцев такие книги появятся и станут продаваться в киосках союзпечати, ситуация с электронным пиратством коренным образом изменится.»

     («Апостолы инструмента», сборник «Гаджет»).

 Свежо предание, да верится с трудом. Учитывая, что уважаемый С. Лукьяненко сам пытался разобраться с держателями онлайн-библиотек и дальше громогласных угроз дело у него не продвинулось.
 Однако, к чести писателя, потерпев фиаско в борьбе с «пиратами», он решил действовать по-другому. Лукьяненко начал (причем в формате FB2 (!) и через FictionBook.lib (!!)) продавать свои книги через Интернет. И довольно успешно. Например, «Последний Дозор» был продан за три месяца в количестве 850 копий. И это только с FictionBook.lib. Сейчас книги Лукьяненко продаются на ресурсе «ЛитРес».
 К сожалению, дальше все не так радужно. К процессу начали подключаться коммерсанты. Печально известная компания КМ.ru уже провела несколько судебных процессов против свободных библиотек. Впрочем, довольно скоро КМ.ru сама оказалась в той же луже и, по крайней мере, на время, притихла.
 Таким образом, кроме активизировавшихся авторов и издательств, у онлайн-библиотек появился новый опаснейший враг — платные «стервисы». Именно они способны здорово потеснить поборников свободы информации. И, как будет показано ниже, справляются с этим более чем успешно.
 Но главным врагом свободы информации в Рунете, и бесплатных книг конкретно, являются все-таки не они, а развитие платежных систем. Чем доступнее и проще будут электронные платежи, тем меньше будет свободного контента…


Страсти вокруг «ЛитРес».

 Весной 2007 года была образована компания «ЛитРес». Крупнейшие сетевые библиотеки объединились и постановили, что книги, выкладываемые в них, отныне будут делиться на платные и бесплатные.
 Читатели Рунета восприняли новый сервис весьма неоднозначно.
 Да, безусловно, ссылка на «ЛитРес», красующаяся в любимой сетевой библиотеке, вместо линка на скачивание, раздражает чрезвычайно. Хотя, положа руку на сердце, народ больше всего выводит из себя вовсе не платные книги, как таковые (см. сентенцию про развитие платежных систем), а то, как рьяно «ЛитРес» отстаивает свои интересы…
 Также не лишены оснований опасения, что в дальнейшем, при отсутствии пусть нездоровой, но конкуренции в лице «пиратов», цены на книги будут расти.
 Еще будет очень неприятно, если ресурс превратится в своеобразный пылесос, который пытается подгрести все мало-мальски привлекательное.
 Отрицательным эффектом можно также счесть заметное увеличение траффика в сетевых библиотеках. Появившиеся книги торопятся скачать, пока они не исчезли.
 Это минусы. А плюсы?
 Согласитесь,   качественные   АВТОРСКИЕ тексты в популярном формате,  без какой-либо защиты , и по цене  почти на порядок ниже чем просят за бумажные томики, это не просто большой, это  ГИГАНТСКИЙ  плюс.
 Кстати, цена прямо пропопорциональна  объему книги. Этакое опрощенчество, книги «на развес». Не знаю, как к этому относятся авторы, но читателям точно не должно быть обидно.
 А для самых экономных (патологических любителей халявы, людей, не имеющих доступа к платежным системам и т.д. и т.п.) предусмотрена возможность чтения книг в окне браузера.
 Более того, при помощи не самых сложных ухищрений, текст книги даже можно сохранить на диск. Давно ведь известно, что все замки — от добрых людей, а все защиты — от честных пользователей. Однако, убив несколько часов на сохранение страничек, выдирание текста из html-ок, чистку его от протект-мусора, компоновку в нормальную книгу, структурирование, поневоле приходишь к неутешительному выводу, что проще и дешевле ( ничто не стоит так дорого и не ценится так дешево, как личное время! ) было бы эту книгу ПРОСТО КУПИТЬ. Книги — они предназначены для того, чтобы их читать, а не возиться с ними.
 Что и подтверждают читатели, голосующие кошельком за новый сервис.
 И, хотя, я, к сожалению, до сих пор не смог оценить «ЛитРес» по достоинству, из-за того, что мне категорически лень заводить электронный кошелек, а инфокиосков, аналогичных «Элекснет», в Минске пока что не наблюдается, я все же склоняюсь к мнению, что если это и есть будущее ( платных книг, не электронных библиотек! ), то оно очень даже привлекательное.
 Надо также понимать, что бОльшая часть книг, выложенная в онлайн-библиотеках, так там и останется. В бесплатном варианте. Прежде всего это начинающие авторы. Есть также великое множество произведений, срок действия авторских прав на которые окончился или они не востребованы наследниками. Или же они не востребуются вообще. А еще есть авторы, приветствующие свободное распространение их произведений. Как автор этой книги, например.
 Вон, даже FictionBook.lib потихоньку пополняется…


Резюме

 Технический прогресс в скором будущем, наконец-то сможет предоставить нам недорогие и удобные устройства для чтения книг. И, как показывает пример «ЛитРес», скорее всего они будут доступными. Время, когда при продаже e-book пытались отталкиваться от цены бумажных книг, начисто игнорируя тот факт, что для изготовления e-book не требуется ни бумага, ни дорогостоящие полиграфические услуги, безвозвратно уходит.
 Впрочем, в легальных e-book cамое неприятное — не ЦЕНА, а ЗАЩИТА.
 Невероятно противно, когда программа-читалка постоянно лазает в Интернет, дабы проверить ваше право читать книгу. Без постоянного доступа к Сети любовно собранная библиотека превращается в мертвый набор файлов.
 Хотя, вообще-то, попытки поставить защиту на e-book изначально обречены на провал. Любую книгу, даже с самой навороченной защитой, можно просто переснять с экрана при помощи фотокамеры и пропустить через OCR или упаковать в DjVu. К тому же, при соответствующей популярности любой закрытый формат будет обязательно взломан. Это лишь вопрос времени.
 Конечно же, «левые» e-book никуда не исчезнут. Они будут вытеснены в файлообменные сети и на «пиратские» сборники. Примерно так же, как сейчас обстоит дело с MP3. 
 А борьба с варезными сайтами и файлообменными сетями больше всего напоминает бой Дон Кихота с ветряной мельницей…
 Например, новая книга С. Лукьяненко «Чистовик» после нескольких неудачных попыток выложить ее на файлообменные сервисы, типа Рапидшары, приземлилась на тмутараканский сервер, откуда ее и качали все, кому не лень. Видимо, то же самое будет происходить и с любыми достаточно популярными изданиями.
 Что же касается редких книг, то, в большинстве своем, их можно будет найти на бесплатных сервисах.
 Больше всего, мне кажется, «пострадают» любители «жевачных» книг, наподобие современных женских детективов, «воровских» боевиков и псевдобоевой «попсовой» фантастики. Их авторы очень любят деньги, а хозяева андерграундных библиотек, аналогичных «Либрусек» и «Библиотека Старого Чародея», и прочие «пираты», просто не захотят связываться с подобной лабудой…
 Впрочем, любители такого «чтива» предпочитают «потреблять» его с бумаги. Чаще всего во время выделительного процесса…




 Благодарности


 Автор книги глубоко и искренне благодарен:
 Дмитрию Грибову и К° — за великолепный формат электронных книг.
 Михаилу Мацневу — за редактор FB Editor.
 Членам клуба FB — за подсказки и поддержку.
 Среди них особо: Sclex, Marina_Ch, vvv, LX, Alan-у, а также всем тем, кого я не смог вспомнить персонально.
 Также особая благодарность пользователям форума Fictionbook.org, заметившим ляпы и неточности в книге: BGReader, Kravejs.
 Держателям онлайн-библиотек — за их благородный и самоотверженный труд.
 А также всем прочим — за то, что не мешали.




 Обратная связь


 Книга эта будет регулярно обновляться. Последнюю версию всегда можно будет найти на сайте  http://www.yuzzich.narod.ru .
 Свои замечания и дополнения можно присылать на email  yuzzich@yandex.ru .
 Еще раз отмечу: это адрес для критики и дополнений. А не для вопросов «как мне сделать то или это». Во-первых, для этого существует форум FictionBook.org. Во-вторых, у автора просто нет времени на переписку.




 Приложения



 Приложение A
 Линки



 Библиотеки, поддерживающие FictionBook

  http://www.fictionbook.ru — FictionBook.lib;
  http://lib.aldebaran.ru — библиотека Альдебарана; Крупнейшая, на момент написания книги, библиотека Рунета.
  http://www.fenzin.org — библиотека «Фензин»; Специализируется на фантастике и фэнтэзи.
  http://www.litportal.ru — библиотека Литпортал.
  http://www.fanlib.ru — одна из новейших библиотек, по содержимому — аналог Альдебарана. Создавалась в пику постепенному переводу сетевых библиотек на платную основу, и, хотя обычная для библиотек Рунета болезнь под названием «удаление книг под давлением кого-нить влиятельного» поразила и ее, там можно найти некоторые книги, недоступные на FictionBook.lib или Альдебаране.
  http://www.lib.rus.eco — Либрусек, русскоязычная библиотека в Эквадоре. Последний бастион свободных e-book…
  http://publ.lib.ru — «Публичная Библиотека». Очень много djvu-версий журналов, технических книг. Вместе с тем, здесь регулярно появляются и текст обычных книг, в основном, выходивших в CCCP.
  http://www.litres.ru — «ЛитРес». Платные электронные книги.


Библиотеки, в которых регулярно появляются новинки:

  http://www.infonata.org — крупнейший книжный варезный блог.
  http://www.lib.ru — библиотека Максима Мошкова. К сожалению, в последние годы, стараниями поборников копирайта, сильно захирела.
  http://www.koob.ru — библиотека «Куб». Уникальное собрание текстов по психологии и самосовершенствованию.
  http://www.oldmaglib.com — «Библиотека Старого Чародея». В основном, переводная фантастика. Также плюют на копирайт и его поклонников.


Программы-читалки

  http://haali.cs.msu.ru/pocketpc — Haali Reader 2.0
  http://www.coolreader.org — CoolReader 2.0, 3.0
  http://alreader.kms.ru — AlReader 2.5
  http://www.fbreader.org  — FBReader 0.89


Программы-конверторы

  http://www.gribuser.ru/xml/fictionbook/2.0/software/Any2FB2.exe — Any2FB2
  http://home.arcor.de/fb.tools/ — Doc2FB.
  http://dikbsdsda.mylivepage.ru/file  — конвертор ExportToFB21 для Open Office.


Программы для редактирования FB2

  http://haali.cs.msu.ru/pocketpc/scripts.html.ru — FB Tools
  http://www.gribuser.ru/xml/fictionbook/2.1/FBTools_update.zip — обновление FB Tools


Прочие программы для FB2

  http://booki.h12.ru/ — программа Booki.
  http://www.assembla.com/wiki/show/jfblibpublic — библиотекарь JEFLibrarian.


Программы для работы с графикой.

  http://www.xnview.com — XnView, просмотрщик-конвертор.
  http://www.yafla.com — PureJPEG, чистка картинок JPEG от лишней информации.


Прочие программы

  http://www.grigsoft.com — Compare It, сравнение текстовых файлов.


Информация по JavaScript

  http://msdn.microsoft.com/workshop/author/dhtml/reference/dhtml_reference_entry.asp — MSDN Library.
  http://www.w3schools.com/js — полезные советы по JavaScript.

 Приложение Б
 Техническое задание на написание читалки (ридера)

 Ридер должен включать в себя два модуля:
 1. Библиотечный модуль — для персонального компьютера.
 2. Непосредственно ридер — для персонального компьютера и КПК.


Библиотечный модуль

  Общие требования 
 1. Информация берется из дескрипшина файлов fb2 или fb2.zip.
 2. В настройках указывается директория, содержащая книги.
 3. Библиотека должен автоматически сканировать директорию, содержащая книги при каждом вызове.
  Внешний вид 
 В форме необходимы следующие поля:
    1. Автор книги
    2. Название книги
    3. Серия
    4. Жанр
    5. Обложка
    6. Аннотация
    7. Поиск 
 Кнопки:
    1. Читать
    2. Послать в КПК
  Логика работы 
 В поле автора выбираем автора из списка.
 В поле жанра можно выбрать все жанры или определенный. При выборе определеного жанра в поле автора присутствует список только тех авторов, книги которых есть в этом жанре.
 В поле серии — список серий, присутствующих в библиотеке. При выборе конкретной серии, в поле авторов высвечивается автор серии, в поле книги — перечень книг только этой серии.
 При выборе автора появляется список его книг.
 При выборе книги появляется обложка и аннотация.
 По кнопке «читать» попадаем в ридер.


Ридер

  Общие требования 
 1. Должен понимать как просто формат fb, так и заархивированный (zip).
 2. Должен игнорировать все незнакомые тэги внутри pType элементов (см. схему) и внутри заголовка.
 3. Ридер волен реагировать на незнакомые тэги в других местах документа по своему усмотрению.
 4. Ридер, по возможности, должен сообщать об отсутствии обязательных тэгов.
  Форматирование 
 1. Должен иметь возможность работы с подключаемыми стилевыми файлами.
 2. Должен запоминать, к какому документу какой стиль привязан.
  Настройки 
 1. Настройки автоскроллинга (листание экрана, построчный скроллинг, плавный скроллинг)


    (По материалам старого форума FictionBook)



Необязательные, но весьма полезные,



дополнительные возможности («фичи»).

 1. Разбиение текста на условные страницы (с возможностью установить объем такой страницы в килобайтах) (реализовано: AlReader)
 2. Показ времени, затраченного на прочтение книги, с прогнозированием оставшегося. (реализовано: PalmFiction)
 3. Возможность экспорта книги в стандартные форматы: TXT, HTML, RTF (реализовано: CoolReader, AlReader);
 4. Возможность печати книги, желательно компактным буклетом. Или экспорт в PDF. (нигде не реализовано. Мечта небесного цвета автора этой книги.);
 5. Возможность правки текста. (реализовано: AlReader);
 6. Сноски показываются, как всплывающие окна. (реализовано: пока нигде); или размещаются внизу виртуальной страницы (реализовано: CoolReader).
 7. Возможность «пришивания» компактного запускаемого просмотрщика к книге (или, вернее, книги к такому просмотрщику, генерация «самопросматривающихся» книг). (реализовано: пока нигде. Еще одна мечта небесного цвета.).

 Приложение В
 Список жанров FictionBook

 В FB 2.1 определен следующий список жанров:
  Значение <genre>— Название — Название по-русски 
 * Science Fiction & Fantasy — (Научная фантастика и Фэнтези)
 sf_history — Alternative history — Альтернативная история
 sf_action — Action — Боевая фантастика
 sf_epic — Epic — Эпическая фантастика
 sf_heroic — Heroic — Героическая фантастика
 sf_detective — Detective — Детективная фантастика
 sf_cyberpunk — Cyberpunk — Киберпанк
 sf_space — Space — Космическая фантастика
 sf_social — Social-philosophical — Социально-философская фантастика
 sf_horror — Horror & mystic — Ужасы и Мистика
 sf_humor — Humor — Юмористическая фантастика
 sf_fantasy — Fantasy — Фэнтези
 sf — Science Fiction — Научная Фантастика 
 * Detectives & Thrillers (Детективы и Триллеры)
 det_classic — Classical detectives — Классический детектив
 det_police — Police Stories — Полицейский детектив
 det_action — Action — Боевик
 det_irony — Ironical detectives — Иронический детектив
 det_history — Historical detectives — Исторический детектив
 det_espionage — Espionage detectives — Шпионский детектив
 det_crime — Crime detectives — Криминальный детектив
 det_political — Political detectives — Политический детектив
 det_maniac — Maniacs — Маньяки
 det_hard — Hard-boiled — Крутой детектив
 thriller — Thrillers — Триллер
 detective — Detectives — Детектив, не относящийся в прочие категории. 
 * Prose (Проза)
 prose_classic — Classics prose — Классическая проза
 prose_history — Historical prose — Историческая проза
 prose_contemporary — Contemporary prose — Современная проза
 prose_counter — Counterculture — Контркультура
 prose_rus_classic — Russian classics prose — Русская классическая проза
 prose_su_classics — Soviet classics prose — Советская классическая проза 
 * Romance (Любовные романы)
 love_contemporary — Contemporary Romance — Современные любовные романы
 love_history — Historical Romance — Исторические любовные романы
 love_detective — Detective Romance — Остросюжетные любовные романы
 love_short — Short Romance — Короткие любовные романы
 love_erotica — Erotica — Эротика 
 * Adventure (Приключения)
 adv_western — Western — Вестерн
 adv_history — History — Исторические приключения
 adv_indian — Indians — Про индейцев
 adv_maritime — Maritime Fiction — Морские истории
 adv_geo — Travel & geography — Путешествия и география
 adv_animal — Nature & animals — Природа и животные
 adventure — Other — Прочие приключения (то, что не вошло в другие категории) 
 * Children's (Детское)
 child_tale — Fairy Tales — Сказка
 child_verse — Verses — Детские стихи
 child_prose — Prose — Детская проза
 child_sf — Science Fiction — Детская фантастика
 child_det — Detectives & Thrillers — Детские остросюжетные
 child_adv — Adventures — Детские приключения
 child_education — Educational — Детская образовательная литература
 children — Other — Прочая детская литература (то, что не вошло в другие категории) 
 * Poetry & Dramaturgy (Поэзия, Драматургия)
 poetry — Poetry — Поэзия
 dramaturgy — Dramaturgy — Драматургия 
 * Antique literature (Старинное)
 antique_ant — Antique — Античная литература
 antique_european — European — Европейская старинная литература
 antique_russian — Old russian — Древнерусская литература
 antique_east — Old east — Древневосточная литература
 antique_myths — Myths. Legends. Epos — Мифы. Легенды. Эпос
 antique — Other — Прочая старинная литература (то, что не вошло в другие категории) 
 * Scientific-educational (Наука, Образование)
 sci_history — History — История
 sci_psychology — Psychology — Психология
 sci_culture — Cultural science — Культурология
 sci_religion — Religious studies — Религиоведение
 sci_philosophy — Philosophy — Философия
 sci_politics — Politics — Политика
 sci_business — Business literature — Деловая литература
 sci_juris — Jurisprudence — Юриспруденция
 sci_linguistic — Linguistics — Языкознание
 sci_medicine — Medicine — Медицина
 sci_phys — Physics — Физика
 sci_math — Mathematics — Математика
 sci_chem — Chemistry — Химия
 sci_biology — Biology — Биология
 sci_tech — Technical — Технические науки
 science — Other — Прочая научная литература (то, что не вошло в другие категории) 
 * Computers & Internet (Компьютеры и Интернет)
 comp_www — Internet — Интернет
 comp_programming — Programming — Программирование
 comp_hard — Hardware — Компьютерное «железо» (аппаратное обеспечение)
 comp_soft — Software — Программы
 comp_db — Databases — Базы данных
 comp_osnet — OS & Networking — ОС и Сети
 computers — Other — Прочая околокомпьтерная литература (то, что не вошло в другие категории) 
 * Reference (Справочная литература)
 ref_encyc — Encyclopedias — Энциклопедии
 ref_dict — Dictionaries — Словари
 ref_ref — Reference — Справочники
 ref_guide — Guidebooks — Руководства
 reference — Other — Прочая справочная литература (то, что не вошло в другие категории) 
 * Nonfiction (Документальная литература)
 nonf_biography — Biography & Memoirs — Биографии и Мемуары
 nonf_publicism — Publicism — Публицистика
 nonf_criticism — Criticism — Критика
 design — Art & design — Искусство и Дизайн
 nonfiction — Other — Прочая документальная литература (то, что не вошло в другие категории) 
 * Religion & Inspiration (Религия и духовность)
 religion_rel — Religion — Религия
 religion_esoterics — Esoterics — Эзотерика
 religion_self — Self-improvement — Самосовершенствование
 religion — Other — Прочая религионая литература (то, что не вошло в другие категории) 
 * Humor (Юмор)
 humor_anecdote — Anecdote — Анекдоты
 humor_prose — Prose — Юмористическая проза
 humor_verse — Verses — Юмористические стихи
 humor — Other — Прочий юмор (то, что не вошло в другие категории) 
 * Home & Family (Домоводство (Дом и семья))
 home_cooking — Cooking — Кулинария
 home_pets — Pets — Домашние животные
 home_crafts — Hobbies & Crafts — Хобби и ремесла
 home_entertain — Entertaining — Развлечения
 home_health — Health — Здоровье
 home_garden — Garden — Сад и огород
 home_diy — Do it yourself — Сделай сам
 home_sport — Sports — Спорт
 home_sex — Erotica & sex — Эротика, Секс
 home — Other — Прочее домоводство (то, что не вошло в другие категории) 

 Приложение Г
 Список возможных языков

 Ниже приведены коды языков, которые можно прописывать в тэгах <lang>и <src-lang>.
 Здесь приведены только основные кодировки, полный список содержится в стандарте ISO 639:
 abk — ab — Абхазский
 aze az Азербайджанский
 alb/sqi sq Албанский
 eng en Английский
 arm/hye hy Армянский
 ba Башкирский
 bel be Белорусский
 bul bg Болгарский
 hun hu Венгерский
 vie vi Вьетнамский
 dut/nla nl Голландский
 ell/gre el Греческий современный (1453-)
 dan da Данийский
 grc Древнегреческий (до 1453)
 heb he Иврит
 esl/spa es Испанский
 ita it Итальянский
 kaz kk Казахский
 kir ky Киргизский
 chi/zho zh Китайский
 kor ko Корейский
 lat la Латинский
 lav lv Латвийский
 lit lt Литовский
 mac/mak mk Македонский
 mol mo Молдавский
 mon mn Монгольский
 deu/ger de Немецкий
 mul Несколько языков
 und Неопределенный
 nor no Норвежский
 fas/per fa Персидский
 pol pl Польский
 por pt Португальский
 rus ru Русский
 san sa Санскрит
 slk/slo sk Словацкий
 slv sl Словенский
 tgk tg Таджикский
 tat tt Татарский
 tur tr Турецкий
 uzb uz Узбекский
 ukr uk Украинский
 cym/wel cy Уэльский
 fin fi Финский
 fra/fre fr Французский
 che Чеченский
 ces/cze cs Чешский
 hr Хорватский
 sve/swe sv Шведский
 epo eo Эсперанто
 est et Эстонский
 jpn ja Японский

 Приложение Д
 Регулярные выражения


 == Важно! ========================
 Это описание было заимствовано из документации к программе Дмитрия Грибова СlearTXT. Реализация регулярных выражений в FB Editor  несколько отличается от СlearTXT. Поэтому, эта документация справедлива для FBE лишь с некоторыми оговорками.
 Хотя, в связи с тем, что регулярные выражения используются не только в FB Editor, но и в других программах, упомянутых в книге, было принято волевое решение привести это описание здесь полностью.
 ===============================

  Регулярные выражения  — широко используемый способ описания шаблонов для поиска текста и проверки соответствия шаблону. Специальные  метасимволы позволяют определять, например, что Вы ищете подстроку в начале входной строки или определенное число повторений подстроки.
 На первый взгляд регулярные выражения выглядят страшновато (ну хорошо, на второй — еще страшнее ;) ). Однако вы очень быстро оцените всю их мощь. Они избавят вас от длительного и нудного ручного поиска/замены/правки, а в некоторых случаях дадут вам возможности, реализация которых «ручками» даже не придет вам в голову.


СИМВОЛЫ

 Это простейшие случаи подстановок.
 \xNN — символ с шестнадцатеричным кодом NN
 \t — табуляция (HT/TAB), можно также \x09
 \n — новая строка (NL), можно также \x0a
 \r — возврат каретки (CR), можно также \x0d

 Пример: \r\n — поиск разрыва строки (Windows, DOS).



Поиск «одного из» — перечни

 Можно определить перечень, заключив символы в «[]». Перечень будет совпадать с любым  одним символом, перечисленным в нем.
 Если первый символ перечня (сразу после «[») — «^», то такой перечень совпадает с любым символом, не перечисленным в перечне.
 Внутри перечня символ «-» может быть использован для определения  диапазонов символов, например, a-z представляет все символы между «a» и «z», включительно.
 Если необходимо включить в перечень сам символ «-», его нужно поместить в начало или конец перечня или предварить «\». Если необходимо поместить в перечень сам символ «]», поместите его в самое начало или предварите «\».

 Примеры:
 п[иа]р — будут найдены буквосочетания «пир» и «пар». Но, допустим, не «пор».
 п[^иа]р — будут найдены буквосочетания «п…р» с любым символом между «п» и «р», кроме «и» и «а».


 [-az] — «a», «z» и «-»
 [az-] — «a», «z» и «-»
 [a\-z] — «a», «z» и «-»
 [a-z] — все 26 малых латинских букв от «a» до «z»
 [\n-\x0D] — #10, #11, #12, #13
 [\d-t] — цифра, «-» или «t»
 []-a] — символ из диапазона «]»..«a»

  Оговорка. В FB Editor  в режиме исходника  перечни, содержщие кирииллицу ФУНКЦИОНИРУЮТ НЕПРАВИЛЬНО. 


Метасимволы

 Метасимволы — это специальные символы, являющиеся важнейшим понятием в регулярных выражениях. Существует несколько групп метасимволов.
 • Разделители строк (начало строки, конец строки и т.п.)
 • Стандартные перечни символов (цифры, буквы и цифры и т.п.)
 • Границы слов (показывают, что вхождение должно быть на границе слова)
 • Повторения (указывает, сколько раз должна присутствовать последовательность)
 • Варианты (позволяет указать набор масок, с любой из которых должен совпадать текст)
 • Подвыражения (используются при замене)
 • Обратные ссылки (способ обратиться к подвыражениям при поиске)


Метасимволы — разделители строк и границы

  Разделители и границы 
 ^ — начало строки
 $ — конец строки
 \A — начало текста
 \Z — конец текста
 \b — Совпадает на границе слова
 \B — Совпадает НЕ на границе слова

 Примеры:
 ^Все — Находит все строки в тексте, начинающиеся словом «Все»
 \bмир — Находит все слова, начинающиеся буквосочетанием «мор». Слова будут найдены и в начале строк, и в середине.
 ^\x20$ — Находит все строки в тексте, состоящие из единственного пробела.

  Метасимволы — стандартные перечни символов 
 . (точка) — Любой символ
 \w — буквенно-цифровой символ или "_"
 \W — не \w
 \d — цифровой символ
 \D — не \d
 \s — любой «пробельный» символ: [\x20\t\n\r\f]
 \S — не \s
 Метасимвол «.» по умолчанию совпадает с любым символом, однако, если выключить модификатор s ((?-s), синтаксис см. ниже), то «.» не будет совпадать с разделителями строк.
 Стандартные перечни \w, \d и \s можно использовать и внутри  перечней символов .

 Примеры:
 —foob[\w\s]r — —находит «foobar», «foob r», «foobbr» но не «foob1r», «foob=r»
 —\+\d (\d\d\d) \d\d\d-\d\d-\d\d — —Находит телефон в формате «+7 (095) 555-55-55»

  Метасимволы — повторения 
 После любого элемента регулярного выражения может следовать очень важный тип метасимвола —  повторитель . Используя их Вы можете определить число допустимых повторений предшествующего символа, метасимвола или подвыражения.
 Указание числа вхождений
 * — ноль или более раз (может быть «жадным»), то же что {0,}
 + — один или более раз (может быть «жадным»), то же что {1,}
 ? — ноль или один раз (может быть «жадным»), то же что {0,1}
 {n} — точно n раз (может быть «жадным»)
 {n,} — не менее n раз (может быть «жадным»)
 {n,m} — не менее n но не более m раз (может быть «жадным»)
 *? — ноль или более раз («не жадный»), то же что {0,}?
 +? — один или более раз («не жадный»), то же что {1,}?
 ?? — ноль или один раз («не жадный»), то же что {0,1}?
 {n}? — точно n раз («не жадный»)
 {n,}? — не менее n раз («не жадный»)
 {n,m}? — не менее n но не более m раз («не жадный»)
 Т.о. {n,m} задает минимум n повторов и максимум — m. Повторитель {n} эквивалентен {n,n} и задает точно n повторов. Повторитель {n,} задает минимум n повторов. Теоретически величина параметров n и m не ограничена, но рекомендуется не задавать большие значения, поскольку в некоторых ситуациях это может потребовать существенных затрат времени и ОЗУ при обработке такого повторителя. 
 Небольшое пояснение по поводу «жадности». «Жадные» варианты повторителей пытаются захватить как можно большую часть входного текста, в то время как «не жадные» — как можно меньшую. Например, b+ как и b* примененные к входной строке «abbbbc» найдут «bbbb», в то время как b+? найдет только «b», а b*? — вообще — пустую строку; b{2,3}? найдет «bb», в то время как b{2,3} найдет «bbb».
 По умолчанию, в FB Editor повторители могущие быть жадными, являются таковыми.

 Примеры:
 foob.*r — находит «foobar», «foobalkjdflkj9r» и «foobr»
 foob.+r — находит «foobar», «foobalkjdflkj9r» но не «foobr»
 foob.?r — находит «foobar», «foobbr» и «foobr» но не «foobalkj9r»
 fooba{2}r — находит «foobaar»
 fooba{2,}r — находит «foobaar», «foobaaar», «foobaaaar» и т.д.
 fooba{2,3}r — находит «foobaar», или «foobaaar» но не «foobaaaar»
 ((\+\d )?\(\d{3}\) )?(\d{3}(-\d\d){2}) — Находит номера телефонов в форматах «+7 (095) 555-55-55», «(095) 555-55-55», «555-55-55». Это сложный пример, и в нем используется группировка скобками. Подробнее о применении скобок см. ниже.
 (?g)(<p>[^-].{5,59}</p>(\r\n)){4,} — Этот пример найдет нам стихи — цепочки (из 4-х и более) следующих друг за другом коротких (от шести до шестидесяти символов) параграфов. Такой вид (много коротких параграфов) характерен, например, для стихов. Первый знак не должен быть длинным тире, так как серии коротких параграфов характерны и для диалогов, а нам диалоги не нужны. Обратите внимание, что пришлось использовать модификатор жадности, так как в «не жадном» режиме мы бы нашли только четыре первых строфы.

  Метасимволы — варианты 
 Вы можете определить перечень  вариантов , используя метасимвол «|» для их разделения, например, fee|fie|foe найдет «fee» или «fie» или «foe», (так же как f(e|i|o)e). В качестве первого варианта воспринимается все от предыдущего метасимвола ( или [ или от начала выражения до первого метасимвола «|», в качестве последнего — все от последнего «|» до конца выражения или до ближайшего метасимвола). Обычно, чтобы не запутаться, набор вариантов всегда заключают в скобки, даже если без этого можно было бы обойтись.
 Варианты пробуются начиная с первого и попытки завершаются сразу же как удастся подобрать такой, при котором совпадет вся последующая часть выражения. Это означает, что варианты не обязательно обеспечат «жадное» поведение. Например, если применить выражение foo|foot ко входной строке «barefoot», то будет найдено «foo» так это первый вариант который позволил совпасть всему выражению.
 Обратите внимание, что метасимвол | воспринимается как обычный символ внутри перечней символов, например, [fee|fie|foe] означает ровно то же самое что и [feio|].
 <(p|div)>.*</(p|div)>— найдет все корректно закрытые параграфы. Так же найдутся и включения вида <p>TEXT</div>, так что это выражение можно применять только на однородном тексте. Как альтернативный вариант можно предположить (<div>.*</div>|<p>.*</p>) 
 Заметьте, что применив то же выражение в жадном режиме (?g)<(p|div)>.*</(p|div)>мы не найдем ничего полезного.
  Оговорка. Выражения с метасимволом «|» в FB Editor  в режиме исходника  НЕ ФУНКЦИОНИРУЮТ. 
  Метасимволы — подвыражения 
 У скобок в регулярных выражениях двоякая функция
 1. Скобки позволяют группировать элементы (аналогично математическому использованию)
 2. Скобки выделяют в исходном тексте  подвыражения , на которые можно ссылаться при замене. 
 Вы можете обратиться к любому подвыражению в  строке замены используя его номер. Подвыражения нумеруются слева направо, в порядке появления открывающих скобок. Ссылка осуществляется в виде $N, где N-номер.

 Примеры группировки:
 (проба){8,10} — находит строку содержащую 8, 9 или 10 копий «проба»
 про([0-9]|б+)а — находит «про0а», «про1а» , «проба», «пробба», и т.д.


 Примеры замены:
 <p>(.*)</p>—>>— <div>$1</div>— Заменит все параграфы на разделы
 ((\+\d )?\(\d{3}\) )?(\d{3}(-\d\d){2}) —>>— $3 — Найдет в любом телефонном номере вида «+7 (095) 555-55-55» последнюю часть «555-55-55»
 (?g)([\s\(]|\A|)(http://|ftp://|https://)([^\s\)"'<>]+) —>>— $1<a href="$2$3">$2$3</a>— Такая замена преобразует все URL, встреченные в тексте, в гиперссылки.
 (?g)([\s\(]|\A|)(www.)([^\s\)"'<>]+)—>>—$1<a href="http://$2$3"$target>$2$3</a>— Преобразует все строки типа www.domain.root в гиперссылки

  Метасимволы — обратные ссылки 
 Метасимволы от \1 до \9 воспринимаются как обратные ссылки. \N совпадает с ранее найденным подвыражением #N. В отличие от случая с заменой, где используются переменные $N, обратные ссылки можно применять в выражении поиска.

 Примеры группировки:
 (.)\1+ — находит «aaaa» и «cc»
 (.+)\1+ — также находит «abab» и «123123»
 (['"]?)(\d+)\1 — находит «"13"» (в дв.кавычках), или «'4'» (в один.кавычках) или 77 (без кавычек)

  Модификаторы 
 Модификаторы служат для изменения режимов работы регулярных выражений. Они вводятся в виде (?imsgr-imsgr). Если модификатор вписан после минуса — он отключается, если нет — включается. Модификаторы подвержены группировке (в Perl нет), можно применить модификатор для отдельного участка выражения (см. пример).
 Модификаторы:
 i — Регистро-независимый режим. Использует выбранный в ОС язык по умолчанию. По умолчанию выключено.
 m — Воспринимать входной текст как многострочный, при этом метасимволы ^ и $ будут совпадать не только в начале и конце текста в целом, но и в начале и в конце всех имеющихся в тексте строк (см. также Разделители строк). По умолчанию включено.
  s — Воспринимать входной текст как одну строку. При этом метасимвол «.» совпадает с любым символом, если же этот модификатор выключен, то он не совпадает с разделителями строк (см.также Стандартные перечни символов). По умолчанию включено.
 g — Включая его Вы переключаете все повторители в «жадный» режим. По умолчанию включено.
 r — Модификатор предназначенный для русского языка. Если включен, то диапазоны вида а-я включают также букву «ё», А-Я включают «Ё», а а-Я включает вообще все русские буквы. По умолчанию включено.

 Примеры группировки:
 (?i)Saint-Petersburg — находит «Saint-petersburg» и «Saint-Petersburg»
 (?i) — Saint-(?-i)Petersburg — находит «Saint-Petersburg» но не «Saint-petersburg»
 (?i)(Saint-)?Petersburg — находит «Saint-petersburg» и «saint-petersburg»
 ((?i)Saint-)?Petersburg — находит «saint-Petersburg», но не «saint-petersburg»

  Оговорка. В FB Editor модификаторы НЕ ФУНКЦИОНИРУЮТ. 


    При подготовке приложения использовалась документация к ClearTXT (автор — Алексей Сорокин).